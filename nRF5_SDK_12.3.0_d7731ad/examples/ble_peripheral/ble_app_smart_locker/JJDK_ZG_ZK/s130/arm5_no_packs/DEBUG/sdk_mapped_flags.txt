; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\debug\sdk_mapped_flags.o --asm_dir=.\DEBUG\ --list_dir=.\DEBUG\ --depend=.\debug\sdk_mapped_flags.d --cpu=Cortex-M0 --apcs=interwork -O0 -I..\..\..\config -I..\..\..\..\..\..\components -I..\..\..\..\..\..\components\ble\ble_advertising -I..\..\..\..\..\..\components\ble\ble_dtm -I..\..\..\..\..\..\components\ble\ble_racp -I..\..\..\..\..\..\components\ble\ble_services\ble_ancs_c -I..\..\..\..\..\..\components\ble\ble_services\ble_ans_c -I..\..\..\..\..\..\components\ble\ble_services\ble_bas -I..\..\..\..\..\..\components\ble\ble_services\ble_bas_c -I..\..\..\..\..\..\components\ble\ble_services\ble_cscs -I..\..\..\..\..\..\components\ble\ble_services\ble_cts_c -I..\..\..\..\..\..\components\ble\ble_services\ble_dfu -I..\..\..\..\..\..\components\ble\ble_services\ble_dis -I..\..\..\..\..\..\components\ble\ble_services\ble_gls -I..\..\..\..\..\..\components\ble\ble_services\ble_hids -I..\..\..\..\..\..\components\ble\ble_services\ble_hrs -I..\..\..\..\..\..\components\ble\ble_services\ble_hrs_c -I..\..\..\..\..\..\components\ble\ble_services\ble_hts -I..\..\..\..\..\..\components\ble\ble_services\ble_ias -I..\..\..\..\..\..\components\ble\ble_services\ble_ias_c -I..\..\..\..\..\..\components\ble\ble_services\ble_lbs -I..\..\..\..\..\..\components\ble\ble_services\ble_lbs_c -I..\..\..\..\..\..\components\ble\ble_services\ble_lls -I..\..\..\..\..\..\components\ble\ble_services\ble_nus -I..\..\..\..\..\..\components\ble\ble_services\ble_nus_c -I..\..\..\..\..\..\components\ble\ble_services\ble_rscs -I..\..\..\..\..\..\components\ble\ble_services\ble_rscs_c -I..\..\..\..\..\..\components\ble\ble_services\ble_tps -I..\..\..\..\..\..\components\ble\common -I..\..\..\..\..\..\components\ble\nrf_ble_qwr -I..\..\..\..\..\..\components\ble\peer_manager -I..\..\..\..\..\..\components\boards -I..\..\..\..\..\..\components\drivers_nrf\adc -I..\..\..\..\..\..\components\drivers_nrf\clock -I..\..\..\..\..\..\components\drivers_nrf\common -I..\..\..\..\..\..\components\drivers_nrf\comp -I..\..\..\..\..\..\components\drivers_nrf\delay -I..\..\..\..\..\..\components\drivers_nrf\gpiote -I..\..\..\..\..\..\components\drivers_nrf\hal -I..\..\..\..\..\..\components\drivers_nrf\i2s -I..\..\..\..\..\..\components\drivers_nrf\lpcomp -I..\..\..\..\..\..\components\drivers_nrf\pdm -I..\..\..\..\..\..\components\drivers_nrf\power -I..\..\..\..\..\..\components\drivers_nrf\ppi -I..\..\..\..\..\..\components\drivers_nrf\pwm -I..\..\..\..\..\..\components\drivers_nrf\qdec -I..\..\..\..\..\..\components\drivers_nrf\rng -I..\..\..\..\..\..\components\drivers_nrf\rtc -I..\..\..\..\..\..\components\drivers_nrf\saadc -I..\..\..\..\..\..\components\drivers_nrf\spi_master -I..\..\..\..\..\..\components\drivers_nrf\spi_slave -I..\..\..\..\..\..\components\drivers_nrf\swi -I..\..\..\..\..\..\components\drivers_nrf\timer -I..\..\..\..\..\..\components\drivers_nrf\twi_master -I..\..\..\..\..\..\components\drivers_nrf\twis_slave -I..\..\..\..\..\..\components\drivers_nrf\uart -I..\..\..\..\..\..\components\drivers_nrf\usbd -I..\..\..\..\..\..\components\drivers_nrf\wdt -I..\..\..\..\..\..\components\libraries\bsp -I..\..\..\..\..\..\components\libraries\button -I..\..\..\..\..\..\components\libraries\crc16 -I..\..\..\..\..\..\components\libraries\crc32 -I..\..\..\..\..\..\components\libraries\csense -I..\..\..\..\..\..\components\libraries\csense_drv -I..\..\..\..\..\..\components\libraries\experimental_section_vars -I..\..\..\..\..\..\components\libraries\fds -I..\..\..\..\..\..\components\libraries\fstorage -I..\..\..\..\..\..\components\libraries\gpiote -I..\..\..\..\..\..\components\libraries\hardfault -I..\..\..\..\..\..\components\libraries\hci -I..\..\..\..\..\..\components\libraries\led_softblink -I..\..\..\..\..\..\components\libraries\log -I..\..\..\..\..\..\components\libraries\log\src -I..\..\..\..\..\..\components\libraries\low_power_pwm -I..\..\..\..\..\..\components\libraries\mem_manager -I..\..\..\..\..\..\components\libraries\pwm -I..\..\..\..\..\..\components\libraries\queue -I..\..\..\..\..\..\components\libraries\scheduler -I..\..\..\..\..\..\components\libraries\sensorsim -I..\..\..\..\..\..\components\libraries\slip -I..\..\..\..\..\..\components\libraries\timer -I..\..\..\..\..\..\components\libraries\twi -I..\..\..\..\..\..\components\libraries\uart -I..\..\..\..\..\..\components\libraries\usbd -I..\..\..\..\..\..\components\libraries\usbd\class\audio -I..\..\..\..\..\..\components\libraries\usbd\class\cdc -I..\..\..\..\..\..\components\libraries\usbd\class\cdc\acm -I..\..\..\..\..\..\components\libraries\usbd\class\hid -I..\..\..\..\..\..\components\libraries\usbd\class\hid\generic -I..\..\..\..\..\..\components\libraries\usbd\class\hid\kbd -I..\..\..\..\..\..\components\libraries\usbd\class\hid\mouse -I..\..\..\..\..\..\components\libraries\usbd\class\msc -I..\..\..\..\..\..\components\libraries\usbd\config -I..\..\..\..\..\..\components\libraries\util -I..\..\..\..\..\..\components\softdevice\common\softdevice_handler -I..\..\..\..\..\..\components\softdevice\s130\headers -I..\..\..\..\..\..\components\softdevice\s130\headers\nrf51 -I..\..\..\..\..\..\components\toolchain -I..\..\..\..\..\..\external\segger_rtt -I..\config -I..\..\..\..\..\..\components\ble\ble_services\ble_sls -ID:\development\nordic_ble\src_code\nrf51_sdk_v12_3_0\nRF5_SDK_12.3.0_d7731ad\examples\ble_peripheral\ble_app_smart_locker\JJDK_ZG_ZK\s130\arm5_no_packs\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.2.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\NordicSemiconductor\nRF_DeviceFamilyPack\8.11.1\Device\Include -D__MICROLIB -D_RTE_ -DNRF51 -DBLE_STACK_SUPPORT_REQD -DNRF51822 -DBOARD_JJDK_ZG_ZK -DNRF_SD_BLE_API_VERSION=2 -DS130 -DNRF51 -DSOFTDEVICE_PRESENT -DSWI_DISABLE0 --omf_browse=.\debug\sdk_mapped_flags.crf ..\..\..\..\..\..\components\libraries\util\sdk_mapped_flags.c]
                          THUMB

                          AREA ||i.sdk_mapped_flags_bulk_update_by_key||, CODE, READONLY, ALIGN=1

                  sdk_mapped_flags_bulk_update_by_key PROC
;;;109    
;;;110    void sdk_mapped_flags_bulk_update_by_key(uint16_t           * p_keys,
000000  b5ff              PUSH     {r0-r7,lr}
;;;111                                             sdk_mapped_flags_t * p_flags,
;;;112                                             uint32_t             n_flag_collections,
;;;113                                             uint16_t             key,
;;;114                                             bool                 value)
;;;115    {
000002  4604              MOV      r4,r0
;;;116        if ((p_keys != NULL) && (p_flags != NULL) && (n_flag_collections > 0))
000004  2c00              CMP      r4,#0
000006  d02a              BEQ      |L1.94|
000008  2900              CMP      r1,#0
00000a  d028              BEQ      |L1.94|
00000c  9802              LDR      r0,[sp,#8]
00000e  2800              CMP      r0,#0
000010  d025              BEQ      |L1.94|
;;;117        {
;;;118            for (uint32_t i = 0; i < SDK_MAPPED_FLAGS_N_KEYS; i++)
000012  2000              MOVS     r0,#0
000014  e021              B        |L1.90|
                  |L1.22|
;;;119            {
;;;120                if (p_keys[i] == key)
000016  0042              LSLS     r2,r0,#1
000018  5aa3              LDRH     r3,[r4,r2]
00001a  9a03              LDR      r2,[sp,#0xc]
00001c  4293              CMP      r3,r2
00001e  d11b              BNE      |L1.88|
;;;121                {
;;;122                    for (uint32_t j = 0; j < n_flag_collections; j++)
000020  2200              MOVS     r2,#0
000022  e015              B        |L1.80|
                  |L1.36|
;;;123                    {
;;;124                        if (value)
000024  9b09              LDR      r3,[sp,#0x24]
000026  2b00              CMP      r3,#0
000028  d008              BEQ      |L1.60|
;;;125                        {
;;;126                            sdk_mapped_flags_set_by_index(&p_flags[j], i);
00002a  188b              ADDS     r3,r1,r2
00002c  b285              UXTH     r5,r0
00002e  781e              LDRB     r6,[r3,#0]
000030  2701              MOVS     r7,#1
000032  40af              LSLS     r7,r7,r5
000034  433e              ORRS     r6,r6,r7
000036  701e              STRB     r6,[r3,#0]
000038  bf00              NOP      
00003a  e008              B        |L1.78|
                  |L1.60|
;;;127                        }
;;;128                        else
;;;129                        {
;;;130                            sdk_mapped_flags_clear_by_index(&p_flags[j], i);
00003c  188b              ADDS     r3,r1,r2
00003e  b285              UXTH     r5,r0
000040  781e              LDRB     r6,[r3,#0]
000042  2701              MOVS     r7,#1
000044  40af              LSLS     r7,r7,r5
000046  43be              BICS     r6,r6,r7
000048  701e              STRB     r6,[r3,#0]
00004a  bf00              NOP      
00004c  bf00              NOP      
                  |L1.78|
00004e  1c52              ADDS     r2,r2,#1              ;122
                  |L1.80|
000050  9b02              LDR      r3,[sp,#8]            ;122
000052  429a              CMP      r2,r3                 ;122
000054  d3e6              BCC      |L1.36|
                  |L1.86|
;;;131                        }
;;;132                    }
;;;133                    return;
;;;134                }
;;;135            }
;;;136        }
;;;137    }
000056  bdff              POP      {r0-r7,pc}
                  |L1.88|
000058  1c40              ADDS     r0,r0,#1              ;118
                  |L1.90|
00005a  2808              CMP      r0,#8                 ;118
00005c  d3db              BCC      |L1.22|
                  |L1.94|
00005e  bf00              NOP      
000060  e7f9              B        |L1.86|
;;;138    
                          ENDP


                          AREA ||i.sdk_mapped_flags_first_key_index_get||, CODE, READONLY, ALIGN=2

                  sdk_mapped_flags_first_key_index_get PROC
;;;87     
;;;88     uint16_t sdk_mapped_flags_first_key_index_get(sdk_mapped_flags_t flags)
000000  b570              PUSH     {r4-r6,lr}
;;;89     {
000002  4605              MOV      r5,r0
;;;90         for (uint16_t i = 0; i < SDK_MAPPED_FLAGS_N_KEYS; i++)
000004  2400              MOVS     r4,#0
000006  e009              B        |L2.28|
                  |L2.8|
;;;91         {
;;;92             if (sdk_mapped_flags_get_by_index(flags, i))
000008  4621              MOV      r1,r4
00000a  4628              MOV      r0,r5
00000c  f7fffffe          BL       sdk_mapped_flags_get_by_index
000010  2800              CMP      r0,#0
000012  d001              BEQ      |L2.24|
;;;93             {
;;;94                 return i;
000014  4620              MOV      r0,r4
                  |L2.22|
;;;95             }
;;;96         }
;;;97         return SDK_MAPPED_FLAGS_INVALID_INDEX;
;;;98     }
000016  bd70              POP      {r4-r6,pc}
                  |L2.24|
000018  1c60              ADDS     r0,r4,#1              ;90
00001a  b284              UXTH     r4,r0                 ;90
                  |L2.28|
00001c  2c08              CMP      r4,#8                 ;90
00001e  dbf3              BLT      |L2.8|
000020  4800              LDR      r0,|L2.36|
000022  e7f8              B        |L2.22|
;;;99     
                          ENDP

                  |L2.36|
                          DCD      0x0000ffff

                          AREA ||i.sdk_mapped_flags_get_by_index||, CODE, READONLY, ALIGN=1

                  sdk_mapped_flags_get_by_index PROC
;;;80      */
;;;81     static __INLINE bool sdk_mapped_flags_get_by_index(sdk_mapped_flags_t flags, uint16_t index)
000000  4602              MOV      r2,r0
;;;82     {
;;;83         return ((flags & (1 << index)) != 0);
000002  2001              MOVS     r0,#1
000004  4088              LSLS     r0,r0,r1
000006  4010              ANDS     r0,r0,r2
000008  2800              CMP      r0,#0
00000a  d001              BEQ      |L3.16|
00000c  2001              MOVS     r0,#1
                  |L3.14|
;;;84     }
00000e  4770              BX       lr
                  |L3.16|
000010  2000              MOVS     r0,#0                 ;83
000012  e7fc              B        |L3.14|
;;;85     
                          ENDP


                          AREA ||i.sdk_mapped_flags_get_by_key||, CODE, READONLY, ALIGN=1

                  sdk_mapped_flags_get_by_key PROC
;;;139    
;;;140    bool sdk_mapped_flags_get_by_key(uint16_t * p_keys, sdk_mapped_flags_t flags, uint16_t key)
000000  b5f8              PUSH     {r3-r7,lr}
;;;141    {
000002  4605              MOV      r5,r0
000004  460e              MOV      r6,r1
000006  4617              MOV      r7,r2
;;;142        if (p_keys != NULL)
000008  2d00              CMP      r5,#0
00000a  d00d              BEQ      |L4.40|
;;;143        {
;;;144            for (uint32_t i = 0; i < SDK_MAPPED_FLAGS_N_KEYS; i++)
00000c  2400              MOVS     r4,#0
00000e  e009              B        |L4.36|
                  |L4.16|
;;;145            {
;;;146                if (p_keys[i] == key)
000010  0060              LSLS     r0,r4,#1
000012  5a28              LDRH     r0,[r5,r0]
000014  42b8              CMP      r0,r7
000016  d104              BNE      |L4.34|
;;;147                {
;;;148                    return sdk_mapped_flags_get_by_index(flags, i);
000018  b2a1              UXTH     r1,r4
00001a  4630              MOV      r0,r6
00001c  f7fffffe          BL       sdk_mapped_flags_get_by_index
                  |L4.32|
;;;149                }
;;;150            }
;;;151        }
;;;152        return false;
;;;153    }
000020  bdf8              POP      {r3-r7,pc}
                  |L4.34|
000022  1c64              ADDS     r4,r4,#1              ;144
                  |L4.36|
000024  2c08              CMP      r4,#8                 ;144
000026  d3f3              BCC      |L4.16|
                  |L4.40|
000028  2000              MOVS     r0,#0                 ;152
00002a  e7f9              B        |L4.32|
;;;154    
                          ENDP


                          AREA ||i.sdk_mapped_flags_key_list_get||, CODE, READONLY, ALIGN=1

                  sdk_mapped_flags_key_list_get PROC
;;;155    
;;;156    sdk_mapped_flags_key_list_t sdk_mapped_flags_key_list_get(uint16_t           * p_keys,
000000  b5f0              PUSH     {r4-r7,lr}
;;;157                                                              sdk_mapped_flags_t   flags)
;;;158    {
000002  b085              SUB      sp,sp,#0x14
000004  4607              MOV      r7,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
;;;159        sdk_mapped_flags_key_list_t key_list;
;;;160        key_list.len = 0;
00000a  2000              MOVS     r0,#0
00000c  9000              STR      r0,[sp,#0]
;;;161    
;;;162        if (p_keys != NULL)
00000e  2d00              CMP      r5,#0
000010  d012              BEQ      |L5.56|
;;;163        {
;;;164            for (uint32_t i = 0; i < SDK_MAPPED_FLAGS_N_KEYS; i++)
000012  2400              MOVS     r4,#0
000014  e00e              B        |L5.52|
                  |L5.22|
;;;165            {
;;;166                if (sdk_mapped_flags_get_by_index(flags, i))
000016  b2a1              UXTH     r1,r4
000018  4630              MOV      r0,r6
00001a  f7fffffe          BL       sdk_mapped_flags_get_by_index
00001e  2800              CMP      r0,#0
000020  d007              BEQ      |L5.50|
;;;167                {
;;;168                    key_list.flag_keys[key_list.len++] = p_keys[i];
000022  0060              LSLS     r0,r4,#1
000024  5a29              LDRH     r1,[r5,r0]
000026  9a00              LDR      r2,[sp,#0]
000028  1c50              ADDS     r0,r2,#1
00002a  0052              LSLS     r2,r2,#1
00002c  9000              STR      r0,[sp,#0]
00002e  a801              ADD      r0,sp,#4
000030  5281              STRH     r1,[r0,r2]
                  |L5.50|
000032  1c64              ADDS     r4,r4,#1              ;164
                  |L5.52|
000034  2c08              CMP      r4,#8                 ;164
000036  d3ee              BCC      |L5.22|
                  |L5.56|
;;;169                }
;;;170            }
;;;171        }
;;;172    
;;;173        return key_list;
000038  2214              MOVS     r2,#0x14
00003a  4669              MOV      r1,sp
00003c  4638              MOV      r0,r7
00003e  f7fffffe          BL       __aeabi_memcpy4
;;;174    }
000042  b005              ADD      sp,sp,#0x14
000044  bdf0              POP      {r4-r7,pc}
;;;175    
                          ENDP


                          AREA ||i.sdk_mapped_flags_n_flags_set||, CODE, READONLY, ALIGN=1

                  sdk_mapped_flags_n_flags_set PROC
;;;176    
;;;177    uint32_t sdk_mapped_flags_n_flags_set(sdk_mapped_flags_t flags)
000000  b570              PUSH     {r4-r6,lr}
;;;178    {
000002  4606              MOV      r6,r0
;;;179        uint32_t n_flags_set = 0;
000004  2500              MOVS     r5,#0
;;;180    
;;;181        for (uint32_t i = 0; i < SDK_MAPPED_FLAGS_N_KEYS; i++)
000006  2400              MOVS     r4,#0
000008  e007              B        |L6.26|
                  |L6.10|
;;;182        {
;;;183            if (sdk_mapped_flags_get_by_index(flags, i))
00000a  b2a1              UXTH     r1,r4
00000c  4630              MOV      r0,r6
00000e  f7fffffe          BL       sdk_mapped_flags_get_by_index
000012  2800              CMP      r0,#0
000014  d000              BEQ      |L6.24|
;;;184            {
;;;185                n_flags_set += 1;
000016  1c6d              ADDS     r5,r5,#1
                  |L6.24|
000018  1c64              ADDS     r4,r4,#1              ;181
                  |L6.26|
00001a  2c08              CMP      r4,#8                 ;181
00001c  d3f5              BCC      |L6.10|
;;;186            }
;;;187        }
;;;188        return n_flags_set;
00001e  4628              MOV      r0,r5
;;;189    }
000020  bd70              POP      {r4-r6,pc}
                          ENDP


                          AREA ||i.sdk_mapped_flags_update_by_key||, CODE, READONLY, ALIGN=1

                  sdk_mapped_flags_update_by_key PROC
;;;100    
;;;101    void sdk_mapped_flags_update_by_key(uint16_t           * p_keys,
000000  b5f8              PUSH     {r3-r7,lr}
;;;102                                        sdk_mapped_flags_t * p_flags,
;;;103                                        uint16_t             key,
;;;104                                        bool                 value)
;;;105    {
000002  4606              MOV      r6,r0
000004  460f              MOV      r7,r1
000006  4614              MOV      r4,r2
000008  461d              MOV      r5,r3
;;;106        sdk_mapped_flags_bulk_update_by_key(p_keys, p_flags, 1, key, value);
00000a  4623              MOV      r3,r4
00000c  2201              MOVS     r2,#1
00000e  4639              MOV      r1,r7
000010  4630              MOV      r0,r6
000012  9500              STR      r5,[sp,#0]
000014  f7fffffe          BL       sdk_mapped_flags_bulk_update_by_key
;;;107    }
000018  bdf8              POP      {r3-r7,pc}
;;;108    
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\..\\..\\components\\libraries\\util\\sdk_mapped_flags.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___18_sdk_mapped_flags_c_164c3d67____REV16|
#line 129 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\4.2.0\\CMSIS\\Include\\core_cmInstr.h"
|__asm___18_sdk_mapped_flags_c_164c3d67____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___18_sdk_mapped_flags_c_164c3d67____REVSH|
#line 144
|__asm___18_sdk_mapped_flags_c_164c3d67____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
