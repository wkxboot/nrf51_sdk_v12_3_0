; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\debug\sensorsim.o --asm_dir=.\DEBUG\ --list_dir=.\DEBUG\ --depend=.\debug\sensorsim.d --cpu=Cortex-M0 --apcs=interwork -O0 -I..\..\..\config -I..\..\..\..\..\..\components -I..\..\..\..\..\..\components\ble\ble_advertising -I..\..\..\..\..\..\components\ble\ble_dtm -I..\..\..\..\..\..\components\ble\ble_racp -I..\..\..\..\..\..\components\ble\ble_services\ble_ancs_c -I..\..\..\..\..\..\components\ble\ble_services\ble_ans_c -I..\..\..\..\..\..\components\ble\ble_services\ble_bas -I..\..\..\..\..\..\components\ble\ble_services\ble_bas_c -I..\..\..\..\..\..\components\ble\ble_services\ble_cscs -I..\..\..\..\..\..\components\ble\ble_services\ble_cts_c -I..\..\..\..\..\..\components\ble\ble_services\ble_dfu -I..\..\..\..\..\..\components\ble\ble_services\ble_dis -I..\..\..\..\..\..\components\ble\ble_services\ble_gls -I..\..\..\..\..\..\components\ble\ble_services\ble_hids -I..\..\..\..\..\..\components\ble\ble_services\ble_hrs -I..\..\..\..\..\..\components\ble\ble_services\ble_hrs_c -I..\..\..\..\..\..\components\ble\ble_services\ble_hts -I..\..\..\..\..\..\components\ble\ble_services\ble_ias -I..\..\..\..\..\..\components\ble\ble_services\ble_ias_c -I..\..\..\..\..\..\components\ble\ble_services\ble_lbs -I..\..\..\..\..\..\components\ble\ble_services\ble_lbs_c -I..\..\..\..\..\..\components\ble\ble_services\ble_lls -I..\..\..\..\..\..\components\ble\ble_services\ble_nus -I..\..\..\..\..\..\components\ble\ble_services\ble_nus_c -I..\..\..\..\..\..\components\ble\ble_services\ble_rscs -I..\..\..\..\..\..\components\ble\ble_services\ble_rscs_c -I..\..\..\..\..\..\components\ble\ble_services\ble_tps -I..\..\..\..\..\..\components\ble\common -I..\..\..\..\..\..\components\ble\nrf_ble_qwr -I..\..\..\..\..\..\components\ble\peer_manager -I..\..\..\..\..\..\components\boards -I..\..\..\..\..\..\components\drivers_nrf\adc -I..\..\..\..\..\..\components\drivers_nrf\clock -I..\..\..\..\..\..\components\drivers_nrf\common -I..\..\..\..\..\..\components\drivers_nrf\comp -I..\..\..\..\..\..\components\drivers_nrf\delay -I..\..\..\..\..\..\components\drivers_nrf\gpiote -I..\..\..\..\..\..\components\drivers_nrf\hal -I..\..\..\..\..\..\components\drivers_nrf\i2s -I..\..\..\..\..\..\components\drivers_nrf\lpcomp -I..\..\..\..\..\..\components\drivers_nrf\pdm -I..\..\..\..\..\..\components\drivers_nrf\power -I..\..\..\..\..\..\components\drivers_nrf\ppi -I..\..\..\..\..\..\components\drivers_nrf\pwm -I..\..\..\..\..\..\components\drivers_nrf\qdec -I..\..\..\..\..\..\components\drivers_nrf\rng -I..\..\..\..\..\..\components\drivers_nrf\rtc -I..\..\..\..\..\..\components\drivers_nrf\saadc -I..\..\..\..\..\..\components\drivers_nrf\spi_master -I..\..\..\..\..\..\components\drivers_nrf\spi_slave -I..\..\..\..\..\..\components\drivers_nrf\swi -I..\..\..\..\..\..\components\drivers_nrf\timer -I..\..\..\..\..\..\components\drivers_nrf\twi_master -I..\..\..\..\..\..\components\drivers_nrf\twis_slave -I..\..\..\..\..\..\components\drivers_nrf\uart -I..\..\..\..\..\..\components\drivers_nrf\usbd -I..\..\..\..\..\..\components\drivers_nrf\wdt -I..\..\..\..\..\..\components\libraries\bsp -I..\..\..\..\..\..\components\libraries\button -I..\..\..\..\..\..\components\libraries\crc16 -I..\..\..\..\..\..\components\libraries\crc32 -I..\..\..\..\..\..\components\libraries\csense -I..\..\..\..\..\..\components\libraries\csense_drv -I..\..\..\..\..\..\components\libraries\experimental_section_vars -I..\..\..\..\..\..\components\libraries\fds -I..\..\..\..\..\..\components\libraries\fstorage -I..\..\..\..\..\..\components\libraries\gpiote -I..\..\..\..\..\..\components\libraries\hardfault -I..\..\..\..\..\..\components\libraries\hci -I..\..\..\..\..\..\components\libraries\led_softblink -I..\..\..\..\..\..\components\libraries\log -I..\..\..\..\..\..\components\libraries\log\src -I..\..\..\..\..\..\components\libraries\low_power_pwm -I..\..\..\..\..\..\components\libraries\mem_manager -I..\..\..\..\..\..\components\libraries\pwm -I..\..\..\..\..\..\components\libraries\queue -I..\..\..\..\..\..\components\libraries\scheduler -I..\..\..\..\..\..\components\libraries\sensorsim -I..\..\..\..\..\..\components\libraries\slip -I..\..\..\..\..\..\components\libraries\timer -I..\..\..\..\..\..\components\libraries\twi -I..\..\..\..\..\..\components\libraries\uart -I..\..\..\..\..\..\components\libraries\usbd -I..\..\..\..\..\..\components\libraries\usbd\class\audio -I..\..\..\..\..\..\components\libraries\usbd\class\cdc -I..\..\..\..\..\..\components\libraries\usbd\class\cdc\acm -I..\..\..\..\..\..\components\libraries\usbd\class\hid -I..\..\..\..\..\..\components\libraries\usbd\class\hid\generic -I..\..\..\..\..\..\components\libraries\usbd\class\hid\kbd -I..\..\..\..\..\..\components\libraries\usbd\class\hid\mouse -I..\..\..\..\..\..\components\libraries\usbd\class\msc -I..\..\..\..\..\..\components\libraries\usbd\config -I..\..\..\..\..\..\components\libraries\util -I..\..\..\..\..\..\components\softdevice\common\softdevice_handler -I..\..\..\..\..\..\components\softdevice\s130\headers -I..\..\..\..\..\..\components\softdevice\s130\headers\nrf51 -I..\..\..\..\..\..\components\toolchain -I..\..\..\..\..\..\external\segger_rtt -I..\config -I..\..\..\..\..\..\components\ble\ble_services\ble_sls -ID:\development\nordic_ble\src_code\nrf51_sdk_v12_3_0\nRF5_SDK_12.3.0_d7731ad\examples\ble_peripheral\ble_app_smart_locker\JJDK_ZG_ZK\s130\arm5_no_packs\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.2.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\NordicSemiconductor\nRF_DeviceFamilyPack\8.11.1\Device\Include -D__MICROLIB -D_RTE_ -DNRF51 -DBLE_STACK_SUPPORT_REQD -DNRF51822 -DBOARD_JJDK_ZG_ZK -DNRF_SD_BLE_API_VERSION=2 -DS130 -DNRF51 -DSOFTDEVICE_PRESENT -DSWI_DISABLE0 --omf_browse=.\debug\sensorsim.crf ..\..\..\..\..\..\components\libraries\sensorsim\sensorsim.c]
                          THUMB

                          AREA ||i.sensorsim_decrement||, CODE, READONLY, ALIGN=1

                  sensorsim_decrement PROC
;;;88     
;;;89     void sensorsim_decrement(sensorsim_state_t *     p_state,
000000  6802              LDR      r2,[r0,#0]
;;;90                              const sensorsim_cfg_t * p_cfg)
;;;91     {
;;;92         if (p_state->current_val - p_cfg->min > p_cfg->incr)
000002  680b              LDR      r3,[r1,#0]
000004  1ad2              SUBS     r2,r2,r3
000006  688b              LDR      r3,[r1,#8]
000008  429a              CMP      r2,r3
00000a  d904              BLS      |L1.22|
;;;93         {
;;;94             p_state->current_val -= p_cfg->incr;
00000c  6802              LDR      r2,[r0,#0]
00000e  688b              LDR      r3,[r1,#8]
000010  1ad2              SUBS     r2,r2,r3
000012  6002              STR      r2,[r0,#0]
000014  e003              B        |L1.30|
                  |L1.22|
;;;95         }
;;;96         else
;;;97         {
;;;98             p_state->current_val   = p_cfg->min;
000016  680a              LDR      r2,[r1,#0]
000018  6002              STR      r2,[r0,#0]
;;;99             p_state->is_increasing = true;
00001a  2201              MOVS     r2,#1
00001c  7102              STRB     r2,[r0,#4]
                  |L1.30|
;;;100        }
;;;101    }
00001e  4770              BX       lr
                          ENDP


                          AREA ||i.sensorsim_increment||, CODE, READONLY, ALIGN=1

                  sensorsim_increment PROC
;;;73     
;;;74     void sensorsim_increment(sensorsim_state_t *     p_state,
000000  684a              LDR      r2,[r1,#4]
;;;75                              const sensorsim_cfg_t * p_cfg)
;;;76     {
;;;77         if (p_cfg->max - p_state->current_val > p_cfg->incr)
000002  6803              LDR      r3,[r0,#0]
000004  1ad2              SUBS     r2,r2,r3
000006  688b              LDR      r3,[r1,#8]
000008  429a              CMP      r2,r3
00000a  d904              BLS      |L2.22|
;;;78         {
;;;79             p_state->current_val += p_cfg->incr;
00000c  6802              LDR      r2,[r0,#0]
00000e  688b              LDR      r3,[r1,#8]
000010  18d2              ADDS     r2,r2,r3
000012  6002              STR      r2,[r0,#0]
000014  e003              B        |L2.30|
                  |L2.22|
;;;80         }
;;;81         else
;;;82         {
;;;83             p_state->current_val   = p_cfg->max;
000016  684a              LDR      r2,[r1,#4]
000018  6002              STR      r2,[r0,#0]
;;;84             p_state->is_increasing = false;
00001a  2200              MOVS     r2,#0
00001c  7102              STRB     r2,[r0,#4]
                  |L2.30|
;;;85         }
;;;86     }
00001e  4770              BX       lr
;;;87     
                          ENDP


                          AREA ||i.sensorsim_init||, CODE, READONLY, ALIGN=1

                  sensorsim_init PROC
;;;43     
;;;44     void sensorsim_init(sensorsim_state_t     * p_state,
000000  7b0a              LDRB     r2,[r1,#0xc]
;;;45                         const sensorsim_cfg_t * p_cfg)
;;;46     {
;;;47         if (p_cfg->start_at_max)
000002  2a00              CMP      r2,#0
000004  d004              BEQ      |L3.16|
;;;48         {
;;;49             p_state->current_val   = p_cfg->max;
000006  684a              LDR      r2,[r1,#4]
000008  6002              STR      r2,[r0,#0]
;;;50             p_state->is_increasing = false;
00000a  2200              MOVS     r2,#0
00000c  7102              STRB     r2,[r0,#4]
00000e  e003              B        |L3.24|
                  |L3.16|
;;;51         }
;;;52         else
;;;53         {
;;;54             p_state->current_val   = p_cfg->min;
000010  680a              LDR      r2,[r1,#0]
000012  6002              STR      r2,[r0,#0]
;;;55             p_state->is_increasing = true;
000014  2201              MOVS     r2,#1
000016  7102              STRB     r2,[r0,#4]
                  |L3.24|
;;;56         }
;;;57     }
000018  4770              BX       lr
;;;58     
                          ENDP


                          AREA ||i.sensorsim_measure||, CODE, READONLY, ALIGN=1

                  sensorsim_measure PROC
;;;59     
;;;60     uint32_t sensorsim_measure(sensorsim_state_t     * p_state,
000000  b530              PUSH     {r4,r5,lr}
;;;61                                const sensorsim_cfg_t * p_cfg)
;;;62     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;63         if (p_state->is_increasing)
000006  7920              LDRB     r0,[r4,#4]
000008  2800              CMP      r0,#0
00000a  d004              BEQ      |L4.22|
;;;64         {
;;;65             sensorsim_increment(p_state, p_cfg);
00000c  4629              MOV      r1,r5
00000e  4620              MOV      r0,r4
000010  f7fffffe          BL       sensorsim_increment
000014  e003              B        |L4.30|
                  |L4.22|
;;;66         }
;;;67         else
;;;68         {
;;;69             sensorsim_decrement(p_state, p_cfg);
000016  4629              MOV      r1,r5
000018  4620              MOV      r0,r4
00001a  f7fffffe          BL       sensorsim_decrement
                  |L4.30|
;;;70         }
;;;71         return p_state->current_val;
00001e  6820              LDR      r0,[r4,#0]
;;;72     }
000020  bd30              POP      {r4,r5,pc}
;;;73     
                          ENDP

