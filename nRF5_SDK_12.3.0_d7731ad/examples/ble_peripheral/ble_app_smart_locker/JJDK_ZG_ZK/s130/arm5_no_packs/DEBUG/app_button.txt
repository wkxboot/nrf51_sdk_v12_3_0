; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\debug\app_button.o --asm_dir=.\DEBUG\ --list_dir=.\DEBUG\ --depend=.\debug\app_button.d --cpu=Cortex-M0 --apcs=interwork -O0 -I..\..\..\config -I..\..\..\..\..\..\components -I..\..\..\..\..\..\components\ble\ble_advertising -I..\..\..\..\..\..\components\ble\ble_dtm -I..\..\..\..\..\..\components\ble\ble_racp -I..\..\..\..\..\..\components\ble\ble_services\ble_ancs_c -I..\..\..\..\..\..\components\ble\ble_services\ble_ans_c -I..\..\..\..\..\..\components\ble\ble_services\ble_bas -I..\..\..\..\..\..\components\ble\ble_services\ble_bas_c -I..\..\..\..\..\..\components\ble\ble_services\ble_cscs -I..\..\..\..\..\..\components\ble\ble_services\ble_cts_c -I..\..\..\..\..\..\components\ble\ble_services\ble_dfu -I..\..\..\..\..\..\components\ble\ble_services\ble_dis -I..\..\..\..\..\..\components\ble\ble_services\ble_gls -I..\..\..\..\..\..\components\ble\ble_services\ble_hids -I..\..\..\..\..\..\components\ble\ble_services\ble_hrs -I..\..\..\..\..\..\components\ble\ble_services\ble_hrs_c -I..\..\..\..\..\..\components\ble\ble_services\ble_hts -I..\..\..\..\..\..\components\ble\ble_services\ble_ias -I..\..\..\..\..\..\components\ble\ble_services\ble_ias_c -I..\..\..\..\..\..\components\ble\ble_services\ble_lbs -I..\..\..\..\..\..\components\ble\ble_services\ble_lbs_c -I..\..\..\..\..\..\components\ble\ble_services\ble_lls -I..\..\..\..\..\..\components\ble\ble_services\ble_nus -I..\..\..\..\..\..\components\ble\ble_services\ble_nus_c -I..\..\..\..\..\..\components\ble\ble_services\ble_rscs -I..\..\..\..\..\..\components\ble\ble_services\ble_rscs_c -I..\..\..\..\..\..\components\ble\ble_services\ble_tps -I..\..\..\..\..\..\components\ble\common -I..\..\..\..\..\..\components\ble\nrf_ble_qwr -I..\..\..\..\..\..\components\ble\peer_manager -I..\..\..\..\..\..\components\boards -I..\..\..\..\..\..\components\drivers_nrf\adc -I..\..\..\..\..\..\components\drivers_nrf\clock -I..\..\..\..\..\..\components\drivers_nrf\common -I..\..\..\..\..\..\components\drivers_nrf\comp -I..\..\..\..\..\..\components\drivers_nrf\delay -I..\..\..\..\..\..\components\drivers_nrf\gpiote -I..\..\..\..\..\..\components\drivers_nrf\hal -I..\..\..\..\..\..\components\drivers_nrf\i2s -I..\..\..\..\..\..\components\drivers_nrf\lpcomp -I..\..\..\..\..\..\components\drivers_nrf\pdm -I..\..\..\..\..\..\components\drivers_nrf\power -I..\..\..\..\..\..\components\drivers_nrf\ppi -I..\..\..\..\..\..\components\drivers_nrf\pwm -I..\..\..\..\..\..\components\drivers_nrf\qdec -I..\..\..\..\..\..\components\drivers_nrf\rng -I..\..\..\..\..\..\components\drivers_nrf\rtc -I..\..\..\..\..\..\components\drivers_nrf\saadc -I..\..\..\..\..\..\components\drivers_nrf\spi_master -I..\..\..\..\..\..\components\drivers_nrf\spi_slave -I..\..\..\..\..\..\components\drivers_nrf\swi -I..\..\..\..\..\..\components\drivers_nrf\timer -I..\..\..\..\..\..\components\drivers_nrf\twi_master -I..\..\..\..\..\..\components\drivers_nrf\twis_slave -I..\..\..\..\..\..\components\drivers_nrf\uart -I..\..\..\..\..\..\components\drivers_nrf\usbd -I..\..\..\..\..\..\components\drivers_nrf\wdt -I..\..\..\..\..\..\components\libraries\bsp -I..\..\..\..\..\..\components\libraries\button -I..\..\..\..\..\..\components\libraries\crc16 -I..\..\..\..\..\..\components\libraries\crc32 -I..\..\..\..\..\..\components\libraries\csense -I..\..\..\..\..\..\components\libraries\csense_drv -I..\..\..\..\..\..\components\libraries\experimental_section_vars -I..\..\..\..\..\..\components\libraries\fds -I..\..\..\..\..\..\components\libraries\fstorage -I..\..\..\..\..\..\components\libraries\gpiote -I..\..\..\..\..\..\components\libraries\hardfault -I..\..\..\..\..\..\components\libraries\hci -I..\..\..\..\..\..\components\libraries\led_softblink -I..\..\..\..\..\..\components\libraries\log -I..\..\..\..\..\..\components\libraries\log\src -I..\..\..\..\..\..\components\libraries\low_power_pwm -I..\..\..\..\..\..\components\libraries\mem_manager -I..\..\..\..\..\..\components\libraries\pwm -I..\..\..\..\..\..\components\libraries\queue -I..\..\..\..\..\..\components\libraries\scheduler -I..\..\..\..\..\..\components\libraries\sensorsim -I..\..\..\..\..\..\components\libraries\slip -I..\..\..\..\..\..\components\libraries\timer -I..\..\..\..\..\..\components\libraries\twi -I..\..\..\..\..\..\components\libraries\uart -I..\..\..\..\..\..\components\libraries\usbd -I..\..\..\..\..\..\components\libraries\usbd\class\audio -I..\..\..\..\..\..\components\libraries\usbd\class\cdc -I..\..\..\..\..\..\components\libraries\usbd\class\cdc\acm -I..\..\..\..\..\..\components\libraries\usbd\class\hid -I..\..\..\..\..\..\components\libraries\usbd\class\hid\generic -I..\..\..\..\..\..\components\libraries\usbd\class\hid\kbd -I..\..\..\..\..\..\components\libraries\usbd\class\hid\mouse -I..\..\..\..\..\..\components\libraries\usbd\class\msc -I..\..\..\..\..\..\components\libraries\usbd\config -I..\..\..\..\..\..\components\libraries\util -I..\..\..\..\..\..\components\softdevice\common\softdevice_handler -I..\..\..\..\..\..\components\softdevice\s130\headers -I..\..\..\..\..\..\components\softdevice\s130\headers\nrf51 -I..\..\..\..\..\..\components\toolchain -I..\..\..\..\..\..\external\segger_rtt -I..\config -I..\..\..\..\..\..\components\ble\ble_services\ble_sls -ID:\development\nordic_ble\src_code\nrf51_sdk_v12_3_0\nRF5_SDK_12.3.0_d7731ad\examples\ble_peripheral\ble_app_smart_locker\JJDK_ZG_ZK\s130\arm5_no_packs\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.2.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\NordicSemiconductor\nRF_DeviceFamilyPack\8.11.1\Device\Include -D__MICROLIB -D_RTE_ -DNRF51 -DBLE_STACK_SUPPORT_REQD -DNRF51822 -DBOARD_JJDK_ZG_ZK -DNRF_SD_BLE_API_VERSION=2 -DS130 -DNRF51 -DSOFTDEVICE_PRESENT -DSWI_DISABLE0 --omf_browse=.\debug\app_button.crf ..\..\..\..\..\..\components\libraries\button\app_button.c]
                          THUMB

                          AREA ||i.app_button_disable||, CODE, READONLY, ALIGN=2

                  app_button_disable PROC
;;;193    
;;;194    uint32_t app_button_disable(void)
000000  b510              PUSH     {r4,lr}
;;;195    {
;;;196        ASSERT(mp_buttons);
;;;197    
;;;198        uint32_t i;
;;;199        for (i = 0; i < m_button_count; i++)
000002  2400              MOVS     r4,#0
000004  e006              B        |L1.20|
                  |L1.6|
;;;200        {
;;;201           nrf_drv_gpiote_in_event_disable(mp_buttons[i].pin_no);
000006  00e1              LSLS     r1,r4,#3
000008  4a07              LDR      r2,|L1.40|
00000a  6812              LDR      r2,[r2,#0]  ; mp_buttons
00000c  5c50              LDRB     r0,[r2,r1]
00000e  f7fffffe          BL       nrf_drv_gpiote_in_event_disable
000012  1c64              ADDS     r4,r4,#1              ;199
                  |L1.20|
000014  4805              LDR      r0,|L1.44|
000016  7800              LDRB     r0,[r0,#0]            ;199  ; m_button_count
000018  4284              CMP      r4,r0                 ;199
00001a  d3f4              BCC      |L1.6|
;;;202        }
;;;203    
;;;204        // Make sure polling timer is not running.
;;;205        return app_timer_stop(m_detection_delay_timer_id);
00001c  4804              LDR      r0,|L1.48|
00001e  6800              LDR      r0,[r0,#0]  ; m_detection_delay_timer_id
000020  f7fffffe          BL       app_timer_stop
;;;206    }
000024  bd10              POP      {r4,pc}
;;;207    
                          ENDP

000026  0000              DCW      0x0000
                  |L1.40|
                          DCD      mp_buttons
                  |L1.44|
                          DCD      m_button_count
                  |L1.48|
                          DCD      m_detection_delay_timer_id

                          AREA ||i.app_button_enable||, CODE, READONLY, ALIGN=2

                  app_button_enable PROC
;;;179    
;;;180    uint32_t app_button_enable(void)
000000  b510              PUSH     {r4,lr}
;;;181    {
;;;182        ASSERT(mp_buttons);
;;;183    
;;;184        uint32_t i;
;;;185        for (i = 0; i < m_button_count; i++)
000002  2400              MOVS     r4,#0
000004  e007              B        |L2.22|
                  |L2.6|
;;;186        {
;;;187            nrf_drv_gpiote_in_event_enable(mp_buttons[i].pin_no, true);
000006  00e1              LSLS     r1,r4,#3
000008  4a06              LDR      r2,|L2.36|
00000a  6812              LDR      r2,[r2,#0]  ; mp_buttons
00000c  5c50              LDRB     r0,[r2,r1]
00000e  2101              MOVS     r1,#1
000010  f7fffffe          BL       nrf_drv_gpiote_in_event_enable
000014  1c64              ADDS     r4,r4,#1              ;185
                  |L2.22|
000016  4804              LDR      r0,|L2.40|
000018  7800              LDRB     r0,[r0,#0]            ;185  ; m_button_count
00001a  4284              CMP      r4,r0                 ;185
00001c  d3f3              BCC      |L2.6|
;;;188        }
;;;189    
;;;190        return NRF_SUCCESS;
00001e  2000              MOVS     r0,#0
;;;191    }
000020  bd10              POP      {r4,pc}
;;;192    
                          ENDP

000022  0000              DCW      0x0000
                  |L2.36|
                          DCD      mp_buttons
                  |L2.40|
                          DCD      m_button_count

                          AREA ||i.app_button_init||, CODE, READONLY, ALIGN=2

                  app_button_init PROC
;;;137    
;;;138    uint32_t app_button_init(app_button_cfg_t const *       p_buttons,
000000  b5fe              PUSH     {r1-r7,lr}
;;;139                             uint8_t                        button_count,
;;;140                             uint32_t                       detection_delay)
;;;141    {
000002  4606              MOV      r6,r0
000004  460c              MOV      r4,r1
000006  4617              MOV      r7,r2
;;;142        uint32_t err_code;
;;;143    
;;;144        if (detection_delay < APP_TIMER_MIN_TIMEOUT_TICKS)
000008  2f05              CMP      r7,#5
00000a  d201              BCS      |L3.16|
;;;145        {
;;;146            return NRF_ERROR_INVALID_PARAM;
00000c  2007              MOVS     r0,#7
                  |L3.14|
;;;147        }
;;;148    
;;;149        if (!nrf_drv_gpiote_is_init())
;;;150        {
;;;151            err_code = nrf_drv_gpiote_init();
;;;152            VERIFY_SUCCESS(err_code);
;;;153        }
;;;154    
;;;155        // Save configuration.
;;;156        mp_buttons          = p_buttons;
;;;157        m_button_count      = button_count;
;;;158        m_detection_delay   = detection_delay;
;;;159    
;;;160        m_pin_state      = 0;
;;;161        m_pin_transition = 0;
;;;162    
;;;163        while (button_count--)
;;;164        {
;;;165            app_button_cfg_t const * p_btn = &p_buttons[button_count];
;;;166    
;;;167            nrf_drv_gpiote_in_config_t config = GPIOTE_CONFIG_IN_SENSE_TOGGLE(false);
;;;168            config.pull = p_btn->pull_cfg;
;;;169    
;;;170            err_code = nrf_drv_gpiote_in_init(p_btn->pin_no, &config, gpiote_event_handler);
;;;171            VERIFY_SUCCESS(err_code);
;;;172        }
;;;173    
;;;174        // Create polling timer.
;;;175        return app_timer_create(&m_detection_delay_timer_id,
;;;176                                APP_TIMER_MODE_SINGLE_SHOT,
;;;177                                detection_delay_timeout_handler);
;;;178    }
00000e  bdfe              POP      {r1-r7,pc}
                  |L3.16|
000010  f7fffffe          BL       nrf_drv_gpiote_is_init
000014  2800              CMP      r0,#0                 ;149
000016  d108              BNE      |L3.42|
000018  f7fffffe          BL       nrf_drv_gpiote_init
00001c  4605              MOV      r5,r0                 ;151
00001e  bf00              NOP                            ;152
000020  2d00              CMP      r5,#0                 ;152
000022  d001              BEQ      |L3.40|
000024  4628              MOV      r0,r5                 ;152
000026  e7f2              B        |L3.14|
                  |L3.40|
000028  bf00              NOP                            ;152
                  |L3.42|
00002a  4817              LDR      r0,|L3.136|
00002c  6006              STR      r6,[r0,#0]            ;156  ; mp_buttons
00002e  4817              LDR      r0,|L3.140|
000030  7004              STRB     r4,[r0,#0]            ;157
000032  4817              LDR      r0,|L3.144|
000034  6007              STR      r7,[r0,#0]            ;158  ; m_detection_delay
000036  2000              MOVS     r0,#0                 ;160
000038  4916              LDR      r1,|L3.148|
00003a  6008              STR      r0,[r1,#0]            ;160  ; m_pin_state
00003c  4916              LDR      r1,|L3.152|
00003e  6008              STR      r0,[r1,#0]            ;161  ; m_pin_transition
000040  e017              B        |L3.114|
                  |L3.66|
000042  00e0              LSLS     r0,r4,#3              ;165
000044  1980              ADDS     r0,r0,r6              ;165
000046  9001              STR      r0,[sp,#4]            ;165
000048  4814              LDR      r0,|L3.156|
00004a  6800              LDR      r0,[r0,#0]            ;167  ; <Data1>
00004c  9000              STR      r0,[sp,#0]            ;167
00004e  9801              LDR      r0,[sp,#4]            ;168
000050  7880              LDRB     r0,[r0,#2]            ;168
000052  4669              MOV      r1,sp                 ;168
000054  7048              STRB     r0,[r1,#1]            ;168
000056  9901              LDR      r1,[sp,#4]            ;170
000058  7808              LDRB     r0,[r1,#0]            ;170
00005a  4a11              LDR      r2,|L3.160|
00005c  4669              MOV      r1,sp                 ;170
00005e  f7fffffe          BL       nrf_drv_gpiote_in_init
000062  4605              MOV      r5,r0                 ;170
000064  bf00              NOP                            ;171
000066  2d00              CMP      r5,#0                 ;171
000068  d001              BEQ      |L3.110|
00006a  4628              MOV      r0,r5                 ;171
00006c  e7cf              B        |L3.14|
                  |L3.110|
00006e  bf00              NOP                            ;171
000070  bf00              NOP                            ;172
                  |L3.114|
000072  4620              MOV      r0,r4                 ;163
000074  1e61              SUBS     r1,r4,#1              ;163
000076  b2cc              UXTB     r4,r1                 ;163
000078  2800              CMP      r0,#0                 ;163
00007a  d1e2              BNE      |L3.66|
00007c  4a09              LDR      r2,|L3.164|
00007e  2100              MOVS     r1,#0                 ;175
000080  4809              LDR      r0,|L3.168|
000082  f7fffffe          BL       app_timer_create
000086  e7c2              B        |L3.14|
;;;179    
                          ENDP

                  |L3.136|
                          DCD      mp_buttons
                  |L3.140|
                          DCD      m_button_count
                  |L3.144|
                          DCD      m_detection_delay
                  |L3.148|
                          DCD      m_pin_state
                  |L3.152|
                          DCD      m_pin_transition
                  |L3.156|
                          DCD      ||.constdata||+0x4
                  |L3.160|
                          DCD      gpiote_event_handler
                  |L3.164|
                          DCD      detection_delay_timeout_handler
                  |L3.168|
                          DCD      m_detection_delay_timer_id

                          AREA ||i.app_button_is_pushed||, CODE, READONLY, ALIGN=2

                  app_button_is_pushed PROC
;;;208    
;;;209    bool app_button_is_pushed(uint8_t button_id)
000000  b570              PUSH     {r4-r6,lr}
;;;210    {
000002  4604              MOV      r4,r0
;;;211        ASSERT(button_id <= m_button_count);
;;;212        ASSERT(mp_buttons != NULL);
;;;213    
;;;214        app_button_cfg_t const * p_btn = &mp_buttons[button_id];
000004  00e0              LSLS     r0,r4,#3
000006  4908              LDR      r1,|L4.40|
000008  6809              LDR      r1,[r1,#0]  ; mp_buttons
00000a  1845              ADDS     r5,r0,r1
;;;215        bool is_set = nrf_drv_gpiote_in_is_set(p_btn->pin_no);
00000c  7828              LDRB     r0,[r5,#0]
00000e  f7fffffe          BL       nrf_drv_gpiote_in_is_set
000012  4606              MOV      r6,r0
;;;216    
;;;217        return !(is_set ^ (p_btn->active_state == APP_BUTTON_ACTIVE_HIGH));
000014  7868              LDRB     r0,[r5,#1]
000016  2801              CMP      r0,#1
000018  d100              BNE      |L4.28|
00001a  e000              B        |L4.30|
                  |L4.28|
00001c  2000              MOVS     r0,#0
                  |L4.30|
00001e  4070              EORS     r0,r0,r6
000020  2101              MOVS     r1,#1
000022  4048              EORS     r0,r0,r1
;;;218    }
000024  bd70              POP      {r4-r6,pc}
;;;219    #endif //NRF_MODULE_ENABLED(BUTTON)
                          ENDP

000026  0000              DCW      0x0000
                  |L4.40|
                          DCD      mp_buttons

                          AREA ||i.detection_delay_timeout_handler||, CODE, READONLY, ALIGN=2

                  detection_delay_timeout_handler PROC
;;;69      */
;;;70     static void detection_delay_timeout_handler(void * p_context)
000000  b5f8              PUSH     {r3-r7,lr}
;;;71     {
;;;72         uint8_t i;
;;;73     
;;;74         // Pushed button(s) detected, execute button handler(s).
;;;75         for (i = 0; i < m_button_count; i++)
000002  2500              MOVS     r5,#0
000004  e035              B        |L5.114|
                  |L5.6|
;;;76         {
;;;77             app_button_cfg_t const * p_btn = &mp_buttons[i];
000006  00e8              LSLS     r0,r5,#3
000008  491c              LDR      r1,|L5.124|
00000a  6809              LDR      r1,[r1,#0]  ; mp_buttons
00000c  1844              ADDS     r4,r0,r1
;;;78             uint32_t btn_mask = 1 << p_btn->pin_no;
00000e  7821              LDRB     r1,[r4,#0]
000010  2001              MOVS     r0,#1
000012  4088              LSLS     r0,r0,r1
000014  4606              MOV      r6,r0
;;;79             if (btn_mask & m_pin_transition)
000016  481a              LDR      r0,|L5.128|
000018  6800              LDR      r0,[r0,#0]  ; m_pin_transition
00001a  4030              ANDS     r0,r0,r6
00001c  2800              CMP      r0,#0
00001e  d026              BEQ      |L5.110|
;;;80             {
;;;81                 m_pin_transition &= ~btn_mask;
000020  4817              LDR      r0,|L5.128|
000022  6800              LDR      r0,[r0,#0]  ; m_pin_transition
000024  43b0              BICS     r0,r0,r6
000026  4916              LDR      r1,|L5.128|
000028  6008              STR      r0,[r1,#0]  ; m_pin_transition
;;;82                 bool pin_is_set = nrf_drv_gpiote_in_is_set(p_btn->pin_no);
00002a  7820              LDRB     r0,[r4,#0]
00002c  f7fffffe          BL       nrf_drv_gpiote_in_is_set
000030  4607              MOV      r7,r0
;;;83                 if ((m_pin_state & (1 << p_btn->pin_no)) == (pin_is_set << p_btn->pin_no))
000032  7821              LDRB     r1,[r4,#0]
000034  2001              MOVS     r0,#1
000036  4088              LSLS     r0,r0,r1
000038  4912              LDR      r1,|L5.132|
00003a  6809              LDR      r1,[r1,#0]  ; m_pin_state
00003c  4008              ANDS     r0,r0,r1
00003e  7822              LDRB     r2,[r4,#0]
000040  4639              MOV      r1,r7
000042  4091              LSLS     r1,r1,r2
000044  4288              CMP      r0,r1
000046  d111              BNE      |L5.108|
;;;84                 {
;;;85                     uint32_t transition = !(pin_is_set ^ (p_btn->active_state == APP_BUTTON_ACTIVE_HIGH));
000048  7860              LDRB     r0,[r4,#1]
00004a  2801              CMP      r0,#1
00004c  d100              BNE      |L5.80|
00004e  e000              B        |L5.82|
                  |L5.80|
000050  2000              MOVS     r0,#0
                  |L5.82|
000052  4078              EORS     r0,r0,r7
000054  2101              MOVS     r1,#1
000056  4048              EORS     r0,r0,r1
000058  9000              STR      r0,[sp,#0]
;;;86     
;;;87                     if (p_btn->button_handler)
00005a  6860              LDR      r0,[r4,#4]
00005c  2800              CMP      r0,#0
00005e  d004              BEQ      |L5.106|
;;;88                     {
;;;89                         p_btn->button_handler(p_btn->pin_no, transition);
000060  9b00              LDR      r3,[sp,#0]
000062  b2d9              UXTB     r1,r3
000064  7820              LDRB     r0,[r4,#0]
000066  6862              LDR      r2,[r4,#4]
000068  4790              BLX      r2
                  |L5.106|
;;;90                     }
;;;91                 }
00006a  bf00              NOP      
                  |L5.108|
;;;92             }
00006c  bf00              NOP      
                  |L5.110|
00006e  1c68              ADDS     r0,r5,#1              ;75
000070  b2c5              UXTB     r5,r0                 ;75
                  |L5.114|
000072  4805              LDR      r0,|L5.136|
000074  7800              LDRB     r0,[r0,#0]            ;75  ; m_button_count
000076  4285              CMP      r5,r0                 ;75
000078  dbc5              BLT      |L5.6|
;;;93         }
;;;94     }
00007a  bdf8              POP      {r3-r7,pc}
;;;95     
                          ENDP

                  |L5.124|
                          DCD      mp_buttons
                  |L5.128|
                          DCD      m_pin_transition
                  |L5.132|
                          DCD      m_pin_state
                  |L5.136|
                          DCD      m_button_count

                          AREA ||i.gpiote_event_handler||, CODE, READONLY, ALIGN=2

                  gpiote_event_handler PROC
;;;95     
;;;96     static void gpiote_event_handler(nrf_drv_gpiote_pin_t pin, nrf_gpiote_polarity_t action)
000000  b5f8              PUSH     {r3-r7,lr}
;;;97     {
000002  4605              MOV      r5,r0
000004  460f              MOV      r7,r1
;;;98         uint32_t err_code;
;;;99         uint32_t pin_mask = 1 << pin;
000006  2001              MOVS     r0,#1
000008  40a8              LSLS     r0,r0,r5
00000a  4604              MOV      r4,r0
;;;100    
;;;101        // Start detection timer. If timer is already running, the detection period is restarted.
;;;102        // NOTE: Using the p_context parameter of app_timer_start() to transfer the pin states to the
;;;103        //       timeout handler (by casting event_pins_mask into the equally sized void * p_context
;;;104        //       parameter).
;;;105        err_code = app_timer_stop(m_detection_delay_timer_id);
00000c  4818              LDR      r0,|L6.112|
00000e  6800              LDR      r0,[r0,#0]  ; m_detection_delay_timer_id
000010  f7fffffe          BL       app_timer_stop
000014  4606              MOV      r6,r0
;;;106        if (err_code != NRF_SUCCESS)
000016  2e00              CMP      r6,#0
000018  d000              BEQ      |L6.28|
                  |L6.26|
;;;107        {
;;;108            // The impact in app_button of the app_timer queue running full is losing a button press.
;;;109            // The current implementation ensures that the system will continue working as normal.
;;;110            return;
;;;111        }
;;;112    
;;;113        if (!(m_pin_transition & pin_mask))
;;;114        {
;;;115            if (nrf_drv_gpiote_in_is_set(pin))
;;;116            {
;;;117                m_pin_state |= pin_mask;
;;;118            }
;;;119            else
;;;120            {
;;;121                m_pin_state &= ~(pin_mask);
;;;122            }
;;;123            m_pin_transition |= (pin_mask);
;;;124    
;;;125            err_code = app_timer_start(m_detection_delay_timer_id, m_detection_delay, NULL);
;;;126            if (err_code != NRF_SUCCESS)
;;;127            {
;;;128                // The impact in app_button of the app_timer queue running full is losing a button press.
;;;129                // The current implementation ensures that the system will continue working as normal.
;;;130            }
;;;131        }
;;;132        else
;;;133        {
;;;134            m_pin_transition &= ~pin_mask;
;;;135        }
;;;136    }
00001a  bdf8              POP      {r3-r7,pc}
                  |L6.28|
00001c  4815              LDR      r0,|L6.116|
00001e  6800              LDR      r0,[r0,#0]            ;113  ; m_pin_transition
000020  4020              ANDS     r0,r0,r4              ;113
000022  2800              CMP      r0,#0                 ;113
000024  d11d              BNE      |L6.98|
000026  4628              MOV      r0,r5                 ;115
000028  f7fffffe          BL       nrf_drv_gpiote_in_is_set
00002c  2800              CMP      r0,#0                 ;115
00002e  d005              BEQ      |L6.60|
000030  4811              LDR      r0,|L6.120|
000032  6800              LDR      r0,[r0,#0]            ;117  ; m_pin_state
000034  4320              ORRS     r0,r0,r4              ;117
000036  4910              LDR      r1,|L6.120|
000038  6008              STR      r0,[r1,#0]            ;117  ; m_pin_state
00003a  e004              B        |L6.70|
                  |L6.60|
00003c  480e              LDR      r0,|L6.120|
00003e  6800              LDR      r0,[r0,#0]            ;121  ; m_pin_state
000040  43a0              BICS     r0,r0,r4              ;121
000042  490d              LDR      r1,|L6.120|
000044  6008              STR      r0,[r1,#0]            ;121  ; m_pin_state
                  |L6.70|
000046  480b              LDR      r0,|L6.116|
000048  6800              LDR      r0,[r0,#0]            ;123  ; m_pin_transition
00004a  4320              ORRS     r0,r0,r4              ;123
00004c  4909              LDR      r1,|L6.116|
00004e  6008              STR      r0,[r1,#0]            ;123  ; m_pin_transition
000050  2200              MOVS     r2,#0                 ;125
000052  480a              LDR      r0,|L6.124|
000054  6801              LDR      r1,[r0,#0]            ;125  ; m_detection_delay
000056  4806              LDR      r0,|L6.112|
000058  6800              LDR      r0,[r0,#0]            ;125  ; m_detection_delay_timer_id
00005a  f7fffffe          BL       app_timer_start
00005e  4606              MOV      r6,r0                 ;125
000060  e004              B        |L6.108|
                  |L6.98|
000062  4804              LDR      r0,|L6.116|
000064  6800              LDR      r0,[r0,#0]            ;134  ; m_pin_transition
000066  43a0              BICS     r0,r0,r4              ;134
000068  4902              LDR      r1,|L6.116|
00006a  6008              STR      r0,[r1,#0]            ;134  ; m_pin_transition
                  |L6.108|
00006c  bf00              NOP      
00006e  e7d4              B        |L6.26|
;;;137    
                          ENDP

                  |L6.112|
                          DCD      m_detection_delay_timer_id
                  |L6.116|
                          DCD      m_pin_transition
                  |L6.120|
                          DCD      m_pin_state
                  |L6.124|
                          DCD      m_detection_delay

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  m_detection_delay_timer_id_data
                          %        32

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  m_detection_delay_timer_id
                          DCD      m_detection_delay_timer_id_data
000004  03000000          DCB      0x03,0x00,0x00,0x00

                          AREA ||.data||, DATA, ALIGN=2

                  mp_buttons
                          DCD      0x00000000
                  m_button_count
000004  00000000          DCB      0x00,0x00,0x00,0x00
                  m_detection_delay
                          DCD      0x00000000
                  m_pin_state
                          DCD      0x00000000
                  m_pin_transition
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\..\\..\\components\\libraries\\button\\app_button.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___12_app_button_c_bd9cca92____REV16|
#line 129 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\4.2.0\\CMSIS\\Include\\core_cmInstr.h"
|__asm___12_app_button_c_bd9cca92____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___12_app_button_c_bd9cca92____REVSH|
#line 144
|__asm___12_app_button_c_bd9cca92____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
