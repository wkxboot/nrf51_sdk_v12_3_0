; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\debug\gatt_cache_manager.o --asm_dir=.\DEBUG\ --list_dir=.\DEBUG\ --depend=.\debug\gatt_cache_manager.d --cpu=Cortex-M0 --apcs=interwork -O0 -I..\..\..\config -I..\..\..\..\..\..\components -I..\..\..\..\..\..\components\ble\ble_advertising -I..\..\..\..\..\..\components\ble\ble_dtm -I..\..\..\..\..\..\components\ble\ble_racp -I..\..\..\..\..\..\components\ble\ble_services\ble_ancs_c -I..\..\..\..\..\..\components\ble\ble_services\ble_ans_c -I..\..\..\..\..\..\components\ble\ble_services\ble_bas -I..\..\..\..\..\..\components\ble\ble_services\ble_bas_c -I..\..\..\..\..\..\components\ble\ble_services\ble_cscs -I..\..\..\..\..\..\components\ble\ble_services\ble_cts_c -I..\..\..\..\..\..\components\ble\ble_services\ble_dfu -I..\..\..\..\..\..\components\ble\ble_services\ble_dis -I..\..\..\..\..\..\components\ble\ble_services\ble_gls -I..\..\..\..\..\..\components\ble\ble_services\ble_hids -I..\..\..\..\..\..\components\ble\ble_services\ble_hrs -I..\..\..\..\..\..\components\ble\ble_services\ble_hrs_c -I..\..\..\..\..\..\components\ble\ble_services\ble_hts -I..\..\..\..\..\..\components\ble\ble_services\ble_ias -I..\..\..\..\..\..\components\ble\ble_services\ble_ias_c -I..\..\..\..\..\..\components\ble\ble_services\ble_lbs -I..\..\..\..\..\..\components\ble\ble_services\ble_lbs_c -I..\..\..\..\..\..\components\ble\ble_services\ble_lls -I..\..\..\..\..\..\components\ble\ble_services\ble_nus -I..\..\..\..\..\..\components\ble\ble_services\ble_nus_c -I..\..\..\..\..\..\components\ble\ble_services\ble_rscs -I..\..\..\..\..\..\components\ble\ble_services\ble_rscs_c -I..\..\..\..\..\..\components\ble\ble_services\ble_tps -I..\..\..\..\..\..\components\ble\common -I..\..\..\..\..\..\components\ble\nrf_ble_qwr -I..\..\..\..\..\..\components\ble\peer_manager -I..\..\..\..\..\..\components\boards -I..\..\..\..\..\..\components\drivers_nrf\adc -I..\..\..\..\..\..\components\drivers_nrf\clock -I..\..\..\..\..\..\components\drivers_nrf\common -I..\..\..\..\..\..\components\drivers_nrf\comp -I..\..\..\..\..\..\components\drivers_nrf\delay -I..\..\..\..\..\..\components\drivers_nrf\gpiote -I..\..\..\..\..\..\components\drivers_nrf\hal -I..\..\..\..\..\..\components\drivers_nrf\i2s -I..\..\..\..\..\..\components\drivers_nrf\lpcomp -I..\..\..\..\..\..\components\drivers_nrf\pdm -I..\..\..\..\..\..\components\drivers_nrf\power -I..\..\..\..\..\..\components\drivers_nrf\ppi -I..\..\..\..\..\..\components\drivers_nrf\pwm -I..\..\..\..\..\..\components\drivers_nrf\qdec -I..\..\..\..\..\..\components\drivers_nrf\rng -I..\..\..\..\..\..\components\drivers_nrf\rtc -I..\..\..\..\..\..\components\drivers_nrf\saadc -I..\..\..\..\..\..\components\drivers_nrf\spi_master -I..\..\..\..\..\..\components\drivers_nrf\spi_slave -I..\..\..\..\..\..\components\drivers_nrf\swi -I..\..\..\..\..\..\components\drivers_nrf\timer -I..\..\..\..\..\..\components\drivers_nrf\twi_master -I..\..\..\..\..\..\components\drivers_nrf\twis_slave -I..\..\..\..\..\..\components\drivers_nrf\uart -I..\..\..\..\..\..\components\drivers_nrf\usbd -I..\..\..\..\..\..\components\drivers_nrf\wdt -I..\..\..\..\..\..\components\libraries\bsp -I..\..\..\..\..\..\components\libraries\button -I..\..\..\..\..\..\components\libraries\crc16 -I..\..\..\..\..\..\components\libraries\crc32 -I..\..\..\..\..\..\components\libraries\csense -I..\..\..\..\..\..\components\libraries\csense_drv -I..\..\..\..\..\..\components\libraries\experimental_section_vars -I..\..\..\..\..\..\components\libraries\fds -I..\..\..\..\..\..\components\libraries\fstorage -I..\..\..\..\..\..\components\libraries\gpiote -I..\..\..\..\..\..\components\libraries\hardfault -I..\..\..\..\..\..\components\libraries\hci -I..\..\..\..\..\..\components\libraries\led_softblink -I..\..\..\..\..\..\components\libraries\log -I..\..\..\..\..\..\components\libraries\log\src -I..\..\..\..\..\..\components\libraries\low_power_pwm -I..\..\..\..\..\..\components\libraries\mem_manager -I..\..\..\..\..\..\components\libraries\pwm -I..\..\..\..\..\..\components\libraries\queue -I..\..\..\..\..\..\components\libraries\scheduler -I..\..\..\..\..\..\components\libraries\sensorsim -I..\..\..\..\..\..\components\libraries\slip -I..\..\..\..\..\..\components\libraries\timer -I..\..\..\..\..\..\components\libraries\twi -I..\..\..\..\..\..\components\libraries\uart -I..\..\..\..\..\..\components\libraries\usbd -I..\..\..\..\..\..\components\libraries\usbd\class\audio -I..\..\..\..\..\..\components\libraries\usbd\class\cdc -I..\..\..\..\..\..\components\libraries\usbd\class\cdc\acm -I..\..\..\..\..\..\components\libraries\usbd\class\hid -I..\..\..\..\..\..\components\libraries\usbd\class\hid\generic -I..\..\..\..\..\..\components\libraries\usbd\class\hid\kbd -I..\..\..\..\..\..\components\libraries\usbd\class\hid\mouse -I..\..\..\..\..\..\components\libraries\usbd\class\msc -I..\..\..\..\..\..\components\libraries\usbd\config -I..\..\..\..\..\..\components\libraries\util -I..\..\..\..\..\..\components\softdevice\common\softdevice_handler -I..\..\..\..\..\..\components\softdevice\s130\headers -I..\..\..\..\..\..\components\softdevice\s130\headers\nrf51 -I..\..\..\..\..\..\components\toolchain -I..\..\..\..\..\..\external\segger_rtt -I..\config -I..\..\..\..\..\..\components\ble\ble_services\ble_sls -ID:\development\nordic_ble\src_code\nrf51_sdk_v12_3_0\nRF5_SDK_12.3.0_d7731ad\examples\ble_peripheral\ble_app_smart_locker\JJDK_ZG_ZK\s130\arm5_no_packs\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.2.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\NordicSemiconductor\nRF_DeviceFamilyPack\8.11.1\Device\Include -D__MICROLIB -D_RTE_ -DNRF51 -DBLE_STACK_SUPPORT_REQD -DNRF51822 -DBOARD_JJDK_ZG_ZK -DNRF_SD_BLE_API_VERSION=2 -DS130 -DNRF51 -DSOFTDEVICE_PRESENT -DSWI_DISABLE0 --omf_browse=.\debug\gatt_cache_manager.crf ..\..\..\..\..\..\components\ble\peer_manager\gatt_cache_manager.c]
                          THUMB

                          AREA ||i.apply_pending_flags_check||, CODE, READONLY, ALIGN=2

                  apply_pending_flags_check PROC
;;;409     */
;;;410    static void apply_pending_flags_check(void)
000000  b530              PUSH     {r4,r5,lr}
;;;411    {
000002  b08b              SUB      sp,sp,#0x2c
;;;412        sdk_mapped_flags_t apply_pending_flags;
;;;413    
;;;414        apply_pending_flags = ble_conn_state_user_flag_collection(m_flag_local_db_apply_pending);
000004  4814              LDR      r0,|L1.88|
000006  7800              LDRB     r0,[r0,#0]  ; m_flag_local_db_apply_pending
000008  f7fffffe          BL       ble_conn_state_user_flag_collection
00000c  4605              MOV      r5,r0
;;;415        if (sdk_mapped_flags_any_set(apply_pending_flags))
00000e  4628              MOV      r0,r5
000010  f7fffffe          BL       sdk_mapped_flags_any_set
000014  2800              CMP      r0,#0
000016  d01c              BEQ      |L1.82|
;;;416        {
;;;417            sdk_mapped_flags_key_list_t conn_handle_list;
;;;418            conn_handle_list = ble_conn_state_conn_handles();
000018  a801              ADD      r0,sp,#4
00001a  f7fffffe          BL       ble_conn_state_conn_handles
00001e  2214              MOVS     r2,#0x14
000020  a901              ADD      r1,sp,#4
000022  a806              ADD      r0,sp,#0x18
000024  f7fffffe          BL       __aeabi_memcpy4
;;;419    
;;;420            for (uint32_t i = 0; i < conn_handle_list.len; i++)
000028  2400              MOVS     r4,#0
00002a  e00e              B        |L1.74|
                  |L1.44|
;;;421            {
;;;422                if (ble_conn_state_user_flag_get(conn_handle_list.flag_keys[i], m_flag_local_db_apply_pending))
00002c  0062              LSLS     r2,r4,#1
00002e  a907              ADD      r1,sp,#0x1c
000030  5a88              LDRH     r0,[r1,r2]
000032  4909              LDR      r1,|L1.88|
000034  7809              LDRB     r1,[r1,#0]  ; m_flag_local_db_apply_pending
000036  f7fffffe          BL       ble_conn_state_user_flag_get
00003a  2800              CMP      r0,#0
00003c  d004              BEQ      |L1.72|
;;;423                {
;;;424                    local_db_apply_in_evt(conn_handle_list.flag_keys[i]);
00003e  0062              LSLS     r2,r4,#1
000040  a907              ADD      r1,sp,#0x1c
000042  5a88              LDRH     r0,[r1,r2]
000044  f7fffffe          BL       local_db_apply_in_evt
                  |L1.72|
000048  1c64              ADDS     r4,r4,#1              ;420
                  |L1.74|
00004a  9806              LDR      r0,[sp,#0x18]         ;420
00004c  42a0              CMP      r0,r4                 ;420
00004e  d8ed              BHI      |L1.44|
;;;425                }
;;;426            }
;;;427        }
000050  bf00              NOP      
                  |L1.82|
;;;428    }
000052  b00b              ADD      sp,sp,#0x2c
000054  bd30              POP      {r4,r5,pc}
;;;429    
                          ENDP

000056  0000              DCW      0x0000
                  |L1.88|
                          DCD      m_flag_local_db_apply_pending

                          AREA ||i.cccd_written||, CODE, READONLY, ALIGN=2

                  cccd_written PROC
;;;102     */
;;;103    static bool cccd_written(ble_gatts_evt_write_t * p_write_evt)
000000  4601              MOV      r1,r0
;;;104    {
;;;105        return (    (p_write_evt->op        == BLE_GATTS_OP_WRITE_REQ)
000002  7988              LDRB     r0,[r1,#6]
000004  2801              CMP      r0,#1
000006  d108              BNE      |L2.26|
;;;106                 && (p_write_evt->uuid.type == BLE_UUID_TYPE_BLE)
000008  7908              LDRB     r0,[r1,#4]
00000a  2801              CMP      r0,#1
00000c  d105              BNE      |L2.26|
;;;107                 && (p_write_evt->uuid.uuid == BLE_UUID_DESCRIPTOR_CLIENT_CHAR_CONFIG)
00000e  8848              LDRH     r0,[r1,#2]
000010  4a03              LDR      r2,|L2.32|
000012  4290              CMP      r0,r2
000014  d101              BNE      |L2.26|
000016  2001              MOVS     r0,#1
                  |L2.24|
;;;108               );
;;;109    }
000018  4770              BX       lr
                  |L2.26|
00001a  2000              MOVS     r0,#0                 ;107
00001c  e7fc              B        |L2.24|
;;;110    
                          ENDP

00001e  0000              DCW      0x0000
                  |L2.32|
                          DCD      0x00002902

                          AREA ||i.evt_send||, CODE, READONLY, ALIGN=2

                  evt_send PROC
;;;86     
;;;87     static void evt_send(gcm_evt_t const * p_gcm_evt)
000000  b570              PUSH     {r4-r6,lr}
;;;88     {
000002  4605              MOV      r5,r0
;;;89         for (uint32_t i = 0; i < GCM_EVENT_HANDLERS_CNT; i++)
000004  2400              MOVS     r4,#0
000006  e005              B        |L3.20|
                  |L3.8|
;;;90         {
;;;91             m_evt_handlers[i](p_gcm_evt);
000008  00a0              LSLS     r0,r4,#2
00000a  4a04              LDR      r2,|L3.28|
00000c  5811              LDR      r1,[r2,r0]
00000e  4628              MOV      r0,r5
000010  4788              BLX      r1
000012  1c64              ADDS     r4,r4,#1              ;89
                  |L3.20|
000014  2c00              CMP      r4,#0                 ;89
000016  d0f7              BEQ      |L3.8|
;;;92         }
;;;93     }
000018  bd70              POP      {r4-r6,pc}
;;;94     
                          ENDP

00001a  0000              DCW      0x0000
                  |L3.28|
                          DCD      m_evt_handlers

                          AREA ||i.gcm_ble_evt_handler||, CODE, READONLY, ALIGN=2

                  gcm_ble_evt_handler PROC
;;;483     */
;;;484    void gcm_ble_evt_handler(ble_evt_t * p_ble_evt)
000000  b53e              PUSH     {r1-r5,lr}
;;;485    {
000002  4604              MOV      r4,r0
;;;486        gcm_evt_t event;
;;;487    
;;;488        switch (p_ble_evt->header.evt_id)
000004  8820              LDRH     r0,[r4,#0]
000006  2850              CMP      r0,#0x50
000008  d021              BEQ      |L4.78|
00000a  2852              CMP      r0,#0x52
00000c  d002              BEQ      |L4.20|
00000e  2854              CMP      r0,#0x54
000010  d126              BNE      |L4.96|
000012  e003              B        |L4.28|
                  |L4.20|
;;;489        {
;;;490            case BLE_GATTS_EVT_SYS_ATTR_MISSING:
;;;491                local_db_apply_in_evt(p_ble_evt->evt.gatts_evt.conn_handle);
000014  88a0              LDRH     r0,[r4,#4]
000016  f7fffffe          BL       local_db_apply_in_evt
;;;492                break;
00001a  e021              B        |L4.96|
                  |L4.28|
;;;493    
;;;494            case BLE_GATTS_EVT_SC_CONFIRM:
;;;495                event.evt_id = GCM_EVT_SERVICE_CHANGED_IND_CONFIRMED;
00001c  2106              MOVS     r1,#6
00001e  4668              MOV      r0,sp
000020  7001              STRB     r1,[r0,#0]
;;;496                event.peer_id = im_peer_id_get_by_conn_handle(p_ble_evt->evt.gatts_evt.conn_handle);
000022  88a0              LDRH     r0,[r4,#4]
000024  f7fffffe          BL       im_peer_id_get_by_conn_handle
000028  4601              MOV      r1,r0
00002a  4668              MOV      r0,sp
00002c  8041              STRH     r1,[r0,#2]
;;;497                event.params.service_changed_ind_sent.conn_handle = p_ble_evt->evt.gatts_evt.conn_handle;
00002e  88a1              LDRH     r1,[r4,#4]
000030  8081              STRH     r1,[r0,#4]
;;;498    
;;;499                gscm_db_change_notification_done(event.peer_id);
000032  4669              MOV      r1,sp
000034  8848              LDRH     r0,[r1,#2]
000036  f7fffffe          BL       gscm_db_change_notification_done
;;;500                ble_conn_state_user_flag_set(p_ble_evt->evt.gatts_evt.conn_handle, m_flag_service_changed_pending, false);
00003a  88a0              LDRH     r0,[r4,#4]
00003c  2200              MOVS     r2,#0
00003e  490c              LDR      r1,|L4.112|
000040  7809              LDRB     r1,[r1,#0]  ; m_flag_service_changed_pending
000042  f7fffffe          BL       ble_conn_state_user_flag_set
;;;501    
;;;502                evt_send(&event);
000046  4668              MOV      r0,sp
000048  f7fffffe          BL       evt_send
;;;503                break;
00004c  e008              B        |L4.96|
                  |L4.78|
;;;504    
;;;505            case BLE_GATTS_EVT_WRITE:
;;;506                if (cccd_written(&p_ble_evt->evt.gatts_evt.params.write))
00004e  1da0              ADDS     r0,r4,#6
000050  f7fffffe          BL       cccd_written
000054  2800              CMP      r0,#0
000056  d002              BEQ      |L4.94|
;;;507                {
;;;508                    local_db_update_in_evt(p_ble_evt->evt.gatts_evt.conn_handle);
000058  88a0              LDRH     r0,[r4,#4]
00005a  f7fffffe          BL       local_db_update_in_evt
                  |L4.94|
;;;509                }
;;;510                break;
00005e  bf00              NOP      
                  |L4.96|
000060  bf00              NOP                            ;492
;;;511        }
;;;512    
;;;513        apply_pending_flags_check();
000062  f7fffffe          BL       apply_pending_flags_check
;;;514        update_pending_flags_check();
000066  f7fffffe          BL       update_pending_flags_check
;;;515        service_changed_pending_flags_check();
00006a  f7fffffe          BL       service_changed_pending_flags_check
;;;516    }
00006e  bd3e              POP      {r1-r5,pc}
;;;517    
                          ENDP

                  |L4.112|
                          DCD      m_flag_service_changed_pending

                          AREA ||i.gcm_gscm_evt_handler||, CODE, READONLY, ALIGN=2

                  gcm_gscm_evt_handler PROC
;;;303     */
;;;304    void gcm_gscm_evt_handler(gscm_evt_t const * p_event)
000000  b53e              PUSH     {r1-r5,lr}
;;;305    {
000002  4604              MOV      r4,r0
;;;306        gcm_evt_t event;
;;;307        event.peer_id = p_event->peer_id;
000004  8860              LDRH     r0,[r4,#2]
000006  4669              MOV      r1,sp
000008  8048              STRH     r0,[r1,#2]
;;;308    
;;;309        switch (p_event->evt_id)
00000a  7820              LDRB     r0,[r4,#0]
00000c  2800              CMP      r0,#0
00000e  d004              BEQ      |L5.26|
000010  2801              CMP      r0,#1
000012  d00f              BEQ      |L5.52|
000014  2802              CMP      r0,#2
000016  d129              BNE      |L5.108|
000018  e014              B        |L5.68|
                  |L5.26|
;;;310        {
;;;311            case GSCM_EVT_LOCAL_DB_CACHE_STORED:
;;;312                event.evt_id = GCM_EVT_LOCAL_DB_CACHE_STORED;
00001a  2000              MOVS     r0,#0
00001c  4669              MOV      r1,sp
00001e  7008              STRB     r0,[r1,#0]
;;;313    
;;;314                evt_send(&event);
000020  4668              MOV      r0,sp
000022  f7fffffe          BL       evt_send
;;;315                local_db_apply_in_evt(im_conn_handle_get(p_event->peer_id));
000026  8860              LDRH     r0,[r4,#2]
000028  f7fffffe          BL       im_conn_handle_get
00002c  4605              MOV      r5,r0
00002e  f7fffffe          BL       local_db_apply_in_evt
;;;316                break;
000032  e01b              B        |L5.108|
                  |L5.52|
;;;317    
;;;318            case GSCM_EVT_LOCAL_DB_CACHE_UPDATED:
;;;319                event.evt_id = GCM_EVT_LOCAL_DB_CACHE_UPDATED;
000034  2101              MOVS     r1,#1
000036  4668              MOV      r0,sp
000038  7001              STRB     r1,[r0,#0]
;;;320                event.params.local_db_cache_updated.conn_handle = p_event->params.local_db_cache_updated.conn_handle;
00003a  88a1              LDRH     r1,[r4,#4]
00003c  8081              STRH     r1,[r0,#4]
;;;321    
;;;322                evt_send(&event);
00003e  f7fffffe          BL       evt_send
;;;323                break;
000042  e013              B        |L5.108|
                  |L5.68|
;;;324    
;;;325            case GSCM_EVT_SC_STATE_STORED:
;;;326                if (p_event->params.sc_state_stored.state)
000044  7920              LDRB     r0,[r4,#4]
000046  2800              CMP      r0,#0
000048  d00f              BEQ      |L5.106|
;;;327                {
;;;328                    uint16_t conn_handle = im_conn_handle_get(p_event->peer_id);
00004a  8860              LDRH     r0,[r4,#2]
00004c  f7fffffe          BL       im_conn_handle_get
000050  4605              MOV      r5,r0
;;;329                    if (conn_handle != BLE_CONN_HANDLE_INVALID)
000052  4807              LDR      r0,|L5.112|
000054  4285              CMP      r5,r0
000056  d007              BEQ      |L5.104|
;;;330                    {
;;;331                        ble_conn_state_user_flag_set(conn_handle, m_flag_service_changed_pending, true);
000058  2201              MOVS     r2,#1
00005a  4806              LDR      r0,|L5.116|
00005c  7801              LDRB     r1,[r0,#0]  ; m_flag_service_changed_pending
00005e  4628              MOV      r0,r5
000060  f7fffffe          BL       ble_conn_state_user_flag_set
;;;332                        service_changed_pending_flags_check();
000064  f7fffffe          BL       service_changed_pending_flags_check
                  |L5.104|
;;;333                    }
;;;334                }
000068  bf00              NOP      
                  |L5.106|
;;;335                break;
00006a  bf00              NOP      
                  |L5.108|
00006c  bf00              NOP                            ;316
;;;336        }
;;;337    }
00006e  bd3e              POP      {r1-r5,pc}
;;;338    
                          ENDP

                  |L5.112|
                          DCD      0x0000ffff
                  |L5.116|
                          DCD      m_flag_service_changed_pending

                          AREA ||i.gcm_im_evt_handler||, CODE, READONLY, ALIGN=2

                  gcm_im_evt_handler PROC
;;;344     */
;;;345    void gcm_im_evt_handler(im_evt_t const * p_event)
000000  b510              PUSH     {r4,lr}
;;;346    {
000002  4604              MOV      r4,r0
;;;347        switch (p_event->evt_id)
000004  7820              LDRB     r0,[r4,#0]
000006  2801              CMP      r0,#1
000008  d10e              BNE      |L6.40|
;;;348        {
;;;349            case IM_EVT_BONDED_PEER_CONNECTED:
;;;350                local_db_apply_in_evt(p_event->conn_handle);
00000a  8860              LDRH     r0,[r4,#2]
00000c  f7fffffe          BL       local_db_apply_in_evt
;;;351                if (gscm_service_changed_ind_needed(p_event->conn_handle))
000010  8860              LDRH     r0,[r4,#2]
000012  f7fffffe          BL       gscm_service_changed_ind_needed
000016  2800              CMP      r0,#0
000018  d005              BEQ      |L6.38|
;;;352                {
;;;353                    ble_conn_state_user_flag_set(p_event->conn_handle, m_flag_service_changed_pending, true);
00001a  8860              LDRH     r0,[r4,#2]
00001c  2201              MOVS     r2,#1
00001e  4904              LDR      r1,|L6.48|
000020  7809              LDRB     r1,[r1,#0]  ; m_flag_service_changed_pending
000022  f7fffffe          BL       ble_conn_state_user_flag_set
                  |L6.38|
;;;354                }
;;;355                break;
000026  e000              B        |L6.42|
                  |L6.40|
;;;356            default:
;;;357                break;
000028  bf00              NOP      
                  |L6.42|
00002a  bf00              NOP                            ;355
;;;358        }
;;;359    }
00002c  bd10              POP      {r4,pc}
;;;360    
                          ENDP

00002e  0000              DCW      0x0000
                  |L6.48|
                          DCD      m_flag_service_changed_pending

                          AREA ||i.gcm_init||, CODE, READONLY, ALIGN=2

                  gcm_init PROC
;;;379    
;;;380    ret_code_t gcm_init()
000000  b510              PUSH     {r4,lr}
;;;381    {
;;;382        NRF_PM_DEBUG_CHECK(!m_module_initialized);
;;;383    
;;;384        internal_state_reset();
000002  f7fffffe          BL       internal_state_reset
;;;385    
;;;386        m_flag_local_db_update_pending = ble_conn_state_user_flag_acquire();
000006  f7fffffe          BL       ble_conn_state_user_flag_acquire
00000a  4912              LDR      r1,|L7.84|
00000c  7008              STRB     r0,[r1,#0]
;;;387        m_flag_local_db_apply_pending  = ble_conn_state_user_flag_acquire();
00000e  f7fffffe          BL       ble_conn_state_user_flag_acquire
000012  4911              LDR      r1,|L7.88|
000014  7008              STRB     r0,[r1,#0]
;;;388        m_flag_service_changed_pending = ble_conn_state_user_flag_acquire();
000016  f7fffffe          BL       ble_conn_state_user_flag_acquire
00001a  4910              LDR      r1,|L7.92|
00001c  7008              STRB     r0,[r1,#0]
;;;389        m_flag_service_changed_sent    = ble_conn_state_user_flag_acquire();
00001e  f7fffffe          BL       ble_conn_state_user_flag_acquire
000022  490f              LDR      r1,|L7.96|
000024  7008              STRB     r0,[r1,#0]
;;;390    
;;;391        if  ((m_flag_local_db_update_pending  == BLE_CONN_STATE_USER_FLAG_INVALID)
000026  480b              LDR      r0,|L7.84|
000028  7800              LDRB     r0,[r0,#0]  ; m_flag_local_db_update_pending
00002a  2818              CMP      r0,#0x18
00002c  d00b              BEQ      |L7.70|
;;;392          || (m_flag_local_db_apply_pending   == BLE_CONN_STATE_USER_FLAG_INVALID)
00002e  480a              LDR      r0,|L7.88|
000030  7800              LDRB     r0,[r0,#0]  ; m_flag_local_db_apply_pending
000032  2818              CMP      r0,#0x18
000034  d007              BEQ      |L7.70|
;;;393          || (m_flag_service_changed_pending  == BLE_CONN_STATE_USER_FLAG_INVALID)
000036  4809              LDR      r0,|L7.92|
000038  7800              LDRB     r0,[r0,#0]  ; m_flag_service_changed_pending
00003a  2818              CMP      r0,#0x18
00003c  d003              BEQ      |L7.70|
;;;394          || (m_flag_service_changed_sent     == BLE_CONN_STATE_USER_FLAG_INVALID))
00003e  4608              MOV      r0,r1
000040  7800              LDRB     r0,[r0,#0]  ; m_flag_service_changed_sent
000042  2818              CMP      r0,#0x18
000044  d101              BNE      |L7.74|
                  |L7.70|
;;;395        {
;;;396            return NRF_ERROR_INTERNAL;
000046  2003              MOVS     r0,#3
                  |L7.72|
;;;397        }
;;;398    
;;;399        m_module_initialized = true;
;;;400    
;;;401        return NRF_SUCCESS;
;;;402    }
000048  bd10              POP      {r4,pc}
                  |L7.74|
00004a  2001              MOVS     r0,#1                 ;399
00004c  4905              LDR      r1,|L7.100|
00004e  7008              STRB     r0,[r1,#0]            ;399
000050  2000              MOVS     r0,#0                 ;401
000052  e7f9              B        |L7.72|
;;;403    
                          ENDP

                  |L7.84|
                          DCD      m_flag_local_db_update_pending
                  |L7.88|
                          DCD      m_flag_local_db_apply_pending
                  |L7.92|
                          DCD      m_flag_service_changed_pending
                  |L7.96|
                          DCD      m_flag_service_changed_sent
                  |L7.100|
                          DCD      m_module_initialized

                          AREA ||i.gcm_local_database_has_changed||, CODE, READONLY, ALIGN=2

                  gcm_local_database_has_changed PROC
;;;545    
;;;546    void gcm_local_database_has_changed(void)
000000  b510              PUSH     {r4,lr}
;;;547    {
000002  b086              SUB      sp,sp,#0x18
;;;548        gscm_local_database_has_changed();
000004  f7fffffe          BL       gscm_local_database_has_changed
;;;549    
;;;550        sdk_mapped_flags_key_list_t conn_handles = ble_conn_state_conn_handles();
000008  a801              ADD      r0,sp,#4
00000a  f7fffffe          BL       ble_conn_state_conn_handles
;;;551    
;;;552        for (uint16_t i = 0; i < conn_handles.len; i++)
00000e  2400              MOVS     r4,#0
000010  e011              B        |L8.54|
                  |L8.18|
;;;553        {
;;;554            if (im_peer_id_get_by_conn_handle(conn_handles.flag_keys[i]) == PM_PEER_ID_INVALID)
000012  0062              LSLS     r2,r4,#1
000014  a902              ADD      r1,sp,#8
000016  5a88              LDRH     r0,[r1,r2]
000018  f7fffffe          BL       im_peer_id_get_by_conn_handle
00001c  4909              LDR      r1,|L8.68|
00001e  4288              CMP      r0,r1
000020  d107              BNE      |L8.50|
;;;555            {
;;;556                ble_conn_state_user_flag_set(conn_handles.flag_keys[i], m_flag_service_changed_pending, true);
000022  0062              LSLS     r2,r4,#1
000024  a902              ADD      r1,sp,#8
000026  5a88              LDRH     r0,[r1,r2]
000028  2201              MOVS     r2,#1
00002a  4907              LDR      r1,|L8.72|
00002c  7809              LDRB     r1,[r1,#0]  ; m_flag_service_changed_pending
00002e  f7fffffe          BL       ble_conn_state_user_flag_set
                  |L8.50|
000032  1c60              ADDS     r0,r4,#1              ;552
000034  b284              UXTH     r4,r0                 ;552
                  |L8.54|
000036  9801              LDR      r0,[sp,#4]            ;552
000038  42a0              CMP      r0,r4                 ;552
00003a  d8ea              BHI      |L8.18|
;;;557            }
;;;558        }
;;;559    
;;;560        service_changed_pending_flags_check();
00003c  f7fffffe          BL       service_changed_pending_flags_check
;;;561    }
000040  b006              ADD      sp,sp,#0x18
000042  bd10              POP      {r4,pc}
;;;562    #endif // NRF_MODULE_ENABLED(PEER_MANAGER)
                          ENDP

                  |L8.68|
                          DCD      0x0000ffff
                  |L8.72|
                          DCD      m_flag_service_changed_pending

                          AREA ||i.gcm_local_db_cache_set||, CODE, READONLY, ALIGN=1

                  gcm_local_db_cache_set PROC
;;;537    
;;;538    ret_code_t gcm_local_db_cache_set(pm_peer_id_t peer_id, pm_peer_data_local_gatt_db_t * p_local_db)
000000  b570              PUSH     {r4-r6,lr}
;;;539    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;540        NRF_PM_DEBUG_CHECK(m_module_initialized);
;;;541    
;;;542        return gscm_local_db_cache_set(peer_id, p_local_db);
000006  4629              MOV      r1,r5
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       gscm_local_db_cache_set
;;;543    }
00000e  bd70              POP      {r4-r6,pc}
;;;544    
                          ENDP


                          AREA ||i.gcm_local_db_cache_update||, CODE, READONLY, ALIGN=2

                  gcm_local_db_cache_update PROC
;;;518    
;;;519    ret_code_t gcm_local_db_cache_update(uint16_t conn_handle)
000000  b570              PUSH     {r4-r6,lr}
;;;520    {
000002  4605              MOV      r5,r0
;;;521        NRF_PM_DEBUG_CHECK(m_module_initialized);
;;;522    
;;;523        ret_code_t err_code = gscm_local_db_cache_update(conn_handle);
000004  4628              MOV      r0,r5
000006  f7fffffe          BL       gscm_local_db_cache_update
00000a  4604              MOV      r4,r0
;;;524        bool set_procedure_as_pending = false;
00000c  2600              MOVS     r6,#0
;;;525    
;;;526        if (err_code == NRF_ERROR_BUSY)
00000e  2c11              CMP      r4,#0x11
000010  d101              BNE      |L10.22|
;;;527        {
;;;528            set_procedure_as_pending = true;
000012  2601              MOVS     r6,#1
;;;529            err_code = NRF_SUCCESS;
000014  2400              MOVS     r4,#0
                  |L10.22|
;;;530        }
;;;531    
;;;532        ble_conn_state_user_flag_set(conn_handle, m_flag_local_db_update_pending, set_procedure_as_pending);
000016  4632              MOV      r2,r6
000018  4803              LDR      r0,|L10.40|
00001a  7801              LDRB     r1,[r0,#0]  ; m_flag_local_db_update_pending
00001c  4628              MOV      r0,r5
00001e  f7fffffe          BL       ble_conn_state_user_flag_set
;;;533    
;;;534        return err_code;
000022  4620              MOV      r0,r4
;;;535    }
000024  bd70              POP      {r4-r6,pc}
;;;536    
                          ENDP

000026  0000              DCW      0x0000
                  |L10.40|
                          DCD      m_flag_local_db_update_pending

                          AREA ||i.gcm_smd_evt_handler||, CODE, READONLY, ALIGN=1

                  gcm_smd_evt_handler PROC
;;;366     */
;;;367    void gcm_smd_evt_handler(smd_evt_t const * p_event)
000000  b510              PUSH     {r4,lr}
;;;368    {
000002  4604              MOV      r4,r0
;;;369        switch (p_event->evt_id)
000004  7820              LDRB     r0,[r4,#0]
000006  2807              CMP      r0,#7
000008  d103              BNE      |L11.18|
;;;370        {
;;;371            case SMD_EVT_BONDING_INFO_STORED:
;;;372                local_db_update_in_evt(p_event->conn_handle);
00000a  8860              LDRH     r0,[r4,#2]
00000c  f7fffffe          BL       local_db_update_in_evt
;;;373                break;
000010  e000              B        |L11.20|
                  |L11.18|
;;;374            default:
;;;375                break;
000012  bf00              NOP      
                  |L11.20|
000014  bf00              NOP                            ;373
;;;376        }
;;;377    }
000016  bd10              POP      {r4,pc}
;;;378    
                          ENDP


                          AREA ||i.internal_state_reset||, CODE, READONLY, ALIGN=2

                  internal_state_reset PROC
;;;80      */
;;;81     static void internal_state_reset()
000000  2000              MOVS     r0,#0
;;;82     {
;;;83         m_module_initialized = false;
000002  4901              LDR      r1,|L12.8|
000004  7008              STRB     r0,[r1,#0]
;;;84     }
000006  4770              BX       lr
;;;85     
                          ENDP

                  |L12.8|
                          DCD      m_module_initialized

                          AREA ||i.local_db_apply_in_evt||, CODE, READONLY, ALIGN=2

                  local_db_apply_in_evt PROC
;;;119     */
;;;120    static void local_db_apply_in_evt(uint16_t conn_handle)
000000  b5fe              PUSH     {r1-r7,lr}
;;;121    {
000002  4604              MOV      r4,r0
;;;122        bool set_procedure_as_pending = false;
000004  2600              MOVS     r6,#0
;;;123        ret_code_t err_code;
;;;124        gcm_evt_t event;
;;;125    
;;;126        if (conn_handle == BLE_CONN_HANDLE_INVALID)
000006  4823              LDR      r0,|L13.148|
000008  4284              CMP      r4,r0
00000a  d100              BNE      |L13.14|
                  |L13.12|
;;;127        {
;;;128            return;
;;;129        }
;;;130    
;;;131        err_code = gscm_local_db_cache_apply(conn_handle);
;;;132    
;;;133        switch (err_code)
;;;134        {
;;;135            case NRF_SUCCESS:
;;;136                event.evt_id                                    = GCM_EVT_LOCAL_DB_CACHE_APPLIED;
;;;137                event.peer_id                                   = im_peer_id_get_by_conn_handle(conn_handle);
;;;138                event.params.local_db_cache_applied.conn_handle = conn_handle;
;;;139    
;;;140                evt_send(&event);
;;;141                break;
;;;142    
;;;143            case NRF_ERROR_BUSY:
;;;144                set_procedure_as_pending = true;
;;;145                break;
;;;146    
;;;147            case NRF_ERROR_INVALID_DATA:
;;;148                event.evt_id                                        = GCM_EVT_ERROR_LOCAL_DB_CACHE_APPLY;
;;;149                event.peer_id                                       = im_peer_id_get_by_conn_handle(conn_handle);
;;;150                event.params.error_local_db_cache_apply.conn_handle = conn_handle;
;;;151    
;;;152                evt_send(&event);
;;;153                break;
;;;154    
;;;155            case BLE_ERROR_INVALID_CONN_HANDLE:
;;;156                /* Do nothing */
;;;157                break;
;;;158    
;;;159            default:
;;;160                event.evt_id                              = GCM_EVT_ERROR_UNEXPECTED;
;;;161                event.peer_id                             = im_peer_id_get_by_conn_handle(conn_handle);
;;;162                event.params.error_unexpected.conn_handle = conn_handle;
;;;163                event.params.error_unexpected.error       = err_code;
;;;164    
;;;165                evt_send(&event);
;;;166                break;
;;;167        }
;;;168    
;;;169        ble_conn_state_user_flag_set(conn_handle, m_flag_local_db_apply_pending, set_procedure_as_pending);
;;;170    }
00000c  bdfe              POP      {r1-r7,pc}
                  |L13.14|
00000e  4620              MOV      r0,r4                 ;131
000010  f7fffffe          BL       gscm_local_db_cache_apply
000014  4605              MOV      r5,r0                 ;131
000016  2d00              CMP      r5,#0                 ;133
000018  d008              BEQ      |L13.44|
00001a  2d0b              CMP      r5,#0xb               ;133
00001c  d015              BEQ      |L13.74|
00001e  2d11              CMP      r5,#0x11              ;133
000020  d011              BEQ      |L13.70|
000022  481d              LDR      r0,|L13.152|
000024  1828              ADDS     r0,r5,r0              ;133
000026  2800              CMP      r0,#0                 ;133
000028  d11d              BNE      |L13.102|
00002a  e01b              B        |L13.100|
                  |L13.44|
00002c  2102              MOVS     r1,#2                 ;136
00002e  4668              MOV      r0,sp                 ;136
000030  7001              STRB     r1,[r0,#0]            ;136
000032  4620              MOV      r0,r4                 ;137
000034  f7fffffe          BL       im_peer_id_get_by_conn_handle
000038  4601              MOV      r1,r0                 ;137
00003a  4668              MOV      r0,sp                 ;137
00003c  8041              STRH     r1,[r0,#2]            ;137
00003e  8084              STRH     r4,[r0,#4]            ;138
000040  f7fffffe          BL       evt_send
000044  e01d              B        |L13.130|
                  |L13.70|
000046  2601              MOVS     r6,#1                 ;144
000048  e01b              B        |L13.130|
                  |L13.74|
00004a  2103              MOVS     r1,#3                 ;148
00004c  4668              MOV      r0,sp                 ;148
00004e  7001              STRB     r1,[r0,#0]            ;148
000050  4620              MOV      r0,r4                 ;149
000052  f7fffffe          BL       im_peer_id_get_by_conn_handle
000056  4601              MOV      r1,r0                 ;149
000058  4668              MOV      r0,sp                 ;149
00005a  8041              STRH     r1,[r0,#2]            ;149
00005c  8084              STRH     r4,[r0,#4]            ;150
00005e  f7fffffe          BL       evt_send
000062  e00e              B        |L13.130|
                  |L13.100|
000064  e00d              B        |L13.130|
                  |L13.102|
000066  2109              MOVS     r1,#9                 ;160
000068  4668              MOV      r0,sp                 ;160
00006a  7001              STRB     r1,[r0,#0]            ;160
00006c  4620              MOV      r0,r4                 ;161
00006e  f7fffffe          BL       im_peer_id_get_by_conn_handle
000072  4601              MOV      r1,r0                 ;161
000074  4668              MOV      r0,sp                 ;161
000076  8041              STRH     r1,[r0,#2]            ;161
000078  8084              STRH     r4,[r0,#4]            ;162
00007a  9502              STR      r5,[sp,#8]            ;163
00007c  f7fffffe          BL       evt_send
000080  bf00              NOP                            ;166
                  |L13.130|
000082  bf00              NOP                            ;141
000084  4632              MOV      r2,r6                 ;169
000086  4805              LDR      r0,|L13.156|
000088  7801              LDRB     r1,[r0,#0]            ;169  ; m_flag_local_db_apply_pending
00008a  4620              MOV      r0,r4                 ;169
00008c  f7fffffe          BL       ble_conn_state_user_flag_set
000090  bf00              NOP      
000092  e7bb              B        |L13.12|
;;;171    
                          ENDP

                  |L13.148|
                          DCD      0x0000ffff
                  |L13.152|
                          DCD      0xffffcffe
                  |L13.156|
                          DCD      m_flag_local_db_apply_pending

                          AREA ||i.local_db_update_in_evt||, CODE, READONLY, ALIGN=2

                  local_db_update_in_evt PROC
;;;180     */
;;;181    static void local_db_update_in_evt(uint16_t conn_handle)
000000  b5fe              PUSH     {r1-r7,lr}
;;;182    {
000002  4604              MOV      r4,r0
;;;183        gcm_evt_t event;
;;;184        bool set_procedure_as_pending = false;
000004  2600              MOVS     r6,#0
;;;185        ret_code_t err_code = gscm_local_db_cache_update(conn_handle);
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       gscm_local_db_cache_update
00000c  4605              MOV      r5,r0
;;;186    
;;;187        switch (err_code)
00000e  2d11              CMP      r5,#0x11
000010  d01a              BEQ      |L14.72|
000012  dc04              BGT      |L14.30|
000014  2d00              CMP      r5,#0
000016  d009              BEQ      |L14.44|
000018  2d0c              CMP      r5,#0xc
00001a  d131              BNE      |L14.128|
00001c  e016              B        |L14.76|
                  |L14.30|
00001e  2d86              CMP      r5,#0x86
000020  d021              BEQ      |L14.102|
000022  4822              LDR      r0,|L14.172|
000024  1828              ADDS     r0,r5,r0
000026  2800              CMP      r0,#0
000028  d12a              BNE      |L14.128|
00002a  e00c              B        |L14.70|
                  |L14.44|
;;;188        {
;;;189            case NRF_SUCCESS:
;;;190                event.evt_id                                    = GCM_EVT_LOCAL_DB_CACHE_UPDATED;
00002c  2101              MOVS     r1,#1
00002e  4668              MOV      r0,sp
000030  7001              STRB     r1,[r0,#0]
;;;191                event.params.local_db_cache_applied.conn_handle = conn_handle;
000032  8084              STRH     r4,[r0,#4]
;;;192                event.peer_id                                   = im_peer_id_get_by_conn_handle(conn_handle);
000034  4620              MOV      r0,r4
000036  f7fffffe          BL       im_peer_id_get_by_conn_handle
00003a  4669              MOV      r1,sp
00003c  8048              STRH     r0,[r1,#2]
;;;193    
;;;194                evt_send(&event);
00003e  4668              MOV      r0,sp
000040  f7fffffe          BL       evt_send
;;;195                break;
000044  e02a              B        |L14.156|
                  |L14.70|
;;;196    
;;;197            case BLE_ERROR_INVALID_CONN_HANDLE:
;;;198                /* Do nothing */
;;;199                break;
000046  e029              B        |L14.156|
                  |L14.72|
;;;200    
;;;201            case NRF_ERROR_BUSY:
;;;202                set_procedure_as_pending = true;
000048  2601              MOVS     r6,#1
;;;203                break;
00004a  e027              B        |L14.156|
                  |L14.76|
;;;204    
;;;205            case NRF_ERROR_DATA_SIZE:
;;;206                event.evt_id = GCM_EVT_ERROR_DATA_SIZE;
00004c  2107              MOVS     r1,#7
00004e  4668              MOV      r0,sp
000050  7001              STRB     r1,[r0,#0]
;;;207                event.params.error_data_size.conn_handle = conn_handle;
000052  8084              STRH     r4,[r0,#4]
;;;208                event.peer_id = im_peer_id_get_by_conn_handle(conn_handle);
000054  4620              MOV      r0,r4
000056  f7fffffe          BL       im_peer_id_get_by_conn_handle
00005a  4669              MOV      r1,sp
00005c  8048              STRH     r0,[r1,#2]
;;;209    
;;;210                evt_send(&event);
00005e  4668              MOV      r0,sp
000060  f7fffffe          BL       evt_send
;;;211                break;
000064  e01a              B        |L14.156|
                  |L14.102|
;;;212    
;;;213            case NRF_ERROR_STORAGE_FULL:
;;;214                event.evt_id = GCM_EVT_ERROR_STORAGE_FULL;
000066  2108              MOVS     r1,#8
000068  4668              MOV      r0,sp
00006a  7001              STRB     r1,[r0,#0]
;;;215                event.params.error_no_mem.conn_handle = conn_handle;
00006c  8084              STRH     r4,[r0,#4]
;;;216                event.peer_id = im_peer_id_get_by_conn_handle(conn_handle);
00006e  4620              MOV      r0,r4
000070  f7fffffe          BL       im_peer_id_get_by_conn_handle
000074  4669              MOV      r1,sp
000076  8048              STRH     r0,[r1,#2]
;;;217    
;;;218                evt_send(&event);
000078  4668              MOV      r0,sp
00007a  f7fffffe          BL       evt_send
;;;219                break;
00007e  e00d              B        |L14.156|
                  |L14.128|
;;;220    
;;;221            default:
;;;222                event.evt_id                              = GCM_EVT_ERROR_UNEXPECTED;
000080  2109              MOVS     r1,#9
000082  4668              MOV      r0,sp
000084  7001              STRB     r1,[r0,#0]
;;;223                event.peer_id                             = im_peer_id_get_by_conn_handle(conn_handle);
000086  4620              MOV      r0,r4
000088  f7fffffe          BL       im_peer_id_get_by_conn_handle
00008c  4601              MOV      r1,r0
00008e  4668              MOV      r0,sp
000090  8041              STRH     r1,[r0,#2]
;;;224                event.params.error_unexpected.conn_handle = conn_handle;
000092  8084              STRH     r4,[r0,#4]
;;;225                event.params.error_unexpected.error       = err_code;
000094  9502              STR      r5,[sp,#8]
;;;226    
;;;227                evt_send(&event);
000096  f7fffffe          BL       evt_send
;;;228                break;
00009a  bf00              NOP      
                  |L14.156|
00009c  bf00              NOP                            ;195
;;;229        }
;;;230    
;;;231        ble_conn_state_user_flag_set(conn_handle, m_flag_local_db_update_pending, set_procedure_as_pending);
00009e  4632              MOV      r2,r6
0000a0  4803              LDR      r0,|L14.176|
0000a2  7801              LDRB     r1,[r0,#0]  ; m_flag_local_db_update_pending
0000a4  4620              MOV      r0,r4
0000a6  f7fffffe          BL       ble_conn_state_user_flag_set
;;;232    }
0000aa  bdfe              POP      {r1-r7,pc}
;;;233    
                          ENDP

                  |L14.172|
                          DCD      0xffffcffe
                  |L14.176|
                          DCD      m_flag_local_db_update_pending

                          AREA ||i.sdk_mapped_flags_any_set||, CODE, READONLY, ALIGN=1

                  sdk_mapped_flags_any_set PROC
;;;176     */
;;;177    static __INLINE bool sdk_mapped_flags_any_set(sdk_mapped_flags_t flags)
000000  4601              MOV      r1,r0
;;;178    {
;;;179        return (flags != 0);
000002  2900              CMP      r1,#0
000004  d001              BEQ      |L15.10|
000006  2001              MOVS     r0,#1
                  |L15.8|
;;;180    }
000008  4770              BX       lr
                  |L15.10|
00000a  2000              MOVS     r0,#0                 ;179
00000c  e7fc              B        |L15.8|
;;;181    
                          ENDP


                          AREA ||i.service_changed_pending_flags_check||, CODE, READONLY, ALIGN=2

                  service_changed_pending_flags_check PROC
;;;455     */
;;;456    static void service_changed_pending_flags_check(void)
000000  b530              PUSH     {r4,r5,lr}
;;;457    {
000002  b08b              SUB      sp,sp,#0x2c
;;;458        sdk_mapped_flags_t service_changed_pending_flags;
;;;459    
;;;460        service_changed_pending_flags = ble_conn_state_user_flag_collection(m_flag_service_changed_pending);
000004  4818              LDR      r0,|L16.104|
000006  7800              LDRB     r0,[r0,#0]  ; m_flag_service_changed_pending
000008  f7fffffe          BL       ble_conn_state_user_flag_collection
00000c  4605              MOV      r5,r0
;;;461        if (sdk_mapped_flags_any_set(service_changed_pending_flags))
00000e  4628              MOV      r0,r5
000010  f7fffffe          BL       sdk_mapped_flags_any_set
000014  2800              CMP      r0,#0
000016  d025              BEQ      |L16.100|
;;;462        {
;;;463            sdk_mapped_flags_key_list_t conn_handle_list;
;;;464            conn_handle_list = ble_conn_state_conn_handles();
000018  a801              ADD      r0,sp,#4
00001a  f7fffffe          BL       ble_conn_state_conn_handles
00001e  2214              MOVS     r2,#0x14
000020  a901              ADD      r1,sp,#4
000022  a806              ADD      r0,sp,#0x18
000024  f7fffffe          BL       __aeabi_memcpy4
;;;465    
;;;466            for (uint32_t i = 0; i < conn_handle_list.len; i++)
000028  2400              MOVS     r4,#0
00002a  e017              B        |L16.92|
                  |L16.44|
;;;467            {
;;;468                if (    ble_conn_state_user_flag_get(conn_handle_list.flag_keys[i],
00002c  0062              LSLS     r2,r4,#1
00002e  a907              ADD      r1,sp,#0x1c
000030  5a88              LDRH     r0,[r1,r2]
000032  490d              LDR      r1,|L16.104|
000034  7809              LDRB     r1,[r1,#0]  ; m_flag_service_changed_pending
000036  f7fffffe          BL       ble_conn_state_user_flag_get
00003a  2800              CMP      r0,#0
00003c  d00d              BEQ      |L16.90|
;;;469                                                     m_flag_service_changed_pending)
;;;470                    && !ble_conn_state_user_flag_get(conn_handle_list.flag_keys[i],
00003e  0062              LSLS     r2,r4,#1
000040  a907              ADD      r1,sp,#0x1c
000042  5a88              LDRH     r0,[r1,r2]
000044  4909              LDR      r1,|L16.108|
000046  7809              LDRB     r1,[r1,#0]  ; m_flag_service_changed_sent
000048  f7fffffe          BL       ble_conn_state_user_flag_get
00004c  2800              CMP      r0,#0
00004e  d104              BNE      |L16.90|
;;;471                                                     m_flag_service_changed_sent))
;;;472                {
;;;473                    service_changed_send_in_evt(conn_handle_list.flag_keys[i]);
000050  0062              LSLS     r2,r4,#1
000052  a907              ADD      r1,sp,#0x1c
000054  5a88              LDRH     r0,[r1,r2]
000056  f7fffffe          BL       service_changed_send_in_evt
                  |L16.90|
00005a  1c64              ADDS     r4,r4,#1              ;466
                  |L16.92|
00005c  9806              LDR      r0,[sp,#0x18]         ;466
00005e  42a0              CMP      r0,r4                 ;466
000060  d8e4              BHI      |L16.44|
;;;474                }
;;;475            }
;;;476        }
000062  bf00              NOP      
                  |L16.100|
;;;477    }
000064  b00b              ADD      sp,sp,#0x2c
000066  bd30              POP      {r4,r5,pc}
;;;478    
                          ENDP

                  |L16.104|
                          DCD      m_flag_service_changed_pending
                  |L16.108|
                          DCD      m_flag_service_changed_sent

                          AREA ||i.service_changed_send_in_evt||, CODE, READONLY, ALIGN=2

                  service_changed_send_in_evt PROC
;;;242     */
;;;243    static void service_changed_send_in_evt(uint16_t conn_handle)
000000  b5f0              PUSH     {r4-r7,lr}
;;;244    {
000002  b085              SUB      sp,sp,#0x14
000004  4604              MOV      r4,r0
;;;245        gcm_evt_t event;
;;;246        bool sc_pending_state = true;
000006  2601              MOVS     r6,#1
;;;247        bool sc_sent_state = false;
000008  2700              MOVS     r7,#0
;;;248        ret_code_t err_code = gscm_service_changed_ind_send(conn_handle);
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       gscm_service_changed_ind_send
000010  4605              MOV      r5,r0
;;;249    
;;;250        switch (err_code)
000012  2d11              CMP      r5,#0x11
000014  d01f              BEQ      |L17.86|
000016  dc06              BGT      |L17.38|
000018  2d00              CMP      r5,#0
00001a  d00d              BEQ      |L17.56|
00001c  2d06              CMP      r5,#6
00001e  d01c              BEQ      |L17.90|
000020  2d08              CMP      r5,#8
000022  d127              BNE      |L17.116|
000024  e018              B        |L17.88|
                  |L17.38|
000026  4822              LDR      r0,|L17.176|
000028  1828              ADDS     r0,r5,r0
00002a  2800              CMP      r0,#0
00002c  d021              BEQ      |L17.114|
00002e  4921              LDR      r1,|L17.180|
000030  1840              ADDS     r0,r0,r1
000032  2800              CMP      r0,#0
000034  d11e              BNE      |L17.116|
000036  e018              B        |L17.106|
                  |L17.56|
;;;251        {
;;;252            case NRF_SUCCESS:
;;;253                sc_sent_state = true;
000038  2701              MOVS     r7,#1
;;;254    
;;;255                event.evt_id = GCM_EVT_SERVICE_CHANGED_IND_SENT;
00003a  2105              MOVS     r1,#5
00003c  4668              MOV      r0,sp
00003e  7101              STRB     r1,[r0,#4]
;;;256                event.peer_id = im_peer_id_get_by_conn_handle(conn_handle);
000040  4620              MOV      r0,r4
000042  f7fffffe          BL       im_peer_id_get_by_conn_handle
000046  4601              MOV      r1,r0
000048  4668              MOV      r0,sp
00004a  80c1              STRH     r1,[r0,#6]
;;;257                event.params.service_changed_ind_sent.conn_handle = conn_handle;
00004c  8104              STRH     r4,[r0,#8]
;;;258    
;;;259                evt_send(&event);
00004e  a801              ADD      r0,sp,#4
000050  f7fffffe          BL       evt_send
;;;260                break;
000054  e01c              B        |L17.144|
                  |L17.86|
;;;261    
;;;262            case NRF_ERROR_BUSY:
;;;263                // Do nothing.
;;;264                break;
000056  e01b              B        |L17.144|
                  |L17.88|
;;;265    
;;;266            case NRF_ERROR_INVALID_STATE:
;;;267                // CCCDs not enabled. Drop indication.
;;;268                // Fallthrough.
;;;269    
;;;270            case NRF_ERROR_NOT_SUPPORTED:
000058  bf00              NOP      
                  |L17.90|
;;;271                // Service changed not supported. Drop indication.
;;;272                sc_pending_state = false;
00005a  2600              MOVS     r6,#0
;;;273                gscm_db_change_notification_done(im_peer_id_get_by_conn_handle(conn_handle));
00005c  4620              MOV      r0,r4
00005e  f7fffffe          BL       im_peer_id_get_by_conn_handle
000062  9000              STR      r0,[sp,#0]
000064  f7fffffe          BL       gscm_db_change_notification_done
;;;274                break;
000068  e012              B        |L17.144|
                  |L17.106|
;;;275    
;;;276            case BLE_ERROR_GATTS_SYS_ATTR_MISSING:
;;;277                local_db_apply_in_evt(conn_handle);
00006a  4620              MOV      r0,r4
00006c  f7fffffe          BL       local_db_apply_in_evt
;;;278                break;
000070  e00e              B        |L17.144|
                  |L17.114|
;;;279    
;;;280            case BLE_ERROR_INVALID_CONN_HANDLE:
;;;281                // Do nothing.
;;;282                break;
000072  e00d              B        |L17.144|
                  |L17.116|
;;;283    
;;;284            default:
;;;285                event.evt_id = GCM_EVT_ERROR_UNEXPECTED;
000074  2109              MOVS     r1,#9
000076  4668              MOV      r0,sp
000078  7101              STRB     r1,[r0,#4]
;;;286                event.params.error_unexpected.conn_handle = conn_handle;
00007a  8104              STRH     r4,[r0,#8]
;;;287                event.params.error_unexpected.error = err_code;
00007c  9503              STR      r5,[sp,#0xc]
;;;288                event.peer_id = im_peer_id_get_by_conn_handle(conn_handle);
00007e  4620              MOV      r0,r4
000080  f7fffffe          BL       im_peer_id_get_by_conn_handle
000084  4669              MOV      r1,sp
000086  80c8              STRH     r0,[r1,#6]
;;;289    
;;;290                evt_send(&event);
000088  a801              ADD      r0,sp,#4
00008a  f7fffffe          BL       evt_send
;;;291                break;
00008e  bf00              NOP      
                  |L17.144|
000090  bf00              NOP                            ;260
;;;292        }
;;;293    
;;;294        ble_conn_state_user_flag_set(conn_handle, m_flag_service_changed_pending, sc_pending_state);
000092  4632              MOV      r2,r6
000094  4808              LDR      r0,|L17.184|
000096  7801              LDRB     r1,[r0,#0]  ; m_flag_service_changed_pending
000098  4620              MOV      r0,r4
00009a  f7fffffe          BL       ble_conn_state_user_flag_set
;;;295        ble_conn_state_user_flag_set(conn_handle, m_flag_service_changed_sent, sc_sent_state);
00009e  463a              MOV      r2,r7
0000a0  4806              LDR      r0,|L17.188|
0000a2  7801              LDRB     r1,[r0,#0]  ; m_flag_service_changed_sent
0000a4  4620              MOV      r0,r4
0000a6  f7fffffe          BL       ble_conn_state_user_flag_set
;;;296    }
0000aa  b005              ADD      sp,sp,#0x14
0000ac  bdf0              POP      {r4-r7,pc}
;;;297    
                          ENDP

0000ae  0000              DCW      0x0000
                  |L17.176|
                          DCD      0xffffcffe
                  |L17.180|
                          DCD      0xfffffc01
                  |L17.184|
                          DCD      m_flag_service_changed_pending
                  |L17.188|
                          DCD      m_flag_service_changed_sent

                          AREA ||i.update_pending_flags_check||, CODE, READONLY, ALIGN=2

                  update_pending_flags_check PROC
;;;432     */
;;;433    static void update_pending_flags_check(void)
000000  b530              PUSH     {r4,r5,lr}
;;;434    {
000002  b08b              SUB      sp,sp,#0x2c
;;;435        sdk_mapped_flags_t update_pending_flags;
;;;436    
;;;437        update_pending_flags = ble_conn_state_user_flag_collection(m_flag_local_db_update_pending);
000004  4814              LDR      r0,|L18.88|
000006  7800              LDRB     r0,[r0,#0]  ; m_flag_local_db_update_pending
000008  f7fffffe          BL       ble_conn_state_user_flag_collection
00000c  4605              MOV      r5,r0
;;;438        if (sdk_mapped_flags_any_set(update_pending_flags))
00000e  4628              MOV      r0,r5
000010  f7fffffe          BL       sdk_mapped_flags_any_set
000014  2800              CMP      r0,#0
000016  d01c              BEQ      |L18.82|
;;;439        {
;;;440            sdk_mapped_flags_key_list_t conn_handle_list;
;;;441            conn_handle_list = ble_conn_state_conn_handles();
000018  a801              ADD      r0,sp,#4
00001a  f7fffffe          BL       ble_conn_state_conn_handles
00001e  2214              MOVS     r2,#0x14
000020  a901              ADD      r1,sp,#4
000022  a806              ADD      r0,sp,#0x18
000024  f7fffffe          BL       __aeabi_memcpy4
;;;442    
;;;443            for (uint32_t i = 0; i < conn_handle_list.len; i++)
000028  2400              MOVS     r4,#0
00002a  e00e              B        |L18.74|
                  |L18.44|
;;;444            {
;;;445                if (ble_conn_state_user_flag_get(conn_handle_list.flag_keys[i], m_flag_local_db_update_pending))
00002c  0062              LSLS     r2,r4,#1
00002e  a907              ADD      r1,sp,#0x1c
000030  5a88              LDRH     r0,[r1,r2]
000032  4909              LDR      r1,|L18.88|
000034  7809              LDRB     r1,[r1,#0]  ; m_flag_local_db_update_pending
000036  f7fffffe          BL       ble_conn_state_user_flag_get
00003a  2800              CMP      r0,#0
00003c  d004              BEQ      |L18.72|
;;;446                {
;;;447                    local_db_update_in_evt(conn_handle_list.flag_keys[i]);
00003e  0062              LSLS     r2,r4,#1
000040  a907              ADD      r1,sp,#0x1c
000042  5a88              LDRH     r0,[r1,r2]
000044  f7fffffe          BL       local_db_update_in_evt
                  |L18.72|
000048  1c64              ADDS     r4,r4,#1              ;443
                  |L18.74|
00004a  9806              LDR      r0,[sp,#0x18]         ;443
00004c  42a0              CMP      r0,r4                 ;443
00004e  d8ed              BHI      |L18.44|
;;;448                }
;;;449            }
;;;450        }
000050  bf00              NOP      
                  |L18.82|
;;;451    }
000052  b00b              ADD      sp,sp,#0x2c
000054  bd30              POP      {r4,r5,pc}
;;;452    
                          ENDP

000056  0000              DCW      0x0000
                  |L18.88|
                          DCD      m_flag_local_db_update_pending

                          AREA ||.data||, DATA, ALIGN=2

                  m_evt_handlers
                          DCD      pm_gcm_evt_handler
                  m_module_initialized
000004  00                DCB      0x00
                  m_flag_local_db_update_pending
000005  00                DCB      0x00
                  m_flag_local_db_apply_pending
000006  00                DCB      0x00
                  m_flag_service_changed_pending
000007  00                DCB      0x00
                  m_flag_service_changed_sent
000008  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\..\\..\\components\\ble\\peer_manager\\gatt_cache_manager.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___20_gatt_cache_manager_c_40c97f5c____REV16|
#line 129 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\4.2.0\\CMSIS\\Include\\core_cmInstr.h"
|__asm___20_gatt_cache_manager_c_40c97f5c____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___20_gatt_cache_manager_c_40c97f5c____REVSH|
#line 144
|__asm___20_gatt_cache_manager_c_40c97f5c____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
