; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\debug\peer_manager.o --asm_dir=.\DEBUG\ --list_dir=.\DEBUG\ --depend=.\debug\peer_manager.d --cpu=Cortex-M0 --apcs=interwork -O0 -I..\..\..\config -I..\..\..\..\..\..\components -I..\..\..\..\..\..\components\ble\ble_advertising -I..\..\..\..\..\..\components\ble\ble_dtm -I..\..\..\..\..\..\components\ble\ble_racp -I..\..\..\..\..\..\components\ble\ble_services\ble_ancs_c -I..\..\..\..\..\..\components\ble\ble_services\ble_ans_c -I..\..\..\..\..\..\components\ble\ble_services\ble_bas -I..\..\..\..\..\..\components\ble\ble_services\ble_bas_c -I..\..\..\..\..\..\components\ble\ble_services\ble_cscs -I..\..\..\..\..\..\components\ble\ble_services\ble_cts_c -I..\..\..\..\..\..\components\ble\ble_services\ble_dfu -I..\..\..\..\..\..\components\ble\ble_services\ble_dis -I..\..\..\..\..\..\components\ble\ble_services\ble_gls -I..\..\..\..\..\..\components\ble\ble_services\ble_hids -I..\..\..\..\..\..\components\ble\ble_services\ble_hrs -I..\..\..\..\..\..\components\ble\ble_services\ble_hrs_c -I..\..\..\..\..\..\components\ble\ble_services\ble_hts -I..\..\..\..\..\..\components\ble\ble_services\ble_ias -I..\..\..\..\..\..\components\ble\ble_services\ble_ias_c -I..\..\..\..\..\..\components\ble\ble_services\ble_lbs -I..\..\..\..\..\..\components\ble\ble_services\ble_lbs_c -I..\..\..\..\..\..\components\ble\ble_services\ble_lls -I..\..\..\..\..\..\components\ble\ble_services\ble_nus -I..\..\..\..\..\..\components\ble\ble_services\ble_nus_c -I..\..\..\..\..\..\components\ble\ble_services\ble_rscs -I..\..\..\..\..\..\components\ble\ble_services\ble_rscs_c -I..\..\..\..\..\..\components\ble\ble_services\ble_tps -I..\..\..\..\..\..\components\ble\common -I..\..\..\..\..\..\components\ble\nrf_ble_qwr -I..\..\..\..\..\..\components\ble\peer_manager -I..\..\..\..\..\..\components\boards -I..\..\..\..\..\..\components\drivers_nrf\adc -I..\..\..\..\..\..\components\drivers_nrf\clock -I..\..\..\..\..\..\components\drivers_nrf\common -I..\..\..\..\..\..\components\drivers_nrf\comp -I..\..\..\..\..\..\components\drivers_nrf\delay -I..\..\..\..\..\..\components\drivers_nrf\gpiote -I..\..\..\..\..\..\components\drivers_nrf\hal -I..\..\..\..\..\..\components\drivers_nrf\i2s -I..\..\..\..\..\..\components\drivers_nrf\lpcomp -I..\..\..\..\..\..\components\drivers_nrf\pdm -I..\..\..\..\..\..\components\drivers_nrf\power -I..\..\..\..\..\..\components\drivers_nrf\ppi -I..\..\..\..\..\..\components\drivers_nrf\pwm -I..\..\..\..\..\..\components\drivers_nrf\qdec -I..\..\..\..\..\..\components\drivers_nrf\rng -I..\..\..\..\..\..\components\drivers_nrf\rtc -I..\..\..\..\..\..\components\drivers_nrf\saadc -I..\..\..\..\..\..\components\drivers_nrf\spi_master -I..\..\..\..\..\..\components\drivers_nrf\spi_slave -I..\..\..\..\..\..\components\drivers_nrf\swi -I..\..\..\..\..\..\components\drivers_nrf\timer -I..\..\..\..\..\..\components\drivers_nrf\twi_master -I..\..\..\..\..\..\components\drivers_nrf\twis_slave -I..\..\..\..\..\..\components\drivers_nrf\uart -I..\..\..\..\..\..\components\drivers_nrf\usbd -I..\..\..\..\..\..\components\drivers_nrf\wdt -I..\..\..\..\..\..\components\libraries\bsp -I..\..\..\..\..\..\components\libraries\button -I..\..\..\..\..\..\components\libraries\crc16 -I..\..\..\..\..\..\components\libraries\crc32 -I..\..\..\..\..\..\components\libraries\csense -I..\..\..\..\..\..\components\libraries\csense_drv -I..\..\..\..\..\..\components\libraries\experimental_section_vars -I..\..\..\..\..\..\components\libraries\fds -I..\..\..\..\..\..\components\libraries\fstorage -I..\..\..\..\..\..\components\libraries\gpiote -I..\..\..\..\..\..\components\libraries\hardfault -I..\..\..\..\..\..\components\libraries\hci -I..\..\..\..\..\..\components\libraries\led_softblink -I..\..\..\..\..\..\components\libraries\log -I..\..\..\..\..\..\components\libraries\log\src -I..\..\..\..\..\..\components\libraries\low_power_pwm -I..\..\..\..\..\..\components\libraries\mem_manager -I..\..\..\..\..\..\components\libraries\pwm -I..\..\..\..\..\..\components\libraries\queue -I..\..\..\..\..\..\components\libraries\scheduler -I..\..\..\..\..\..\components\libraries\sensorsim -I..\..\..\..\..\..\components\libraries\slip -I..\..\..\..\..\..\components\libraries\timer -I..\..\..\..\..\..\components\libraries\twi -I..\..\..\..\..\..\components\libraries\uart -I..\..\..\..\..\..\components\libraries\usbd -I..\..\..\..\..\..\components\libraries\usbd\class\audio -I..\..\..\..\..\..\components\libraries\usbd\class\cdc -I..\..\..\..\..\..\components\libraries\usbd\class\cdc\acm -I..\..\..\..\..\..\components\libraries\usbd\class\hid -I..\..\..\..\..\..\components\libraries\usbd\class\hid\generic -I..\..\..\..\..\..\components\libraries\usbd\class\hid\kbd -I..\..\..\..\..\..\components\libraries\usbd\class\hid\mouse -I..\..\..\..\..\..\components\libraries\usbd\class\msc -I..\..\..\..\..\..\components\libraries\usbd\config -I..\..\..\..\..\..\components\libraries\util -I..\..\..\..\..\..\components\softdevice\common\softdevice_handler -I..\..\..\..\..\..\components\softdevice\s130\headers -I..\..\..\..\..\..\components\softdevice\s130\headers\nrf51 -I..\..\..\..\..\..\components\toolchain -I..\..\..\..\..\..\external\segger_rtt -I..\config -I..\..\..\..\..\..\components\ble\ble_services\ble_sls -ID:\development\nordic_ble\src_code\nrf51_sdk_v12_3_0\nRF5_SDK_12.3.0_d7731ad\examples\ble_peripheral\ble_app_smart_locker\JJDK_ZG_ZK\s130\arm5_no_packs\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.2.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\NordicSemiconductor\nRF_DeviceFamilyPack\8.11.1\Device\Include -D__MICROLIB -D_RTE_ -DNRF51 -DBLE_STACK_SUPPORT_REQD -DNRF51822 -DBOARD_JJDK_ZG_ZK -DNRF_SD_BLE_API_VERSION=2 -DS130 -DNRF51 -DSOFTDEVICE_PRESENT -DSWI_DISABLE0 --omf_browse=.\debug\peer_manager.crf ..\..\..\..\..\..\components\ble\peer_manager\peer_manager.c]
                          THUMB

                          AREA ||i.evt_send||, CODE, READONLY, ALIGN=2

                  evt_send PROC
;;;77      */
;;;78     static void evt_send(pm_evt_t * p_pm_evt)
000000  b570              PUSH     {r4-r6,lr}
;;;79     {
000002  4605              MOV      r5,r0
;;;80         for (int i = 0; i < m_n_registrants; i++)
000004  2400              MOVS     r4,#0
000006  e005              B        |L1.20|
                  |L1.8|
;;;81         {
;;;82             m_evt_handlers[i](p_pm_evt);
000008  00a0              LSLS     r0,r4,#2
00000a  4a05              LDR      r2,|L1.32|
00000c  5811              LDR      r1,[r2,r0]
00000e  4628              MOV      r0,r5
000010  4788              BLX      r1
000012  1c64              ADDS     r4,r4,#1              ;80
                  |L1.20|
000014  4803              LDR      r0,|L1.36|
000016  7800              LDRB     r0,[r0,#0]            ;80  ; m_n_registrants
000018  4284              CMP      r4,r0                 ;80
00001a  dbf5              BLT      |L1.8|
;;;83         }
;;;84     }
00001c  bd70              POP      {r4-r6,pc}
;;;85     
                          ENDP

00001e  0000              DCW      0x0000
                  |L1.32|
                          DCD      m_evt_handlers
                  |L1.36|
                          DCD      m_n_registrants

                          AREA ||i.internal_state_reset||, CODE, READONLY, ALIGN=2

                  internal_state_reset PROC
;;;482     */
;;;483    static void internal_state_reset()
000000  2000              MOVS     r0,#0
;;;484    {
;;;485        m_highest_ranked_peer = PM_PEER_ID_INVALID;
000002  43c0              MVNS     r0,r0
000004  4905              LDR      r1,|L2.28|
000006  8008              STRH     r0,[r1,#0]
;;;486        m_peer_rank_token     = PM_STORE_TOKEN_INVALID;
000008  2000              MOVS     r0,#0
00000a  4905              LDR      r1,|L2.32|
00000c  6008              STR      r0,[r1,#0]  ; m_peer_rank_token
;;;487        m_pairing_flag_id     = BLE_CONN_STATE_USER_FLAG_INVALID;
00000e  2018              MOVS     r0,#0x18
000010  4904              LDR      r1,|L2.36|
000012  7008              STRB     r0,[r1,#0]
;;;488        m_bonding_flag_id     = BLE_CONN_STATE_USER_FLAG_INVALID;
000014  4904              LDR      r1,|L2.40|
000016  7008              STRB     r0,[r1,#0]
;;;489    }
000018  4770              BX       lr
;;;490    
                          ENDP

00001a  0000              DCW      0x0000
                  |L2.28|
                          DCD      m_highest_ranked_peer
                  |L2.32|
                          DCD      m_peer_rank_token
                  |L2.36|
                          DCD      m_pairing_flag_id
                  |L2.40|
                          DCD      m_bonding_flag_id

                          AREA ||i.pm_conn_handle_get||, CODE, READONLY, ALIGN=2

                  pm_conn_handle_get PROC
;;;714    
;;;715    ret_code_t pm_conn_handle_get(pm_peer_id_t peer_id, uint16_t * p_conn_handle)
000000  b570              PUSH     {r4-r6,lr}
;;;716    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;717        VERIFY_MODULE_INITIALIZED();
000006  bf00              NOP      
000008  4809              LDR      r0,|L3.48|
00000a  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000c  2800              CMP      r0,#0
00000e  d101              BNE      |L3.20|
000010  2008              MOVS     r0,#8
                  |L3.18|
;;;718        VERIFY_PARAM_NOT_NULL(p_conn_handle);
;;;719        *p_conn_handle = im_conn_handle_get(peer_id);
;;;720        return NRF_SUCCESS;
;;;721    }
000012  bd70              POP      {r4-r6,pc}
                  |L3.20|
000014  bf00              NOP                            ;717
000016  bf00              NOP                            ;718
000018  2c00              CMP      r4,#0                 ;718
00001a  d101              BNE      |L3.32|
00001c  200e              MOVS     r0,#0xe               ;718
00001e  e7f8              B        |L3.18|
                  |L3.32|
000020  bf00              NOP                            ;718
000022  4628              MOV      r0,r5                 ;719
000024  f7fffffe          BL       im_conn_handle_get
000028  8020              STRH     r0,[r4,#0]            ;719
00002a  2000              MOVS     r0,#0                 ;720
00002c  e7f1              B        |L3.18|
;;;722    
                          ENDP

00002e  0000              DCW      0x0000
                  |L3.48|
                          DCD      m_module_initialized

                          AREA ||i.pm_conn_sec_config_reply||, CODE, READONLY, ALIGN=1

                  pm_conn_sec_config_reply PROC
;;;600    
;;;601    void pm_conn_sec_config_reply(uint16_t conn_handle, pm_conn_sec_config_t * p_conn_sec_config)
000000  b570              PUSH     {r4-r6,lr}
;;;602    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;603        sm_conn_sec_config_reply(conn_handle, p_conn_sec_config);
000006  4629              MOV      r1,r5
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       sm_conn_sec_config_reply
;;;604    }
00000e  bd70              POP      {r4-r6,pc}
;;;605    
                          ENDP


                          AREA ||i.pm_conn_sec_status_get||, CODE, READONLY, ALIGN=2

                  pm_conn_sec_status_get PROC
;;;687    
;;;688    ret_code_t pm_conn_sec_status_get(uint16_t conn_handle, pm_conn_sec_status_t * p_conn_sec_status)
000000  b5f8              PUSH     {r3-r7,lr}
;;;689    {
000002  4606              MOV      r6,r0
000004  460c              MOV      r4,r1
;;;690        VERIFY_MODULE_INITIALIZED();
000006  bf00              NOP      
000008  4822              LDR      r0,|L5.148|
00000a  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000c  2800              CMP      r0,#0
00000e  d101              BNE      |L5.20|
000010  2008              MOVS     r0,#8
                  |L5.18|
;;;691        VERIFY_PARAM_NOT_NULL(p_conn_sec_status);
;;;692    
;;;693        ble_conn_state_status_t status = ble_conn_state_status(conn_handle);
;;;694    
;;;695        if (status == BLE_CONN_STATUS_INVALID)
;;;696        {
;;;697            return BLE_ERROR_INVALID_CONN_HANDLE;
;;;698        }
;;;699    
;;;700        p_conn_sec_status->connected      = (status == BLE_CONN_STATUS_CONNECTED);
;;;701        p_conn_sec_status->bonded         = ble_conn_state_user_flag_get(conn_handle, m_bonding_flag_id);
;;;702        p_conn_sec_status->encrypted      = ble_conn_state_encrypted(conn_handle);
;;;703        p_conn_sec_status->mitm_protected = ble_conn_state_mitm_protected(conn_handle);
;;;704        return NRF_SUCCESS;
;;;705    }
000012  bdf8              POP      {r3-r7,pc}
                  |L5.20|
000014  bf00              NOP                            ;690
000016  bf00              NOP                            ;691
000018  2c00              CMP      r4,#0                 ;691
00001a  d101              BNE      |L5.32|
00001c  200e              MOVS     r0,#0xe               ;691
00001e  e7f8              B        |L5.18|
                  |L5.32|
000020  bf00              NOP                            ;691
000022  4630              MOV      r0,r6                 ;693
000024  f7fffffe          BL       ble_conn_state_status
000028  4605              MOV      r5,r0                 ;693
00002a  2d00              CMP      r5,#0                 ;695
00002c  d101              BNE      |L5.50|
00002e  481a              LDR      r0,|L5.152|
000030  e7ef              B        |L5.18|
                  |L5.50|
000032  7820              LDRB     r0,[r4,#0]            ;700
000034  0840              LSRS     r0,r0,#1              ;700
000036  0040              LSLS     r0,r0,#1              ;700
000038  2d02              CMP      r5,#2                 ;700
00003a  d101              BNE      |L5.64|
00003c  2101              MOVS     r1,#1                 ;700
00003e  e000              B        |L5.66|
                  |L5.64|
000040  2100              MOVS     r1,#0                 ;700
                  |L5.66|
000042  07c9              LSLS     r1,r1,#31             ;700
000044  0fc9              LSRS     r1,r1,#31             ;700
000046  4308              ORRS     r0,r0,r1              ;700
000048  7020              STRB     r0,[r4,#0]            ;700
00004a  4814              LDR      r0,|L5.156|
00004c  7801              LDRB     r1,[r0,#0]            ;701  ; m_bonding_flag_id
00004e  4630              MOV      r0,r6                 ;701
000050  f7fffffe          BL       ble_conn_state_user_flag_get
000054  00c0              LSLS     r0,r0,#3              ;701
000056  2108              MOVS     r1,#8                 ;701
000058  4008              ANDS     r0,r0,r1              ;701
00005a  4607              MOV      r7,r0                 ;701
00005c  7820              LDRB     r0,[r4,#0]            ;701
00005e  4388              BICS     r0,r0,r1              ;701
000060  4338              ORRS     r0,r0,r7              ;701
000062  7020              STRB     r0,[r4,#0]            ;701
000064  4630              MOV      r0,r6                 ;702
000066  f7fffffe          BL       ble_conn_state_encrypted
00006a  0040              LSLS     r0,r0,#1              ;702
00006c  2102              MOVS     r1,#2                 ;702
00006e  4008              ANDS     r0,r0,r1              ;702
000070  4607              MOV      r7,r0                 ;702
000072  7820              LDRB     r0,[r4,#0]            ;702
000074  4388              BICS     r0,r0,r1              ;702
000076  4338              ORRS     r0,r0,r7              ;702
000078  7020              STRB     r0,[r4,#0]            ;702
00007a  4630              MOV      r0,r6                 ;703
00007c  f7fffffe          BL       ble_conn_state_mitm_protected
000080  0080              LSLS     r0,r0,#2              ;703
000082  2104              MOVS     r1,#4                 ;703
000084  4008              ANDS     r0,r0,r1              ;703
000086  4607              MOV      r7,r0                 ;703
000088  7820              LDRB     r0,[r4,#0]            ;703
00008a  4388              BICS     r0,r0,r1              ;703
00008c  4338              ORRS     r0,r0,r7              ;703
00008e  7020              STRB     r0,[r4,#0]            ;703
000090  2000              MOVS     r0,#0                 ;704
000092  e7be              B        |L5.18|
;;;706    
                          ENDP

                  |L5.148|
                          DCD      m_module_initialized
                  |L5.152|
                          DCD      0x00003002
                  |L5.156|
                          DCD      m_bonding_flag_id

                          AREA ||i.pm_conn_secure||, CODE, READONLY, ALIGN=2

                  pm_conn_secure PROC
;;;588    
;;;589    ret_code_t pm_conn_secure(uint16_t conn_handle, bool force_repairing)
000000  b570              PUSH     {r4-r6,lr}
;;;590    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;591        VERIFY_MODULE_INITIALIZED();
000006  bf00              NOP      
000008  4806              LDR      r0,|L6.36|
00000a  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000c  2800              CMP      r0,#0
00000e  d101              BNE      |L6.20|
000010  2008              MOVS     r0,#8
                  |L6.18|
;;;592    
;;;593        ret_code_t err_code;
;;;594    
;;;595        err_code = sm_link_secure(conn_handle, force_repairing);
;;;596    
;;;597        return err_code;
;;;598    }
000012  bd70              POP      {r4-r6,pc}
                  |L6.20|
000014  bf00              NOP                            ;591
000016  4629              MOV      r1,r5                 ;595
000018  4620              MOV      r0,r4                 ;595
00001a  f7fffffe          BL       sm_link_secure
00001e  4606              MOV      r6,r0                 ;595
000020  4630              MOV      r0,r6                 ;597
000022  e7f6              B        |L6.18|
;;;599    
                          ENDP

                  |L6.36|
                          DCD      m_module_initialized

                          AREA ||i.pm_device_identities_list_set||, CODE, READONLY, ALIGN=2

                  pm_device_identities_list_set PROC
;;;679    
;;;680    ret_code_t pm_device_identities_list_set(pm_peer_id_t const * p_peers,
000000  b570              PUSH     {r4-r6,lr}
;;;681                                             uint32_t             peer_cnt)
;;;682    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;683        VERIFY_MODULE_INITIALIZED();
000006  bf00              NOP      
000008  4805              LDR      r0,|L7.32|
00000a  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000c  2800              CMP      r0,#0
00000e  d101              BNE      |L7.20|
000010  2008              MOVS     r0,#8
                  |L7.18|
;;;684        return im_device_identities_list_set(p_peers, peer_cnt);
;;;685    }
000012  bd70              POP      {r4-r6,pc}
                  |L7.20|
000014  bf00              NOP                            ;683
000016  4629              MOV      r1,r5                 ;684
000018  4620              MOV      r0,r4                 ;684
00001a  f7fffffe          BL       im_device_identities_list_set
00001e  e7f8              B        |L7.18|
;;;686    
                          ENDP

                  |L7.32|
                          DCD      m_module_initialized

                          AREA ||i.pm_gcm_evt_handler||, CODE, READONLY, ALIGN=1

                  pm_gcm_evt_handler PROC
;;;372     */
;;;373    void pm_gcm_evt_handler(gcm_evt_t const * p_gcm_evt)
000000  b530              PUSH     {r4,r5,lr}
;;;374    {
000002  b085              SUB      sp,sp,#0x14
000004  4604              MOV      r4,r0
;;;375        bool send_evt = true;
000006  2501              MOVS     r5,#1
;;;376        pm_evt_t pm_evt;
;;;377    
;;;378        memset(&pm_evt, 0, sizeof(pm_evt_t));
000008  2114              MOVS     r1,#0x14
00000a  4668              MOV      r0,sp
00000c  f7fffffe          BL       __aeabi_memclr4
;;;379        pm_evt.peer_id = p_gcm_evt->peer_id;
000010  8860              LDRH     r0,[r4,#2]
000012  4669              MOV      r1,sp
000014  8088              STRH     r0,[r1,#4]
;;;380        pm_evt.conn_handle = im_conn_handle_get(pm_evt.peer_id);
000016  8888              LDRH     r0,[r1,#4]
000018  f7fffffe          BL       im_conn_handle_get
00001c  4669              MOV      r1,sp
00001e  8048              STRH     r0,[r1,#2]
;;;381    
;;;382        switch (p_gcm_evt->evt_id)
000020  7820              LDRB     r0,[r4,#0]
000022  0003              MOVS     r3,r0
000024  f7fffffe          BL       __ARM_common_switch8
000028  0a060e16          DCB      0x0a,0x06,0x0e,0x16
00002c  1a1e262a          DCB      0x1a,0x1e,0x26,0x2a
000030  2e30343d          DCB      0x2e,0x30,0x34,0x3d
;;;383        {
;;;384            case GCM_EVT_LOCAL_DB_CACHE_STORED:
;;;385                pm_evt.evt_id = PM_EVT_PEER_DATA_UPDATE_SUCCEEDED;
000034  2107              MOVS     r1,#7
000036  4668              MOV      r0,sp
000038  7001              STRB     r1,[r0,#0]
;;;386                pm_evt.params.peer_data_update_succeeded.action = PM_PEER_DATA_OP_UPDATE;
00003a  2100              MOVS     r1,#0
00003c  7241              STRB     r1,[r0,#9]
;;;387                pm_evt.params.peer_data_update_succeeded.data_id =  PM_PEER_DATA_ID_GATT_LOCAL;
00003e  2108              MOVS     r1,#8
000040  7201              STRB     r1,[r0,#8]
;;;388                break;
000042  e02e              B        |L8.162|
;;;389    
;;;390            case GCM_EVT_LOCAL_DB_CACHE_UPDATED:
;;;391                pm_evt.evt_id = PM_EVT_PEER_DATA_UPDATE_SUCCEEDED;
000044  2107              MOVS     r1,#7
000046  4668              MOV      r0,sp
000048  7001              STRB     r1,[r0,#0]
;;;392                pm_evt.params.peer_data_update_succeeded.action = PM_PEER_DATA_OP_UPDATE;
00004a  2100              MOVS     r1,#0
00004c  7241              STRB     r1,[r0,#9]
;;;393                pm_evt.params.peer_data_update_succeeded.data_id =  PM_PEER_DATA_ID_GATT_LOCAL;
00004e  2108              MOVS     r1,#8
000050  7201              STRB     r1,[r0,#8]
;;;394                break;
000052  e026              B        |L8.162|
;;;395    
;;;396            case GCM_EVT_LOCAL_DB_CACHE_APPLIED:
;;;397                pm_evt.evt_id = PM_EVT_LOCAL_DB_CACHE_APPLIED;
000054  200d              MOVS     r0,#0xd
000056  4669              MOV      r1,sp
000058  7008              STRB     r0,[r1,#0]
;;;398                break;
00005a  e022              B        |L8.162|
;;;399    
;;;400            case GCM_EVT_ERROR_LOCAL_DB_CACHE_APPLY:
;;;401                pm_evt.evt_id = PM_EVT_LOCAL_DB_CACHE_APPLY_FAILED;
00005c  200e              MOVS     r0,#0xe
00005e  4669              MOV      r1,sp
000060  7008              STRB     r0,[r1,#0]
;;;402                break;
000062  e01e              B        |L8.162|
;;;403    
;;;404            case GCM_EVT_REMOTE_DB_CACHE_UPDATED:
;;;405                pm_evt.evt_id = PM_EVT_PEER_DATA_UPDATE_SUCCEEDED;
000064  2107              MOVS     r1,#7
000066  4668              MOV      r0,sp
000068  7001              STRB     r1,[r0,#0]
;;;406                pm_evt.params.peer_data_update_succeeded.action = PM_PEER_DATA_OP_UPDATE;
00006a  2100              MOVS     r1,#0
00006c  7241              STRB     r1,[r0,#9]
;;;407                pm_evt.params.peer_data_update_succeeded.data_id =  PM_PEER_DATA_ID_GATT_REMOTE;
00006e  2105              MOVS     r1,#5
000070  7201              STRB     r1,[r0,#8]
;;;408                break;
000072  e016              B        |L8.162|
;;;409    
;;;410            case GCM_EVT_SERVICE_CHANGED_IND_SENT:
;;;411                pm_evt.evt_id = PM_EVT_SERVICE_CHANGED_IND_SENT;
000074  200f              MOVS     r0,#0xf
000076  4669              MOV      r1,sp
000078  7008              STRB     r0,[r1,#0]
;;;412                break;
00007a  e012              B        |L8.162|
;;;413    
;;;414            case GCM_EVT_SERVICE_CHANGED_IND_CONFIRMED:
;;;415                pm_evt.evt_id = PM_EVT_SERVICE_CHANGED_IND_CONFIRMED;
00007c  2010              MOVS     r0,#0x10
00007e  4669              MOV      r1,sp
000080  7008              STRB     r0,[r1,#0]
;;;416                break;
000082  e00e              B        |L8.162|
;;;417    
;;;418            case GCM_EVT_ERROR_DATA_SIZE:
;;;419                send_evt = false;
000084  2500              MOVS     r5,#0
;;;420                break;
000086  e00c              B        |L8.162|
;;;421    
;;;422            case GCM_EVT_ERROR_STORAGE_FULL:
;;;423                pm_evt.evt_id = PM_EVT_STORAGE_FULL;
000088  2005              MOVS     r0,#5
00008a  4669              MOV      r1,sp
00008c  7008              STRB     r0,[r1,#0]
;;;424                break;
00008e  e008              B        |L8.162|
;;;425    
;;;426            case GCM_EVT_ERROR_UNEXPECTED:
;;;427                pm_evt.evt_id = PM_EVT_ERROR_UNEXPECTED;
000090  2106              MOVS     r1,#6
000092  4668              MOV      r0,sp
000094  7001              STRB     r1,[r0,#0]
;;;428                pm_evt.params.error_unexpected.error = p_gcm_evt->params.error_unexpected.error;
000096  68a0              LDR      r0,[r4,#8]
000098  9002              STR      r0,[sp,#8]
;;;429                pm_evt.conn_handle = p_gcm_evt->params.error_unexpected.conn_handle;
00009a  88a1              LDRH     r1,[r4,#4]
00009c  4668              MOV      r0,sp
00009e  8041              STRH     r1,[r0,#2]
;;;430                break;
0000a0  bf00              NOP      
                  |L8.162|
0000a2  bf00              NOP                            ;388
;;;431        }
;;;432    
;;;433        if (send_evt)
0000a4  2d00              CMP      r5,#0
0000a6  d002              BEQ      |L8.174|
;;;434        {
;;;435            evt_send(&pm_evt);
0000a8  4668              MOV      r0,sp
0000aa  f7fffffe          BL       evt_send
                  |L8.174|
;;;436        }
;;;437    }
0000ae  b005              ADD      sp,sp,#0x14
0000b0  bd30              POP      {r4,r5,pc}
;;;438    
                          ENDP


                          AREA ||i.pm_id_addr_get||, CODE, READONLY, ALIGN=2

                  pm_id_addr_get PROC
;;;627    
;;;628    ret_code_t pm_id_addr_get(ble_gap_addr_t * p_addr)
000000  b510              PUSH     {r4,lr}
;;;629    {
000002  4604              MOV      r4,r0
;;;630        VERIFY_MODULE_INITIALIZED();
000004  bf00              NOP      
000006  4808              LDR      r0,|L9.40|
000008  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000a  2800              CMP      r0,#0
00000c  d101              BNE      |L9.18|
00000e  2008              MOVS     r0,#8
                  |L9.16|
;;;631        VERIFY_PARAM_NOT_NULL(p_addr);
;;;632        return im_id_addr_get(p_addr);
;;;633    }
000010  bd10              POP      {r4,pc}
                  |L9.18|
000012  bf00              NOP                            ;630
000014  bf00              NOP                            ;631
000016  2c00              CMP      r4,#0                 ;631
000018  d101              BNE      |L9.30|
00001a  200e              MOVS     r0,#0xe               ;631
00001c  e7f8              B        |L9.16|
                  |L9.30|
00001e  bf00              NOP                            ;631
000020  4620              MOV      r0,r4                 ;632
000022  f7fffffe          BL       im_id_addr_get
000026  e7f3              B        |L9.16|
;;;634    
                          ENDP

                  |L9.40|
                          DCD      m_module_initialized

                          AREA ||i.pm_id_addr_set||, CODE, READONLY, ALIGN=2

                  pm_id_addr_set PROC
;;;620    
;;;621    ret_code_t pm_id_addr_set(ble_gap_addr_t const * p_addr)
000000  b510              PUSH     {r4,lr}
;;;622    {
000002  4604              MOV      r4,r0
;;;623        VERIFY_MODULE_INITIALIZED();
000004  bf00              NOP      
000006  4805              LDR      r0,|L10.28|
000008  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000a  2800              CMP      r0,#0
00000c  d101              BNE      |L10.18|
00000e  2008              MOVS     r0,#8
                  |L10.16|
;;;624        return im_id_addr_set(p_addr);
;;;625    }
000010  bd10              POP      {r4,pc}
                  |L10.18|
000012  bf00              NOP                            ;623
000014  4620              MOV      r0,r4                 ;624
000016  f7fffffe          BL       im_id_addr_set
00001a  e7f9              B        |L10.16|
;;;626    
                          ENDP

                  |L10.28|
                          DCD      m_module_initialized

                          AREA ||i.pm_im_evt_handler||, CODE, READONLY, ALIGN=2

                  pm_im_evt_handler PROC
;;;444     */
;;;445    void pm_im_evt_handler(im_evt_t const * p_im_evt)
000000  b530              PUSH     {r4,r5,lr}
;;;446    {
000002  b085              SUB      sp,sp,#0x14
000004  4604              MOV      r4,r0
;;;447        pm_evt_t pm_evt;
;;;448        ret_code_t err_code;
;;;449    
;;;450        switch (p_im_evt->evt_id)
000006  7820              LDRB     r0,[r4,#0]
000008  2800              CMP      r0,#0
00000a  d002              BEQ      |L11.18|
00000c  2801              CMP      r0,#1
00000e  d11d              BNE      |L11.76|
000010  e004              B        |L11.28|
                  |L11.18|
;;;451        {
;;;452            case IM_EVT_DUPLICATE_ID:
;;;453                // Attempt to delete the duplicate data to free space and avoid finding old data when
;;;454                // scanning in the future
;;;455                err_code = pm_peer_delete(p_im_evt->params.duplicate_id.peer_id_2);
000012  88e0              LDRH     r0,[r4,#6]
000014  f7fffffe          BL       pm_peer_delete
000018  4605              MOV      r5,r0
;;;456                UNUSED_VARIABLE(err_code);
;;;457                break;
00001a  e017              B        |L11.76|
                  |L11.28|
;;;458    
;;;459            case IM_EVT_BONDED_PEER_CONNECTED:
;;;460                ble_conn_state_user_flag_set(p_im_evt->conn_handle, m_bonding_flag_id, true);
00001c  8860              LDRH     r0,[r4,#2]
00001e  2201              MOVS     r2,#1
000020  490c              LDR      r1,|L11.84|
000022  7809              LDRB     r1,[r1,#0]  ; m_bonding_flag_id
000024  f7fffffe          BL       ble_conn_state_user_flag_set
;;;461                memset(&pm_evt, 0, sizeof(pm_evt_t));
000028  2114              MOVS     r1,#0x14
00002a  4668              MOV      r0,sp
00002c  f7fffffe          BL       __aeabi_memclr4
;;;462                pm_evt.conn_handle = p_im_evt->conn_handle;
000030  8861              LDRH     r1,[r4,#2]
000032  4668              MOV      r0,sp
000034  8041              STRH     r1,[r0,#2]
;;;463                pm_evt.peer_id = im_peer_id_get_by_conn_handle(p_im_evt->conn_handle);
000036  8860              LDRH     r0,[r4,#2]
000038  f7fffffe          BL       im_peer_id_get_by_conn_handle
00003c  4601              MOV      r1,r0
00003e  4668              MOV      r0,sp
000040  8081              STRH     r1,[r0,#4]
;;;464                pm_evt.evt_id = PM_EVT_BONDED_PEER_CONNECTED;
000042  2100              MOVS     r1,#0
000044  7001              STRB     r1,[r0,#0]
;;;465                evt_send(&pm_evt);
000046  f7fffffe          BL       evt_send
;;;466                break;
00004a  bf00              NOP      
                  |L11.76|
00004c  bf00              NOP                            ;457
;;;467        }
;;;468    }
00004e  b005              ADD      sp,sp,#0x14
000050  bd30              POP      {r4,r5,pc}
;;;469    
                          ENDP

000052  0000              DCW      0x0000
                  |L11.84|
                          DCD      m_bonding_flag_id

                          AREA ||i.pm_init||, CODE, READONLY, ALIGN=2

                  pm_init PROC
;;;491    
;;;492    ret_code_t pm_init(void)
000000  b510              PUSH     {r4,lr}
;;;493    {
;;;494        ret_code_t err_code;
;;;495    
;;;496        err_code = pds_init();
000002  f7fffffe          BL       pds_init
000006  4604              MOV      r4,r0
;;;497        if (err_code != NRF_SUCCESS)
000008  2c00              CMP      r4,#0
00000a  d001              BEQ      |L12.16|
;;;498        {
;;;499            return NRF_ERROR_INTERNAL;
00000c  2003              MOVS     r0,#3
                  |L12.14|
;;;500        }
;;;501    
;;;502        err_code = pdb_init();
;;;503        if (err_code != NRF_SUCCESS)
;;;504        {
;;;505            return NRF_ERROR_INTERNAL;
;;;506        }
;;;507    
;;;508        err_code = sm_init();
;;;509        if (err_code != NRF_SUCCESS)
;;;510        {
;;;511            return NRF_ERROR_INTERNAL;
;;;512        }
;;;513    
;;;514        err_code = smd_init();
;;;515        if (err_code != NRF_SUCCESS)
;;;516        {
;;;517            return NRF_ERROR_INTERNAL;
;;;518        }
;;;519    
;;;520        err_code = gcm_init();
;;;521        if (err_code != NRF_SUCCESS)
;;;522        {
;;;523            return NRF_ERROR_INTERNAL;
;;;524        }
;;;525    
;;;526        err_code = gscm_init();
;;;527        if (err_code != NRF_SUCCESS)
;;;528        {
;;;529            return NRF_ERROR_INTERNAL;
;;;530        }
;;;531    
;;;532        err_code = im_init();
;;;533        if (err_code != NRF_SUCCESS)
;;;534        {
;;;535            return NRF_ERROR_INTERNAL;
;;;536        }
;;;537    
;;;538        internal_state_reset();
;;;539    
;;;540        m_pairing_flag_id = ble_conn_state_user_flag_acquire();
;;;541        if (m_pairing_flag_id == BLE_CONN_STATE_USER_FLAG_INVALID)
;;;542        {
;;;543            return NRF_ERROR_INTERNAL;
;;;544        }
;;;545    
;;;546        m_bonding_flag_id = ble_conn_state_user_flag_acquire();
;;;547        if (m_bonding_flag_id == BLE_CONN_STATE_USER_FLAG_INVALID)
;;;548        {
;;;549            return NRF_ERROR_INTERNAL;
;;;550        }
;;;551    
;;;552        m_peer_rank_initialized = false;
;;;553        m_module_initialized    = true;
;;;554    
;;;555        return NRF_SUCCESS;
;;;556    }
00000e  bd10              POP      {r4,pc}
                  |L12.16|
000010  f7fffffe          BL       pdb_init
000014  4604              MOV      r4,r0                 ;502
000016  2c00              CMP      r4,#0                 ;503
000018  d001              BEQ      |L12.30|
00001a  2003              MOVS     r0,#3                 ;505
00001c  e7f7              B        |L12.14|
                  |L12.30|
00001e  f7fffffe          BL       sm_init
000022  4604              MOV      r4,r0                 ;508
000024  2c00              CMP      r4,#0                 ;509
000026  d001              BEQ      |L12.44|
000028  2003              MOVS     r0,#3                 ;511
00002a  e7f0              B        |L12.14|
                  |L12.44|
00002c  f7fffffe          BL       smd_init
000030  4604              MOV      r4,r0                 ;514
000032  2c00              CMP      r4,#0                 ;515
000034  d001              BEQ      |L12.58|
000036  2003              MOVS     r0,#3                 ;517
000038  e7e9              B        |L12.14|
                  |L12.58|
00003a  f7fffffe          BL       gcm_init
00003e  4604              MOV      r4,r0                 ;520
000040  2c00              CMP      r4,#0                 ;521
000042  d001              BEQ      |L12.72|
000044  2003              MOVS     r0,#3                 ;523
000046  e7e2              B        |L12.14|
                  |L12.72|
000048  f7fffffe          BL       gscm_init
00004c  4604              MOV      r4,r0                 ;526
00004e  2c00              CMP      r4,#0                 ;527
000050  d001              BEQ      |L12.86|
000052  2003              MOVS     r0,#3                 ;529
000054  e7db              B        |L12.14|
                  |L12.86|
000056  f7fffffe          BL       im_init
00005a  4604              MOV      r4,r0                 ;532
00005c  2c00              CMP      r4,#0                 ;533
00005e  d001              BEQ      |L12.100|
000060  2003              MOVS     r0,#3                 ;535
000062  e7d4              B        |L12.14|
                  |L12.100|
000064  f7fffffe          BL       internal_state_reset
000068  f7fffffe          BL       ble_conn_state_user_flag_acquire
00006c  490c              LDR      r1,|L12.160|
00006e  7008              STRB     r0,[r1,#0]            ;540
000070  4608              MOV      r0,r1                 ;541
000072  7800              LDRB     r0,[r0,#0]            ;541  ; m_pairing_flag_id
000074  2818              CMP      r0,#0x18              ;541
000076  d101              BNE      |L12.124|
000078  2003              MOVS     r0,#3                 ;543
00007a  e7c8              B        |L12.14|
                  |L12.124|
00007c  f7fffffe          BL       ble_conn_state_user_flag_acquire
000080  4908              LDR      r1,|L12.164|
000082  7008              STRB     r0,[r1,#0]            ;546
000084  4608              MOV      r0,r1                 ;547
000086  7800              LDRB     r0,[r0,#0]            ;547  ; m_bonding_flag_id
000088  2818              CMP      r0,#0x18              ;547
00008a  d101              BNE      |L12.144|
00008c  2003              MOVS     r0,#3                 ;549
00008e  e7be              B        |L12.14|
                  |L12.144|
000090  2000              MOVS     r0,#0                 ;552
000092  4905              LDR      r1,|L12.168|
000094  7008              STRB     r0,[r1,#0]            ;552
000096  2001              MOVS     r0,#1                 ;553
000098  4904              LDR      r1,|L12.172|
00009a  7008              STRB     r0,[r1,#0]            ;553
00009c  2000              MOVS     r0,#0                 ;555
00009e  e7b6              B        |L12.14|
;;;557    
                          ENDP

                  |L12.160|
                          DCD      m_pairing_flag_id
                  |L12.164|
                          DCD      m_bonding_flag_id
                  |L12.168|
                          DCD      m_peer_rank_initialized
                  |L12.172|
                          DCD      m_module_initialized

                          AREA ||i.pm_lesc_public_key_set||, CODE, READONLY, ALIGN=2

                  pm_lesc_public_key_set PROC
;;;707    
;;;708    ret_code_t pm_lesc_public_key_set(ble_gap_lesc_p256_pk_t * p_public_key)
000000  b510              PUSH     {r4,lr}
;;;709    {
000002  4604              MOV      r4,r0
;;;710        VERIFY_MODULE_INITIALIZED();
000004  bf00              NOP      
000006  4805              LDR      r0,|L13.28|
000008  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000a  2800              CMP      r0,#0
00000c  d101              BNE      |L13.18|
00000e  2008              MOVS     r0,#8
                  |L13.16|
;;;711        return sm_lesc_public_key_set(p_public_key);
;;;712    }
000010  bd10              POP      {r4,pc}
                  |L13.18|
000012  bf00              NOP                            ;710
000014  4620              MOV      r0,r4                 ;711
000016  f7fffffe          BL       sm_lesc_public_key_set
00001a  e7f9              B        |L13.16|
;;;713    
                          ENDP

                  |L13.28|
                          DCD      m_module_initialized

                          AREA ||i.pm_local_database_has_changed||, CODE, READONLY, ALIGN=2

                  pm_local_database_has_changed PROC
;;;613    
;;;614    void pm_local_database_has_changed(void)
000000  b510              PUSH     {r4,lr}
;;;615    {
;;;616        VERIFY_MODULE_INITIALIZED_VOID();
000002  bf00              NOP      
000004  4804              LDR      r0,|L14.24|
000006  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
000008  2800              CMP      r0,#0
00000a  d100              BNE      |L14.14|
                  |L14.12|
;;;617        gcm_local_database_has_changed();
;;;618    }
00000c  bd10              POP      {r4,pc}
                  |L14.14|
00000e  bf00              NOP                            ;616
000010  f7fffffe          BL       gcm_local_database_has_changed
000014  bf00              NOP      
000016  e7f9              B        |L14.12|
;;;619    
                          ENDP

                  |L14.24|
                          DCD      m_module_initialized

                          AREA ||i.pm_next_peer_id_get||, CODE, READONLY, ALIGN=2

                  pm_next_peer_id_get PROC
;;;742    
;;;743    pm_peer_id_t pm_next_peer_id_get(pm_peer_id_t prev_peer_id)
000000  b510              PUSH     {r4,lr}
;;;744    {
000002  4604              MOV      r4,r0
;;;745        if (!MODULE_INITIALIZED)
000004  4804              LDR      r0,|L15.24|
000006  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
000008  2800              CMP      r0,#0
00000a  d101              BNE      |L15.16|
;;;746        {
;;;747            return PM_PEER_ID_INVALID;
00000c  4803              LDR      r0,|L15.28|
                  |L15.14|
;;;748        }
;;;749        return pdb_next_peer_id_get(prev_peer_id);
;;;750    }
00000e  bd10              POP      {r4,pc}
                  |L15.16|
000010  4620              MOV      r0,r4                 ;749
000012  f7fffffe          BL       pdb_next_peer_id_get
000016  e7fa              B        |L15.14|
;;;751    
                          ENDP

                  |L15.24|
                          DCD      m_module_initialized
                  |L15.28|
                          DCD      0x0000ffff

                          AREA ||i.pm_on_ble_evt||, CODE, READONLY, ALIGN=2

                  pm_on_ble_evt PROC
;;;470    
;;;471    void pm_on_ble_evt(ble_evt_t * p_ble_evt)
000000  b510              PUSH     {r4,lr}
;;;472    {
000002  4604              MOV      r4,r0
;;;473        VERIFY_MODULE_INITIALIZED_VOID();
000004  bf00              NOP      
000006  4808              LDR      r0,|L16.40|
000008  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000a  2800              CMP      r0,#0
00000c  d100              BNE      |L16.16|
                  |L16.14|
;;;474    
;;;475        im_ble_evt_handler(p_ble_evt);
;;;476        sm_ble_evt_handler(p_ble_evt);
;;;477        gcm_ble_evt_handler(p_ble_evt);
;;;478    }
00000e  bd10              POP      {r4,pc}
                  |L16.16|
000010  bf00              NOP                            ;473
000012  4620              MOV      r0,r4                 ;475
000014  f7fffffe          BL       im_ble_evt_handler
000018  4620              MOV      r0,r4                 ;476
00001a  f7fffffe          BL       sm_ble_evt_handler
00001e  4620              MOV      r0,r4                 ;477
000020  f7fffffe          BL       gcm_ble_evt_handler
000024  bf00              NOP      
000026  e7f2              B        |L16.14|
;;;479    
                          ENDP

                  |L16.40|
                          DCD      m_module_initialized

                          AREA ||i.pm_pdb_evt_handler||, CODE, READONLY, ALIGN=2

                  pm_pdb_evt_handler PROC
;;;91      */
;;;92     void pm_pdb_evt_handler(pdb_evt_t const * p_pdb_evt)
000000  b530              PUSH     {r4,r5,lr}
;;;93     {
000002  b08b              SUB      sp,sp,#0x2c
000004  4604              MOV      r4,r0
;;;94         bool send_evt = true;
000006  2501              MOVS     r5,#1
;;;95         pm_evt_t pm_evt;
;;;96     
;;;97         memset(&pm_evt, 0, sizeof(pm_evt_t));
000008  2114              MOVS     r1,#0x14
00000a  a806              ADD      r0,sp,#0x18
00000c  f7fffffe          BL       __aeabi_memclr4
;;;98         pm_evt.peer_id = p_pdb_evt->peer_id;
000010  8860              LDRH     r0,[r4,#2]
000012  4669              MOV      r1,sp
000014  8388              STRH     r0,[r1,#0x1c]
;;;99         pm_evt.conn_handle = im_conn_handle_get(pm_evt.peer_id);
000016  8b88              LDRH     r0,[r1,#0x1c]
000018  f7fffffe          BL       im_conn_handle_get
00001c  4669              MOV      r1,sp
00001e  8348              STRH     r0,[r1,#0x1a]
;;;100    
;;;101        switch (p_pdb_evt->evt_id)
000020  7820              LDRB     r0,[r4,#0]
000022  0003              MOVS     r3,r0
000024  f7fffffe          BL       __ARM_common_switch8
000028  0a061333          DCB      0x0a,0x06,0x13,0x33
00002c  54606c91          DCB      0x54,0x60,0x6c,0x91
000030  afb1b5b9          DCB      0xaf,0xb1,0xb5,0xb9
;;;102        {
;;;103            case PDB_EVT_WRITE_BUF_STORED:
;;;104                pm_evt.evt_id = PM_EVT_PEER_DATA_UPDATE_SUCCEEDED;
000034  2107              MOVS     r1,#7
000036  4668              MOV      r0,sp
000038  7601              STRB     r1,[r0,#0x18]
;;;105                pm_evt.params.peer_data_update_succeeded.data_id       = p_pdb_evt->data_id;
00003a  7921              LDRB     r1,[r4,#4]
00003c  a808              ADD      r0,sp,#0x20
00003e  7001              STRB     r1,[r0,#0]
;;;106                pm_evt.params.peer_data_update_succeeded.action        = PM_PEER_DATA_OP_UPDATE;
000040  2100              MOVS     r1,#0
000042  a806              ADD      r0,sp,#0x18
000044  7241              STRB     r1,[r0,#9]
;;;107                pm_evt.params.peer_data_update_succeeded.token         = PM_STORE_TOKEN_INVALID;
000046  9109              STR      r1,[sp,#0x24]
;;;108                pm_evt.params.peer_data_update_succeeded.flash_changed = true;
000048  2101              MOVS     r1,#1
00004a  7281              STRB     r1,[r0,#0xa]
;;;109                break;
00004c  e0a7              B        |L17.414|
;;;110    
;;;111            case PDB_EVT_RAW_STORED:
;;;112                pm_evt.evt_id = PM_EVT_PEER_DATA_UPDATE_SUCCEEDED;
00004e  2107              MOVS     r1,#7
000050  4668              MOV      r0,sp
000052  7601              STRB     r1,[r0,#0x18]
;;;113                pm_evt.params.peer_data_update_succeeded.data_id = p_pdb_evt->data_id;
000054  7921              LDRB     r1,[r4,#4]
000056  a808              ADD      r0,sp,#0x20
000058  7001              STRB     r1,[r0,#0]
;;;114                pm_evt.params.peer_data_update_succeeded.action  = PM_PEER_DATA_OP_UPDATE;
00005a  2100              MOVS     r1,#0
00005c  a806              ADD      r0,sp,#0x18
00005e  7241              STRB     r1,[r0,#9]
;;;115                pm_evt.params.peer_data_update_succeeded.token
000060  68a1              LDR      r1,[r4,#8]
000062  9109              STR      r1,[sp,#0x24]
;;;116                                                = p_pdb_evt->params.raw_stored_evt.store_token;
;;;117                pm_evt.params.peer_data_update_succeeded.flash_changed = true;
000064  2101              MOVS     r1,#1
000066  7281              STRB     r1,[r0,#0xa]
;;;118    
;;;119                if (    (m_peer_rank_token != PM_STORE_TOKEN_INVALID)
000068  4851              LDR      r0,|L17.432|
00006a  6800              LDR      r0,[r0,#0]  ; m_peer_rank_token
00006c  2800              CMP      r0,#0
00006e  d00d              BEQ      |L17.140|
;;;120                    && (m_peer_rank_token == p_pdb_evt->params.raw_stored_evt.store_token))
000070  494f              LDR      r1,|L17.432|
000072  68a0              LDR      r0,[r4,#8]
000074  6809              LDR      r1,[r1,#0]  ; m_peer_rank_token
000076  4288              CMP      r0,r1
000078  d108              BNE      |L17.140|
;;;121                {
;;;122                    m_peer_rank_token     = PM_STORE_TOKEN_INVALID;
00007a  2000              MOVS     r0,#0
00007c  494c              LDR      r1,|L17.432|
00007e  6008              STR      r0,[r1,#0]  ; m_peer_rank_token
;;;123                    m_highest_ranked_peer = pm_evt.peer_id;
000080  4668              MOV      r0,sp
000082  8b80              LDRH     r0,[r0,#0x1c]
000084  494b              LDR      r1,|L17.436|
000086  8008              STRH     r0,[r1,#0]
;;;124    
;;;125                    pm_evt.params.peer_data_update_succeeded.token = PM_STORE_TOKEN_INVALID;
000088  2100              MOVS     r1,#0
00008a  9109              STR      r1,[sp,#0x24]
                  |L17.140|
;;;126                }
;;;127                break;
00008c  e087              B        |L17.414|
;;;128    
;;;129            case PDB_EVT_RAW_STORE_FAILED:
;;;130                pm_evt.evt_id = PM_EVT_PEER_DATA_UPDATE_FAILED;
00008e  2108              MOVS     r1,#8
000090  4668              MOV      r0,sp
000092  7601              STRB     r1,[r0,#0x18]
;;;131                pm_evt.params.peer_data_update_failed.data_id = p_pdb_evt->data_id;
000094  7921              LDRB     r1,[r4,#4]
000096  a808              ADD      r0,sp,#0x20
000098  7001              STRB     r1,[r0,#0]
;;;132                pm_evt.params.peer_data_update_failed.action  = PM_PEER_DATA_OP_UPDATE;
00009a  2100              MOVS     r1,#0
00009c  a806              ADD      r0,sp,#0x18
00009e  7241              STRB     r1,[r0,#9]
;;;133                pm_evt.params.peer_data_update_failed.token
0000a0  68a1              LDR      r1,[r4,#8]
0000a2  9109              STR      r1,[sp,#0x24]
;;;134                                                = p_pdb_evt->params.error_raw_store_evt.store_token;
;;;135                pm_evt.params.peer_data_update_failed.error
0000a4  68e1              LDR      r1,[r4,#0xc]
0000a6  910a              STR      r1,[sp,#0x28]
;;;136                                                = p_pdb_evt->params.error_raw_store_evt.err_code;
;;;137    
;;;138                if (    (m_peer_rank_token != PM_STORE_TOKEN_INVALID)
0000a8  4841              LDR      r0,|L17.432|
0000aa  6800              LDR      r0,[r0,#0]  ; m_peer_rank_token
0000ac  2800              CMP      r0,#0
0000ae  d00e              BEQ      |L17.206|
;;;139                    && (m_peer_rank_token == p_pdb_evt->params.raw_stored_evt.store_token))
0000b0  493f              LDR      r1,|L17.432|
0000b2  68a0              LDR      r0,[r4,#8]
0000b4  6809              LDR      r1,[r1,#0]  ; m_peer_rank_token
0000b6  4288              CMP      r0,r1
0000b8  d109              BNE      |L17.206|
;;;140                {
;;;141                    m_peer_rank_token            = PM_STORE_TOKEN_INVALID;
0000ba  2000              MOVS     r0,#0
0000bc  493c              LDR      r1,|L17.432|
0000be  6008              STR      r0,[r1,#0]  ; m_peer_rank_token
;;;142                    m_current_highest_peer_rank -= 1;
0000c0  483d              LDR      r0,|L17.440|
0000c2  6800              LDR      r0,[r0,#0]  ; m_current_highest_peer_rank
0000c4  1e40              SUBS     r0,r0,#1
0000c6  493c              LDR      r1,|L17.440|
0000c8  6008              STR      r0,[r1,#0]  ; m_current_highest_peer_rank
;;;143    
;;;144                    pm_evt.params.peer_data_update_succeeded.token = PM_STORE_TOKEN_INVALID;
0000ca  2100              MOVS     r1,#0
0000cc  9109              STR      r1,[sp,#0x24]
                  |L17.206|
;;;145                }
;;;146                break;
0000ce  e066              B        |L17.414|
;;;147    
;;;148            case PDB_EVT_CLEARED:
;;;149                pm_evt.evt_id = PM_EVT_PEER_DATA_UPDATE_SUCCEEDED;
0000d0  2107              MOVS     r1,#7
0000d2  4668              MOV      r0,sp
0000d4  7601              STRB     r1,[r0,#0x18]
;;;150                pm_evt.params.peer_data_update_succeeded.data_id = p_pdb_evt->data_id;
0000d6  7921              LDRB     r1,[r4,#4]
0000d8  a808              ADD      r0,sp,#0x20
0000da  7001              STRB     r1,[r0,#0]
;;;151                pm_evt.params.peer_data_update_succeeded.action  = PM_PEER_DATA_OP_DELETE;
0000dc  2101              MOVS     r1,#1
0000de  a806              ADD      r0,sp,#0x18
0000e0  7241              STRB     r1,[r0,#9]
;;;152                pm_evt.params.peer_data_update_succeeded.token   = PM_STORE_TOKEN_INVALID;
0000e2  2100              MOVS     r1,#0
0000e4  9109              STR      r1,[sp,#0x24]
;;;153                break;
0000e6  e05a              B        |L17.414|
;;;154    
;;;155            case PDB_EVT_CLEAR_FAILED:
;;;156                pm_evt.evt_id = PM_EVT_PEER_DATA_UPDATE_FAILED;
0000e8  2108              MOVS     r1,#8
0000ea  4668              MOV      r0,sp
0000ec  7601              STRB     r1,[r0,#0x18]
;;;157                pm_evt.params.peer_data_update_failed.data_id = p_pdb_evt->data_id;
0000ee  7921              LDRB     r1,[r4,#4]
0000f0  a808              ADD      r0,sp,#0x20
0000f2  7001              STRB     r1,[r0,#0]
;;;158                pm_evt.params.peer_data_update_failed.action  = PM_PEER_DATA_OP_DELETE;
0000f4  2101              MOVS     r1,#1
0000f6  a806              ADD      r0,sp,#0x18
0000f8  7241              STRB     r1,[r0,#9]
;;;159                pm_evt.params.peer_data_update_failed.error
0000fa  68a1              LDR      r1,[r4,#8]
0000fc  910a              STR      r1,[sp,#0x28]
;;;160                                                        = p_pdb_evt->params.clear_failed_evt.err_code;
;;;161                break;
0000fe  e04e              B        |L17.414|
;;;162    
;;;163            case PDB_EVT_PEER_FREED:
;;;164                pm_evt.evt_id = PM_EVT_PEER_DELETE_SUCCEEDED;
000100  2009              MOVS     r0,#9
000102  4669              MOV      r1,sp
000104  7608              STRB     r0,[r1,#0x18]
;;;165                // Check that no peers marked for deletion are left.
;;;166                if (m_deleting_all
000106  482d              LDR      r0,|L17.444|
000108  7800              LDRB     r0,[r0,#0]  ; m_deleting_all
00010a  2800              CMP      r0,#0
00010c  d01c              BEQ      |L17.328|
;;;167                    && (pdb_next_peer_id_get(PM_PEER_ID_INVALID) == PM_PEER_ID_INVALID)
00010e  482c              LDR      r0,|L17.448|
000110  f7fffffe          BL       pdb_next_peer_id_get
000114  492a              LDR      r1,|L17.448|
000116  4288              CMP      r0,r1
000118  d116              BNE      |L17.328|
;;;168                    && (pdb_next_deleted_peer_id_get(PM_PEER_ID_INVALID) == PM_PEER_ID_INVALID))
00011a  f7fffffe          BL       pdb_next_deleted_peer_id_get
00011e  4928              LDR      r1,|L17.448|
000120  4288              CMP      r0,r1
000122  d111              BNE      |L17.328|
;;;169                {
;;;170                    // pm_peers_delete() has been called and this is the last peer to be deleted.
;;;171                    m_deleting_all = false;
000124  2000              MOVS     r0,#0
000126  4925              LDR      r1,|L17.444|
000128  7008              STRB     r0,[r1,#0]
;;;172    
;;;173                    pm_evt_t pm_delete_all_evt;
;;;174                    memset(&pm_delete_all_evt, 0, sizeof(pm_evt_t));
00012a  2114              MOVS     r1,#0x14
00012c  a801              ADD      r0,sp,#4
00012e  f7fffffe          BL       __aeabi_memclr4
;;;175                    pm_delete_all_evt.evt_id      = PM_EVT_PEERS_DELETE_SUCCEEDED;
000132  210b              MOVS     r1,#0xb
000134  4668              MOV      r0,sp
000136  7101              STRB     r1,[r0,#4]
;;;176                    pm_delete_all_evt.peer_id     = PM_PEER_ID_INVALID;
000138  2100              MOVS     r1,#0
00013a  43c9              MVNS     r1,r1
00013c  8101              STRH     r1,[r0,#8]
;;;177                    pm_delete_all_evt.conn_handle = BLE_CONN_HANDLE_INVALID;
00013e  80c1              STRH     r1,[r0,#6]
;;;178    
;;;179                    evt_send(&pm_delete_all_evt);
000140  a801              ADD      r0,sp,#4
000142  f7fffffe          BL       evt_send
;;;180                }
000146  bf00              NOP      
                  |L17.328|
;;;181                break;
000148  e029              B        |L17.414|
;;;182    
;;;183            case PDB_EVT_PEER_FREE_FAILED:
;;;184                pm_evt.evt_id = PM_EVT_PEER_DELETE_FAILED;
00014a  200a              MOVS     r0,#0xa
00014c  4669              MOV      r1,sp
00014e  7608              STRB     r0,[r1,#0x18]
;;;185                pm_evt.params.peer_delete_failed.error
000150  68a0              LDR      r0,[r4,#8]
000152  9008              STR      r0,[sp,#0x20]
;;;186                                                    = p_pdb_evt->params.peer_free_failed_evt.err_code;
;;;187                if (m_deleting_all)
000154  4819              LDR      r0,|L17.444|
000156  7800              LDRB     r0,[r0,#0]  ; m_deleting_all
000158  2800              CMP      r0,#0
00015a  d013              BEQ      |L17.388|
;;;188                {
;;;189                    // pm_peers_delete() has been called and has thus failed.
;;;190    
;;;191                    m_deleting_all = false;
00015c  2000              MOVS     r0,#0
00015e  4917              LDR      r1,|L17.444|
000160  7008              STRB     r0,[r1,#0]
;;;192    
;;;193                    pm_evt_t pm_delete_all_evt;
;;;194                    memset(&pm_delete_all_evt, 0, sizeof(pm_evt_t));
000162  2114              MOVS     r1,#0x14
000164  a801              ADD      r0,sp,#4
000166  f7fffffe          BL       __aeabi_memclr4
;;;195                    pm_delete_all_evt.evt_id      = PM_EVT_PEERS_DELETE_FAILED;
00016a  210c              MOVS     r1,#0xc
00016c  4668              MOV      r0,sp
00016e  7101              STRB     r1,[r0,#4]
;;;196                    pm_delete_all_evt.peer_id     = PM_PEER_ID_INVALID;
000170  2100              MOVS     r1,#0
000172  43c9              MVNS     r1,r1
000174  8101              STRH     r1,[r0,#8]
;;;197                    pm_delete_all_evt.conn_handle = BLE_CONN_HANDLE_INVALID;
000176  80c1              STRH     r1,[r0,#6]
;;;198                    pm_delete_all_evt.params.peers_delete_failed_evt.error
000178  68a0              LDR      r0,[r4,#8]
00017a  9003              STR      r0,[sp,#0xc]
;;;199                                                  = p_pdb_evt->params.peer_free_failed_evt.err_code;
;;;200    
;;;201                    evt_send(&pm_delete_all_evt);
00017c  a801              ADD      r0,sp,#4
00017e  f7fffffe          BL       evt_send
;;;202                }
000182  bf00              NOP      
                  |L17.388|
;;;203                break;
000184  e00b              B        |L17.414|
;;;204    
;;;205            case PDB_EVT_COMPRESSED:
;;;206                send_evt = false;
000186  2500              MOVS     r5,#0
;;;207                // Do nothing
;;;208                break;
000188  e009              B        |L17.414|
;;;209    
;;;210            case PDB_EVT_ERROR_NO_MEM:
;;;211                pm_evt.evt_id = PM_EVT_STORAGE_FULL;
00018a  2005              MOVS     r0,#5
00018c  4669              MOV      r1,sp
00018e  7608              STRB     r0,[r1,#0x18]
;;;212                break;
000190  e005              B        |L17.414|
;;;213    
;;;214            case PDB_EVT_ERROR_UNEXPECTED:
;;;215                pm_evt.evt_id = PM_EVT_ERROR_UNEXPECTED;
000192  2006              MOVS     r0,#6
000194  4669              MOV      r1,sp
000196  7608              STRB     r0,[r1,#0x18]
;;;216                break;
000198  e001              B        |L17.414|
;;;217    
;;;218            default:
;;;219                send_evt = false;
00019a  2500              MOVS     r5,#0
;;;220                break;
00019c  bf00              NOP      
                  |L17.414|
00019e  bf00              NOP                            ;109
;;;221        }
;;;222    
;;;223        if (send_evt)
0001a0  2d00              CMP      r5,#0
0001a2  d002              BEQ      |L17.426|
;;;224        {
;;;225            evt_send(&pm_evt);
0001a4  a806              ADD      r0,sp,#0x18
0001a6  f7fffffe          BL       evt_send
                  |L17.426|
;;;226        }
;;;227    }
0001aa  b00b              ADD      sp,sp,#0x2c
0001ac  bd30              POP      {r4,r5,pc}
;;;228    
                          ENDP

0001ae  0000              DCW      0x0000
                  |L17.432|
                          DCD      m_peer_rank_token
                  |L17.436|
                          DCD      m_highest_ranked_peer
                  |L17.440|
                          DCD      m_current_highest_peer_rank
                  |L17.444|
                          DCD      m_deleting_all
                  |L17.448|
                          DCD      0x0000ffff

                          AREA ||i.pm_peer_count||, CODE, READONLY, ALIGN=2

                  pm_peer_count PROC
;;;732    
;;;733    uint32_t pm_peer_count(void)
000000  b510              PUSH     {r4,lr}
;;;734    {
;;;735        if (!MODULE_INITIALIZED)
000002  4804              LDR      r0,|L18.20|
000004  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
000006  2800              CMP      r0,#0
000008  d100              BNE      |L18.12|
                  |L18.10|
;;;736        {
;;;737            return 0;
;;;738        }
;;;739        return pdb_n_peers();
;;;740    }
00000a  bd10              POP      {r4,pc}
                  |L18.12|
00000c  f7fffffe          BL       pdb_n_peers
000010  e7fb              B        |L18.10|
;;;741    
                          ENDP

000012  0000              DCW      0x0000
                  |L18.20|
                          DCD      m_module_initialized

                          AREA ||i.pm_peer_data_app_data_load||, CODE, READONLY, ALIGN=1

                  pm_peer_data_app_data_load PROC
;;;801    
;;;802    ret_code_t pm_peer_data_app_data_load(pm_peer_id_t       peer_id,
000000  b570              PUSH     {r4-r6,lr}
;;;803                                          uint8_t          * p_data,
;;;804                                          uint16_t         * p_length)
;;;805    {
000002  4606              MOV      r6,r0
000004  460c              MOV      r4,r1
000006  4615              MOV      r5,r2
;;;806        return pm_peer_data_load(peer_id,
000008  462b              MOV      r3,r5
00000a  4622              MOV      r2,r4
00000c  2104              MOVS     r1,#4
00000e  4630              MOV      r0,r6
000010  f7fffffe          BL       pm_peer_data_load
;;;807                                 PM_PEER_DATA_ID_APPLICATION,
;;;808                                 p_data,
;;;809                                 p_length);
;;;810    }
000014  bd70              POP      {r4-r6,pc}
;;;811    
                          ENDP


                          AREA ||i.pm_peer_data_app_data_store||, CODE, READONLY, ALIGN=1

                  pm_peer_data_app_data_store PROC
;;;860    
;;;861    ret_code_t pm_peer_data_app_data_store(pm_peer_id_t       peer_id,
000000  b5f8              PUSH     {r3-r7,lr}
;;;862                                           uint8_t    const * p_data,
;;;863                                           uint16_t           length,
;;;864                                           pm_store_token_t * p_token)
;;;865    {
000002  4607              MOV      r7,r0
000004  460c              MOV      r4,r1
000006  4615              MOV      r5,r2
000008  461e              MOV      r6,r3
;;;866        return pm_peer_data_store(peer_id,
00000a  462b              MOV      r3,r5
00000c  4622              MOV      r2,r4
00000e  2104              MOVS     r1,#4
000010  4638              MOV      r0,r7
000012  9600              STR      r6,[sp,#0]
000014  f7fffffe          BL       pm_peer_data_store
;;;867                                  PM_PEER_DATA_ID_APPLICATION,
;;;868                                  p_data,
;;;869                                  length,
;;;870                                  p_token);
;;;871    }
000018  bdf8              POP      {r3-r7,pc}
;;;872    
                          ENDP


                          AREA ||i.pm_peer_data_bonding_load||, CODE, READONLY, ALIGN=1

                  pm_peer_data_bonding_load PROC
;;;779    
;;;780    ret_code_t pm_peer_data_bonding_load(pm_peer_id_t             peer_id,
000000  b538              PUSH     {r3-r5,lr}
;;;781                                         pm_peer_data_bonding_t * p_data)
;;;782    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;783        uint16_t length = sizeof(pm_peer_data_bonding_t);
000006  2050              MOVS     r0,#0x50
000008  9000              STR      r0,[sp,#0]
;;;784        return pm_peer_data_load(peer_id,
00000a  466b              MOV      r3,sp
00000c  4622              MOV      r2,r4
00000e  2107              MOVS     r1,#7
000010  4628              MOV      r0,r5
000012  f7fffffe          BL       pm_peer_data_load
;;;785                                 PM_PEER_DATA_ID_BONDING,
;;;786                                 p_data,
;;;787                                 &length);
;;;788    }
000016  bd38              POP      {r3-r5,pc}
;;;789    
                          ENDP


                          AREA ||i.pm_peer_data_bonding_store||, CODE, READONLY, ALIGN=1

                  pm_peer_data_bonding_store PROC
;;;835    
;;;836    ret_code_t pm_peer_data_bonding_store(pm_peer_id_t                   peer_id,
000000  b5f8              PUSH     {r3-r7,lr}
;;;837                                          pm_peer_data_bonding_t const * p_data,
;;;838                                          pm_store_token_t             * p_token)
;;;839    {
000002  4606              MOV      r6,r0
000004  460c              MOV      r4,r1
000006  4615              MOV      r5,r2
;;;840        return pm_peer_data_store(peer_id,
000008  2350              MOVS     r3,#0x50
00000a  4622              MOV      r2,r4
00000c  2107              MOVS     r1,#7
00000e  4630              MOV      r0,r6
000010  9500              STR      r5,[sp,#0]
000012  f7fffffe          BL       pm_peer_data_store
;;;841                                  PM_PEER_DATA_ID_BONDING,
;;;842                                  p_data,
;;;843                                  ALIGN_NUM(4, sizeof(pm_peer_data_bonding_t)),
;;;844                                  p_token);
;;;845    }
000016  bdf8              POP      {r3-r7,pc}
;;;846    
                          ENDP


                          AREA ||i.pm_peer_data_delete||, CODE, READONLY, ALIGN=2

                  pm_peer_data_delete PROC
;;;873    
;;;874    ret_code_t pm_peer_data_delete(pm_peer_id_t peer_id, pm_peer_data_id_t data_id)
000000  b570              PUSH     {r4-r6,lr}
;;;875    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;876        VERIFY_MODULE_INITIALIZED();
000006  bf00              NOP      
000008  4807              LDR      r0,|L23.40|
00000a  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000c  2800              CMP      r0,#0
00000e  d101              BNE      |L23.20|
000010  2008              MOVS     r0,#8
                  |L23.18|
;;;877    
;;;878        if (data_id == PM_PEER_DATA_ID_BONDING)
;;;879        {
;;;880            return NRF_ERROR_INVALID_PARAM;
;;;881        }
;;;882    
;;;883        return pdb_clear(peer_id, data_id);
;;;884    }
000012  bd70              POP      {r4-r6,pc}
                  |L23.20|
000014  bf00              NOP                            ;876
000016  2c07              CMP      r4,#7                 ;878
000018  d101              BNE      |L23.30|
00001a  2007              MOVS     r0,#7                 ;880
00001c  e7f9              B        |L23.18|
                  |L23.30|
00001e  4621              MOV      r1,r4                 ;883
000020  4628              MOV      r0,r5                 ;883
000022  f7fffffe          BL       pdb_clear
000026  e7f4              B        |L23.18|
;;;885    
                          ENDP

                  |L23.40|
                          DCD      m_module_initialized

                          AREA ||i.pm_peer_data_load||, CODE, READONLY, ALIGN=2

                  pm_peer_data_load PROC
;;;752    
;;;753    ret_code_t pm_peer_data_load(pm_peer_id_t       peer_id,
000000  b5fe              PUSH     {r1-r7,lr}
;;;754                                 pm_peer_data_id_t  data_id,
;;;755                                 void             * p_data,
;;;756                                 uint16_t         * p_length)
;;;757    {
000002  4607              MOV      r7,r0
000004  460e              MOV      r6,r1
000006  4615              MOV      r5,r2
000008  461c              MOV      r4,r3
;;;758        VERIFY_MODULE_INITIALIZED();
00000a  bf00              NOP      
00000c  481c              LDR      r0,|L24.128|
00000e  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
000010  2800              CMP      r0,#0
000012  d101              BNE      |L24.24|
000014  2008              MOVS     r0,#8
                  |L24.22|
;;;759        VERIFY_PARAM_NOT_NULL(p_data);
;;;760        VERIFY_PARAM_NOT_NULL(p_length);
;;;761        if (ALIGN_NUM(4, *p_length) != *p_length)
;;;762        {
;;;763            return NRF_ERROR_INVALID_PARAM;
;;;764        }
;;;765    
;;;766        pm_peer_data_t peer_data;
;;;767        memset(&peer_data, 0, sizeof(peer_data));
;;;768        peer_data.length_words = BYTES_TO_WORDS(*p_length);
;;;769        peer_data.data_id      = data_id;
;;;770        peer_data.p_all_data   = p_data;
;;;771    
;;;772        ret_code_t err_code = pdb_peer_data_load(peer_id, data_id, &peer_data);
;;;773    
;;;774        *p_length = peer_data.length_words * BYTES_PER_WORD;
;;;775    
;;;776        return err_code;
;;;777    }
000016  bdfe              POP      {r1-r7,pc}
                  |L24.24|
000018  bf00              NOP                            ;758
00001a  bf00              NOP                            ;759
00001c  2d00              CMP      r5,#0                 ;759
00001e  d101              BNE      |L24.36|
000020  200e              MOVS     r0,#0xe               ;759
000022  e7f8              B        |L24.22|
                  |L24.36|
000024  bf00              NOP                            ;759
000026  bf00              NOP                            ;760
000028  2c00              CMP      r4,#0                 ;760
00002a  d101              BNE      |L24.48|
00002c  200e              MOVS     r0,#0xe               ;760
00002e  e7f2              B        |L24.22|
                  |L24.48|
000030  bf00              NOP                            ;760
000032  8821              LDRH     r1,[r4,#0]            ;761
000034  1e48              SUBS     r0,r1,#1              ;761
000036  17c1              ASRS     r1,r0,#31             ;761
000038  0f89              LSRS     r1,r1,#30             ;761
00003a  1809              ADDS     r1,r1,r0              ;761
00003c  1089              ASRS     r1,r1,#2              ;761
00003e  0089              LSLS     r1,r1,#2              ;761
000040  1a42              SUBS     r2,r0,r1              ;761
000042  8821              LDRH     r1,[r4,#0]            ;761
000044  1cc9              ADDS     r1,r1,#3              ;761
000046  1a89              SUBS     r1,r1,r2              ;761
000048  8822              LDRH     r2,[r4,#0]            ;761
00004a  4291              CMP      r1,r2                 ;761
00004c  d001              BEQ      |L24.82|
00004e  2007              MOVS     r0,#7                 ;763
000050  e7e1              B        |L24.22|
                  |L24.82|
000052  2000              MOVS     r0,#0                 ;767
000054  9001              STR      r0,[sp,#4]            ;767
000056  9002              STR      r0,[sp,#8]            ;767
000058  8820              LDRH     r0,[r4,#0]            ;768
00005a  1cc0              ADDS     r0,r0,#3              ;768
00005c  1081              ASRS     r1,r0,#2              ;768
00005e  4668              MOV      r0,sp                 ;768
000060  8081              STRH     r1,[r0,#4]            ;768
000062  7186              STRB     r6,[r0,#6]            ;769
000064  9502              STR      r5,[sp,#8]            ;770
000066  aa01              ADD      r2,sp,#4              ;772
000068  4631              MOV      r1,r6                 ;772
00006a  4638              MOV      r0,r7                 ;772
00006c  f7fffffe          BL       pdb_peer_data_load
000070  9000              STR      r0,[sp,#0]            ;772
000072  4668              MOV      r0,sp                 ;774
000074  8880              LDRH     r0,[r0,#4]            ;774
000076  0480              LSLS     r0,r0,#18             ;774
000078  0c00              LSRS     r0,r0,#16             ;774
00007a  8020              STRH     r0,[r4,#0]            ;774
00007c  9800              LDR      r0,[sp,#0]            ;776
00007e  e7ca              B        |L24.22|
;;;778    
                          ENDP

                  |L24.128|
                          DCD      m_module_initialized

                          AREA ||i.pm_peer_data_remote_db_load||, CODE, READONLY, ALIGN=1

                  pm_peer_data_remote_db_load PROC
;;;790    
;;;791    ret_code_t pm_peer_data_remote_db_load(pm_peer_id_t        peer_id,
000000  b570              PUSH     {r4-r6,lr}
;;;792                                           ble_gatt_db_srv_t * p_data,
;;;793                                           uint16_t          * p_length)
;;;794    {
000002  4606              MOV      r6,r0
000004  460c              MOV      r4,r1
000006  4615              MOV      r5,r2
;;;795        return pm_peer_data_load(peer_id,
000008  462b              MOV      r3,r5
00000a  4622              MOV      r2,r4
00000c  2105              MOVS     r1,#5
00000e  4630              MOV      r0,r6
000010  f7fffffe          BL       pm_peer_data_load
;;;796                                 PM_PEER_DATA_ID_GATT_REMOTE,
;;;797                                 p_data,
;;;798                                 p_length);
;;;799    }
000014  bd70              POP      {r4-r6,pc}
;;;800    
                          ENDP


                          AREA ||i.pm_peer_data_remote_db_store||, CODE, READONLY, ALIGN=1

                  pm_peer_data_remote_db_store PROC
;;;847    
;;;848    ret_code_t pm_peer_data_remote_db_store(pm_peer_id_t              peer_id,
000000  b5f8              PUSH     {r3-r7,lr}
;;;849                                            ble_gatt_db_srv_t const * p_data,
;;;850                                            uint16_t                  length,
;;;851                                            pm_store_token_t        * p_token)
;;;852    {
000002  4607              MOV      r7,r0
000004  460c              MOV      r4,r1
000006  4615              MOV      r5,r2
000008  461e              MOV      r6,r3
;;;853        return pm_peer_data_store(peer_id,
00000a  462b              MOV      r3,r5
00000c  4622              MOV      r2,r4
00000e  2105              MOVS     r1,#5
000010  4638              MOV      r0,r7
000012  9600              STR      r6,[sp,#0]
000014  f7fffffe          BL       pm_peer_data_store
;;;854                                  PM_PEER_DATA_ID_GATT_REMOTE,
;;;855                                  p_data,
;;;856                                  length,
;;;857                                  p_token);
;;;858    }
000018  bdf8              POP      {r3-r7,pc}
;;;859    
                          ENDP


                          AREA ||i.pm_peer_data_store||, CODE, READONLY, ALIGN=2

                  pm_peer_data_store PROC
;;;812    
;;;813    ret_code_t pm_peer_data_store(pm_peer_id_t       peer_id,
000000  b5fe              PUSH     {r1-r7,lr}
;;;814                                  pm_peer_data_id_t  data_id,
;;;815                                  void       const * p_data,
;;;816                                  uint16_t           length,
;;;817                                  pm_store_token_t * p_token)
;;;818    {
000002  4607              MOV      r7,r0
000004  460e              MOV      r6,r1
000006  4615              MOV      r5,r2
000008  461c              MOV      r4,r3
;;;819        VERIFY_MODULE_INITIALIZED();
00000a  bf00              NOP      
00000c  4814              LDR      r0,|L27.96|
00000e  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
000010  2800              CMP      r0,#0
000012  d101              BNE      |L27.24|
000014  2008              MOVS     r0,#8
                  |L27.22|
;;;820        VERIFY_PARAM_NOT_NULL(p_data);
;;;821        if (ALIGN_NUM(4, length) != length)
;;;822        {
;;;823            return NRF_ERROR_INVALID_PARAM;
;;;824        }
;;;825    
;;;826        pm_peer_data_flash_t peer_data;
;;;827        memset(&peer_data, 0, sizeof(peer_data));
;;;828        peer_data.length_words = BYTES_TO_WORDS(length);
;;;829        peer_data.data_id      = data_id;
;;;830        peer_data.p_all_data   = p_data;
;;;831    
;;;832        return pdb_raw_store(peer_id, &peer_data, p_token);
;;;833    }
000016  bdfe              POP      {r1-r7,pc}
                  |L27.24|
000018  bf00              NOP                            ;819
00001a  bf00              NOP                            ;820
00001c  2d00              CMP      r5,#0                 ;820
00001e  d101              BNE      |L27.36|
000020  200e              MOVS     r0,#0xe               ;820
000022  e7f8              B        |L27.22|
                  |L27.36|
000024  bf00              NOP                            ;820
000026  1e60              SUBS     r0,r4,#1              ;821
000028  17c1              ASRS     r1,r0,#31             ;821
00002a  0f89              LSRS     r1,r1,#30             ;821
00002c  1809              ADDS     r1,r1,r0              ;821
00002e  1089              ASRS     r1,r1,#2              ;821
000030  0089              LSLS     r1,r1,#2              ;821
000032  1a42              SUBS     r2,r0,r1              ;821
000034  1ce1              ADDS     r1,r4,#3              ;821
000036  1a89              SUBS     r1,r1,r2              ;821
000038  42a1              CMP      r1,r4                 ;821
00003a  d001              BEQ      |L27.64|
00003c  2007              MOVS     r0,#7                 ;823
00003e  e7ea              B        |L27.22|
                  |L27.64|
000040  2000              MOVS     r0,#0                 ;827
000042  9000              STR      r0,[sp,#0]            ;827
000044  9001              STR      r0,[sp,#4]            ;827
000046  1ce0              ADDS     r0,r4,#3              ;828
000048  1081              ASRS     r1,r0,#2              ;828
00004a  4668              MOV      r0,sp                 ;828
00004c  8001              STRH     r1,[r0,#0]            ;828
00004e  7086              STRB     r6,[r0,#2]            ;829
000050  9501              STR      r5,[sp,#4]            ;830
000052  4669              MOV      r1,sp                 ;832
000054  4638              MOV      r0,r7                 ;832
000056  9a08              LDR      r2,[sp,#0x20]         ;832
000058  f7fffffe          BL       pdb_raw_store
00005c  e7db              B        |L27.22|
;;;834    
                          ENDP

00005e  0000              DCW      0x0000
                  |L27.96|
                          DCD      m_module_initialized

                          AREA ||i.pm_peer_delete||, CODE, READONLY, ALIGN=2

                  pm_peer_delete PROC
;;;947    
;;;948    ret_code_t pm_peer_delete(pm_peer_id_t peer_id)
000000  b510              PUSH     {r4,lr}
;;;949    {
000002  4604              MOV      r4,r0
;;;950        VERIFY_MODULE_INITIALIZED();
000004  bf00              NOP      
000006  4805              LDR      r0,|L28.28|
000008  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000a  2800              CMP      r0,#0
00000c  d101              BNE      |L28.18|
00000e  2008              MOVS     r0,#8
                  |L28.16|
;;;951    
;;;952        return im_peer_free(peer_id);
;;;953    }
000010  bd10              POP      {r4,pc}
                  |L28.18|
000012  bf00              NOP                            ;950
000014  4620              MOV      r0,r4                 ;952
000016  f7fffffe          BL       im_peer_free
00001a  e7f9              B        |L28.16|
;;;954    
                          ENDP

                  |L28.28|
                          DCD      m_module_initialized

                          AREA ||i.pm_peer_id_get||, CODE, READONLY, ALIGN=2

                  pm_peer_id_get PROC
;;;723    
;;;724    ret_code_t pm_peer_id_get(uint16_t conn_handle, pm_peer_id_t * p_peer_id)
000000  b570              PUSH     {r4-r6,lr}
;;;725    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;726        VERIFY_MODULE_INITIALIZED();
000006  bf00              NOP      
000008  4809              LDR      r0,|L29.48|
00000a  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000c  2800              CMP      r0,#0
00000e  d101              BNE      |L29.20|
000010  2008              MOVS     r0,#8
                  |L29.18|
;;;727        VERIFY_PARAM_NOT_NULL(p_peer_id);
;;;728        *p_peer_id = im_peer_id_get_by_conn_handle(conn_handle);
;;;729        return NRF_SUCCESS;
;;;730    }
000012  bd70              POP      {r4-r6,pc}
                  |L29.20|
000014  bf00              NOP                            ;726
000016  bf00              NOP                            ;727
000018  2c00              CMP      r4,#0                 ;727
00001a  d101              BNE      |L29.32|
00001c  200e              MOVS     r0,#0xe               ;727
00001e  e7f8              B        |L29.18|
                  |L29.32|
000020  bf00              NOP                            ;727
000022  4628              MOV      r0,r5                 ;728
000024  f7fffffe          BL       im_peer_id_get_by_conn_handle
000028  8020              STRH     r0,[r4,#0]            ;728
00002a  2000              MOVS     r0,#0                 ;729
00002c  e7f1              B        |L29.18|
;;;731    
                          ENDP

00002e  0000              DCW      0x0000
                  |L29.48|
                          DCD      m_module_initialized

                          AREA ||i.pm_peer_new||, CODE, READONLY, ALIGN=2

                  pm_peer_new PROC
;;;886    
;;;887    ret_code_t pm_peer_new(pm_peer_id_t           * p_new_peer_id,
000000  b5fe              PUSH     {r1-r7,lr}
;;;888                           pm_peer_data_bonding_t * p_bonding_data,
;;;889                           pm_store_token_t       * p_token)
;;;890    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4617              MOV      r7,r2
;;;891        ret_code_t           err_code;
;;;892        pm_peer_id_t         peer_id;
;;;893        pm_peer_data_flash_t peer_data;
;;;894    
;;;895        VERIFY_MODULE_INITIALIZED();
000008  bf00              NOP      
00000a  4828              LDR      r0,|L30.172|
00000c  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000e  2800              CMP      r0,#0
000010  d101              BNE      |L30.22|
000012  2008              MOVS     r0,#8
                  |L30.20|
;;;896        VERIFY_PARAM_NOT_NULL(p_bonding_data);
;;;897        VERIFY_PARAM_NOT_NULL(p_new_peer_id);
;;;898    
;;;899        memset(&peer_data, 0, sizeof(pm_peer_data_flash_t));
;;;900    
;;;901        // Search through existing bonds to look for a duplicate.
;;;902        pds_peer_data_iterate_prepare();
;;;903    
;;;904        // @note emdi: should maybe use a critical section, since data is not copied while iterating.
;;;905        while (pds_peer_data_iterate(PM_PEER_DATA_ID_BONDING, &peer_id, &peer_data))
;;;906        {
;;;907            if (im_is_duplicate_bonding_data(p_bonding_data, peer_data.p_bonding_data))
;;;908            {
;;;909                *p_new_peer_id = peer_id;
;;;910                return NRF_SUCCESS;
;;;911            }
;;;912        }
;;;913    
;;;914        // If no duplicate data is found, prepare to write a new bond to flash.
;;;915    
;;;916        *p_new_peer_id = pdb_peer_allocate();
;;;917    
;;;918        if (*p_new_peer_id == PM_PEER_ID_INVALID)
;;;919        {
;;;920            return NRF_ERROR_NO_MEM;
;;;921        }
;;;922    
;;;923        memset(&peer_data, 0, sizeof(pm_peer_data_flash_t));
;;;924    
;;;925        peer_data.data_id        = PM_PEER_DATA_ID_BONDING;
;;;926        peer_data.p_bonding_data = p_bonding_data;
;;;927        peer_data.length_words   = BYTES_TO_WORDS(sizeof(pm_peer_data_bonding_t));
;;;928    
;;;929        err_code = pdb_raw_store(*p_new_peer_id, &peer_data, p_token);
;;;930    
;;;931        if (err_code != NRF_SUCCESS)
;;;932        {
;;;933            if (im_peer_free(*p_new_peer_id) != NRF_SUCCESS)
;;;934            {
;;;935                return NRF_ERROR_INTERNAL;
;;;936            }
;;;937    
;;;938            // NRF_ERROR_STORAGE_FULL, if no space in flash.
;;;939            // NRF_ERROR_BUSY,         if flash filesystem was busy.
;;;940            // NRF_ERROR_INTENRAL,     on internal error.
;;;941            return err_code;
;;;942        }
;;;943    
;;;944        return NRF_SUCCESS;
;;;945    }
000014  bdfe              POP      {r1-r7,pc}
                  |L30.22|
000016  bf00              NOP                            ;895
000018  bf00              NOP                            ;896
00001a  2d00              CMP      r5,#0                 ;896
00001c  d101              BNE      |L30.34|
00001e  200e              MOVS     r0,#0xe               ;896
000020  e7f8              B        |L30.20|
                  |L30.34|
000022  bf00              NOP                            ;896
000024  bf00              NOP                            ;897
000026  2c00              CMP      r4,#0                 ;897
000028  d101              BNE      |L30.46|
00002a  200e              MOVS     r0,#0xe               ;897
00002c  e7f2              B        |L30.20|
                  |L30.46|
00002e  bf00              NOP                            ;897
000030  2000              MOVS     r0,#0                 ;899
000032  9000              STR      r0,[sp,#0]            ;899
000034  9001              STR      r0,[sp,#4]            ;899
000036  f7fffffe          BL       pds_peer_data_iterate_prepare
00003a  e00a              B        |L30.82|
                  |L30.60|
00003c  4628              MOV      r0,r5                 ;907
00003e  9901              LDR      r1,[sp,#4]            ;907
000040  f7fffffe          BL       im_is_duplicate_bonding_data
000044  2800              CMP      r0,#0                 ;907
000046  d004              BEQ      |L30.82|
000048  4668              MOV      r0,sp                 ;909
00004a  8900              LDRH     r0,[r0,#8]            ;909
00004c  8020              STRH     r0,[r4,#0]            ;909
00004e  2000              MOVS     r0,#0                 ;910
000050  e7e0              B        |L30.20|
                  |L30.82|
000052  466a              MOV      r2,sp                 ;905
000054  a902              ADD      r1,sp,#8              ;905
000056  2007              MOVS     r0,#7                 ;905
000058  f7fffffe          BL       pds_peer_data_iterate
00005c  2800              CMP      r0,#0                 ;905
00005e  d1ed              BNE      |L30.60|
000060  f7fffffe          BL       pdb_peer_allocate
000064  8020              STRH     r0,[r4,#0]            ;916
000066  8820              LDRH     r0,[r4,#0]            ;918
000068  4911              LDR      r1,|L30.176|
00006a  4288              CMP      r0,r1                 ;918
00006c  d101              BNE      |L30.114|
00006e  2004              MOVS     r0,#4                 ;920
000070  e7d0              B        |L30.20|
                  |L30.114|
000072  2000              MOVS     r0,#0                 ;923
000074  9000              STR      r0,[sp,#0]            ;923
000076  9001              STR      r0,[sp,#4]            ;923
000078  2107              MOVS     r1,#7                 ;925
00007a  4668              MOV      r0,sp                 ;925
00007c  7081              STRB     r1,[r0,#2]            ;925
00007e  9501              STR      r5,[sp,#4]            ;926
000080  2114              MOVS     r1,#0x14              ;927
000082  8001              STRH     r1,[r0,#0]            ;927
000084  8820              LDRH     r0,[r4,#0]            ;929
000086  463a              MOV      r2,r7                 ;929
000088  4669              MOV      r1,sp                 ;929
00008a  f7fffffe          BL       pdb_raw_store
00008e  4606              MOV      r6,r0                 ;929
000090  2e00              CMP      r6,#0                 ;931
000092  d008              BEQ      |L30.166|
000094  8820              LDRH     r0,[r4,#0]            ;933
000096  f7fffffe          BL       im_peer_free
00009a  2800              CMP      r0,#0                 ;933
00009c  d001              BEQ      |L30.162|
00009e  2003              MOVS     r0,#3                 ;935
0000a0  e7b8              B        |L30.20|
                  |L30.162|
0000a2  4630              MOV      r0,r6                 ;941
0000a4  e7b6              B        |L30.20|
                  |L30.166|
0000a6  2000              MOVS     r0,#0                 ;944
0000a8  e7b4              B        |L30.20|
;;;946    
                          ENDP

0000aa  0000              DCW      0x0000
                  |L30.172|
                          DCD      m_module_initialized
                  |L30.176|
                          DCD      0x0000ffff

                          AREA ||i.pm_peer_rank_highest||, CODE, READONLY, ALIGN=2

                  pm_peer_rank_highest PROC
;;;1064   
;;;1065   ret_code_t pm_peer_rank_highest(pm_peer_id_t peer_id)
000000  b530              PUSH     {r4,r5,lr}
;;;1066   {
000002  b087              SUB      sp,sp,#0x1c
000004  4605              MOV      r5,r0
;;;1067       VERIFY_MODULE_INITIALIZED();
000006  bf00              NOP      
000008  482b              LDR      r0,|L31.184|
00000a  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000c  2800              CMP      r0,#0
00000e  d102              BNE      |L31.22|
000010  2008              MOVS     r0,#8
                  |L31.18|
;;;1068   
;;;1069       ret_code_t err_code;
;;;1070       //lint -save -e65 -e64
;;;1071       pm_peer_data_flash_t peer_data   = {.length_words = BYTES_TO_WORDS(sizeof(m_current_highest_peer_rank)),
;;;1072                                           .data_id      = PM_PEER_DATA_ID_PEER_RANK,
;;;1073                                           .p_peer_rank  = &m_current_highest_peer_rank};
;;;1074       //lint -restore
;;;1075   
;;;1076   
;;;1077       if (!m_peer_rank_initialized)
;;;1078       {
;;;1079           rank_init();
;;;1080       }
;;;1081   
;;;1082       if (!m_peer_rank_initialized || (m_peer_rank_token != PM_STORE_TOKEN_INVALID))
;;;1083       {
;;;1084           err_code = NRF_ERROR_BUSY;
;;;1085       }
;;;1086       else
;;;1087       {
;;;1088           if ((peer_id == m_highest_ranked_peer) && (m_current_highest_peer_rank > 0))
;;;1089           {
;;;1090               pm_evt_t pm_evt;
;;;1091   
;;;1092               // The reported peer is already regarded as highest (provided it has an index at all)
;;;1093               err_code = NRF_SUCCESS;
;;;1094   
;;;1095               memset(&pm_evt, 0, sizeof(pm_evt));
;;;1096               pm_evt.evt_id      = PM_EVT_PEER_DATA_UPDATE_SUCCEEDED;
;;;1097               pm_evt.conn_handle = im_conn_handle_get(peer_id);
;;;1098               pm_evt.peer_id     = peer_id;
;;;1099               pm_evt.params.peer_data_update_succeeded.data_id       = PM_PEER_DATA_ID_PEER_RANK;
;;;1100               pm_evt.params.peer_data_update_succeeded.action        = PM_PEER_DATA_OP_UPDATE;
;;;1101               pm_evt.params.peer_data_update_succeeded.token         = PM_STORE_TOKEN_INVALID;
;;;1102               pm_evt.params.peer_data_update_succeeded.flash_changed = false;
;;;1103   
;;;1104               evt_send(&pm_evt);
;;;1105           }
;;;1106           else
;;;1107           {
;;;1108               m_current_highest_peer_rank += 1;
;;;1109               err_code = pdb_raw_store(peer_id, &peer_data, &m_peer_rank_token);
;;;1110               if (err_code != NRF_SUCCESS)
;;;1111               {
;;;1112                   m_peer_rank_token    = PM_STORE_TOKEN_INVALID;
;;;1113                   m_current_highest_peer_rank -= 1;
;;;1114                   {
;;;1115                   if ((err_code != NRF_ERROR_BUSY) && (err_code != NRF_ERROR_STORAGE_FULL))
;;;1116                       err_code = NRF_ERROR_INTERNAL;
;;;1117                   }
;;;1118               }
;;;1119           }
;;;1120       }
;;;1121       return err_code;
;;;1122   }
000012  b007              ADD      sp,sp,#0x1c
000014  bd30              POP      {r4,r5,pc}
                  |L31.22|
000016  bf00              NOP                            ;1067
000018  4928              LDR      r1,|L31.188|
00001a  c903              LDM      r1,{r0,r1}            ;1071
00001c  9106              STR      r1,[sp,#0x18]         ;1071
00001e  9005              STR      r0,[sp,#0x14]         ;1071
000020  4827              LDR      r0,|L31.192|
000022  7800              LDRB     r0,[r0,#0]            ;1077  ; m_peer_rank_initialized
000024  2800              CMP      r0,#0                 ;1077
000026  d101              BNE      |L31.44|
000028  f7fffffe          BL       rank_init
                  |L31.44|
00002c  4824              LDR      r0,|L31.192|
00002e  7800              LDRB     r0,[r0,#0]            ;1082  ; m_peer_rank_initialized
000030  2800              CMP      r0,#0                 ;1082
000032  d003              BEQ      |L31.60|
000034  4823              LDR      r0,|L31.196|
000036  6800              LDR      r0,[r0,#0]            ;1082  ; m_peer_rank_token
000038  2800              CMP      r0,#0                 ;1082
00003a  d001              BEQ      |L31.64|
                  |L31.60|
00003c  2411              MOVS     r4,#0x11              ;1084
00003e  e039              B        |L31.180|
                  |L31.64|
000040  4821              LDR      r0,|L31.200|
000042  8800              LDRH     r0,[r0,#0]            ;1088  ; m_highest_ranked_peer
000044  4285              CMP      r5,r0                 ;1088
000046  d11b              BNE      |L31.128|
000048  4820              LDR      r0,|L31.204|
00004a  6800              LDR      r0,[r0,#0]            ;1088  ; m_current_highest_peer_rank
00004c  2800              CMP      r0,#0                 ;1088
00004e  d017              BEQ      |L31.128|
000050  2400              MOVS     r4,#0                 ;1093
000052  2114              MOVS     r1,#0x14              ;1095
000054  4668              MOV      r0,sp                 ;1095
000056  f7fffffe          BL       __aeabi_memclr4
00005a  2107              MOVS     r1,#7                 ;1096
00005c  4668              MOV      r0,sp                 ;1096
00005e  7001              STRB     r1,[r0,#0]            ;1096
000060  4628              MOV      r0,r5                 ;1097
000062  f7fffffe          BL       im_conn_handle_get
000066  4601              MOV      r1,r0                 ;1097
000068  4668              MOV      r0,sp                 ;1097
00006a  8041              STRH     r1,[r0,#2]            ;1097
00006c  8085              STRH     r5,[r0,#4]            ;1098
00006e  2106              MOVS     r1,#6                 ;1099
000070  7201              STRB     r1,[r0,#8]            ;1099
000072  2100              MOVS     r1,#0                 ;1100
000074  7241              STRB     r1,[r0,#9]            ;1100
000076  9103              STR      r1,[sp,#0xc]          ;1101
000078  7281              STRB     r1,[r0,#0xa]          ;1102
00007a  f7fffffe          BL       evt_send
00007e  e019              B        |L31.180|
                  |L31.128|
000080  4812              LDR      r0,|L31.204|
000082  6800              LDR      r0,[r0,#0]            ;1108  ; m_current_highest_peer_rank
000084  1c40              ADDS     r0,r0,#1              ;1108
000086  4911              LDR      r1,|L31.204|
000088  6008              STR      r0,[r1,#0]            ;1108  ; m_current_highest_peer_rank
00008a  4a0e              LDR      r2,|L31.196|
00008c  a905              ADD      r1,sp,#0x14           ;1109
00008e  4628              MOV      r0,r5                 ;1109
000090  f7fffffe          BL       pdb_raw_store
000094  4604              MOV      r4,r0                 ;1109
000096  2c00              CMP      r4,#0                 ;1110
000098  d00c              BEQ      |L31.180|
00009a  2000              MOVS     r0,#0                 ;1112
00009c  4909              LDR      r1,|L31.196|
00009e  6008              STR      r0,[r1,#0]            ;1112  ; m_peer_rank_token
0000a0  480a              LDR      r0,|L31.204|
0000a2  6800              LDR      r0,[r0,#0]            ;1113  ; m_current_highest_peer_rank
0000a4  1e40              SUBS     r0,r0,#1              ;1113
0000a6  4909              LDR      r1,|L31.204|
0000a8  6008              STR      r0,[r1,#0]            ;1113  ; m_current_highest_peer_rank
0000aa  2c11              CMP      r4,#0x11              ;1115
0000ac  d002              BEQ      |L31.180|
0000ae  2c86              CMP      r4,#0x86              ;1115
0000b0  d000              BEQ      |L31.180|
0000b2  2403              MOVS     r4,#3                 ;1116
                  |L31.180|
0000b4  4620              MOV      r0,r4                 ;1121
0000b6  e7ac              B        |L31.18|
;;;1123   #endif // NRF_MODULE_ENABLED(PEER_MANAGER)
                          ENDP

                  |L31.184|
                          DCD      m_module_initialized
                  |L31.188|
                          DCD      ||.constdata||+0x8
                  |L31.192|
                          DCD      m_peer_rank_initialized
                  |L31.196|
                          DCD      m_peer_rank_token
                  |L31.200|
                          DCD      m_highest_ranked_peer
                  |L31.204|
                          DCD      m_current_highest_peer_rank

                          AREA ||i.pm_peer_ranks_get||, CODE, READONLY, ALIGN=2

                  pm_peer_ranks_get PROC
;;;977    
;;;978    ret_code_t pm_peer_ranks_get(pm_peer_id_t * p_highest_ranked_peer,
000000  b5ff              PUSH     {r0-r7,lr}
;;;979                                 uint32_t     * p_highest_rank,
;;;980                                 pm_peer_id_t * p_lowest_ranked_peer,
;;;981                                 uint32_t     * p_lowest_rank)
;;;982    {
000002  b087              SUB      sp,sp,#0x1c
000004  4606              MOV      r6,r0
;;;983        VERIFY_MODULE_INITIALIZED();
000006  bf00              NOP      
000008  482f              LDR      r0,|L32.200|
00000a  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000c  2800              CMP      r0,#0
00000e  d102              BNE      |L32.22|
000010  2008              MOVS     r0,#8
                  |L32.18|
;;;984    
;;;985        pm_peer_id_t         peer_id      = pdb_next_peer_id_get(PM_PEER_ID_INVALID);
;;;986        uint32_t             peer_rank    = 0;
;;;987        //lint -save -e65 -e64
;;;988        pm_peer_data_t       peer_data    = {.length_words = BYTES_TO_WORDS(sizeof(peer_rank)),
;;;989                                             .p_peer_rank  = &peer_rank};
;;;990        //lint -restore
;;;991        ret_code_t           err_code     = pdb_peer_data_load(peer_id, PM_PEER_DATA_ID_PEER_RANK, &peer_data);
;;;992        uint32_t             highest_rank = 0;
;;;993        uint32_t             lowest_rank  = 0xFFFFFFFF;
;;;994        pm_peer_id_t         highest_ranked_peer = PM_PEER_ID_INVALID;
;;;995        pm_peer_id_t         lowest_ranked_peer  = PM_PEER_ID_INVALID;
;;;996    
;;;997        if (err_code == NRF_ERROR_INVALID_PARAM)
;;;998        {
;;;999            // No peer IDs exist.
;;;1000           return NRF_ERROR_NOT_FOUND;
;;;1001       }
;;;1002   
;;;1003       while ((err_code == NRF_SUCCESS) || (err_code == NRF_ERROR_NOT_FOUND))
;;;1004       {
;;;1005           if (err_code == NRF_ERROR_NOT_FOUND)
;;;1006           {
;;;1007               peer_rank = 0;
;;;1008           }
;;;1009           if (peer_rank >= highest_rank)
;;;1010           {
;;;1011               highest_rank      = peer_rank;
;;;1012               highest_ranked_peer = peer_id;
;;;1013           }
;;;1014           if (peer_rank < lowest_rank)
;;;1015           {
;;;1016               lowest_rank      = peer_rank;
;;;1017               lowest_ranked_peer = peer_id;
;;;1018           }
;;;1019           peer_id = pdb_next_peer_id_get(peer_id);
;;;1020           err_code = pdb_peer_data_load(peer_id, PM_PEER_DATA_ID_PEER_RANK, &peer_data);
;;;1021       }
;;;1022       if (peer_id == PM_PEER_ID_INVALID)
;;;1023       {
;;;1024           err_code = NRF_SUCCESS;
;;;1025           if (p_highest_ranked_peer != NULL)
;;;1026           {
;;;1027               *p_highest_ranked_peer = highest_ranked_peer;
;;;1028           }
;;;1029           if (p_highest_rank != NULL)
;;;1030           {
;;;1031               *p_highest_rank = highest_rank;
;;;1032           }
;;;1033           if (p_lowest_ranked_peer != NULL)
;;;1034           {
;;;1035               *p_lowest_ranked_peer = lowest_ranked_peer;
;;;1036           }
;;;1037           if (p_lowest_rank != NULL)
;;;1038           {
;;;1039               *p_lowest_rank = lowest_rank;
;;;1040           }
;;;1041       }
;;;1042       else
;;;1043       {
;;;1044           err_code = NRF_ERROR_INTERNAL;
;;;1045       }
;;;1046       return err_code;
;;;1047   }
000012  b00b              ADD      sp,sp,#0x2c
000014  bdf0              POP      {r4-r7,pc}
                  |L32.22|
000016  bf00              NOP                            ;983
000018  482c              LDR      r0,|L32.204|
00001a  f7fffffe          BL       pdb_next_peer_id_get
00001e  4605              MOV      r5,r0                 ;985
000020  2000              MOVS     r0,#0                 ;986
000022  9006              STR      r0,[sp,#0x18]         ;986
000024  492a              LDR      r1,|L32.208|
000026  c903              LDM      r1,{r0,r1}            ;988
000028  9105              STR      r1,[sp,#0x14]         ;988
00002a  9004              STR      r0,[sp,#0x10]         ;988
00002c  a806              ADD      r0,sp,#0x18           ;988
00002e  9005              STR      r0,[sp,#0x14]         ;988
000030  aa04              ADD      r2,sp,#0x10           ;991
000032  2106              MOVS     r1,#6                 ;991
000034  4628              MOV      r0,r5                 ;991
000036  f7fffffe          BL       pdb_peer_data_load
00003a  4604              MOV      r4,r0                 ;991
00003c  2000              MOVS     r0,#0                 ;992
00003e  9003              STR      r0,[sp,#0xc]          ;992
000040  1e47              SUBS     r7,r0,#1              ;993
000042  0c38              LSRS     r0,r7,#16             ;994
000044  9002              STR      r0,[sp,#8]            ;994
000046  9001              STR      r0,[sp,#4]            ;995
000048  2c07              CMP      r4,#7                 ;997
00004a  d101              BNE      |L32.80|
00004c  2005              MOVS     r0,#5                 ;1000
00004e  e7e0              B        |L32.18|
                  |L32.80|
000050  e019              B        |L32.134|
                  |L32.82|
000052  2c05              CMP      r4,#5                 ;1005
000054  d101              BNE      |L32.90|
000056  2000              MOVS     r0,#0                 ;1007
000058  9006              STR      r0,[sp,#0x18]         ;1007
                  |L32.90|
00005a  9906              LDR      r1,[sp,#0x18]         ;1009
00005c  9803              LDR      r0,[sp,#0xc]          ;1009
00005e  4281              CMP      r1,r0                 ;1009
000060  d302              BCC      |L32.104|
000062  9806              LDR      r0,[sp,#0x18]         ;1011
000064  9003              STR      r0,[sp,#0xc]          ;1011
000066  9502              STR      r5,[sp,#8]            ;1012
                  |L32.104|
000068  9806              LDR      r0,[sp,#0x18]         ;1014
00006a  42b8              CMP      r0,r7                 ;1014
00006c  d201              BCS      |L32.114|
00006e  9f06              LDR      r7,[sp,#0x18]         ;1016
000070  9501              STR      r5,[sp,#4]            ;1017
                  |L32.114|
000072  4628              MOV      r0,r5                 ;1019
000074  f7fffffe          BL       pdb_next_peer_id_get
000078  4605              MOV      r5,r0                 ;1019
00007a  aa04              ADD      r2,sp,#0x10           ;1020
00007c  2106              MOVS     r1,#6                 ;1020
00007e  4628              MOV      r0,r5                 ;1020
000080  f7fffffe          BL       pdb_peer_data_load
000084  4604              MOV      r4,r0                 ;1020
                  |L32.134|
000086  2c00              CMP      r4,#0                 ;1003
000088  d0e3              BEQ      |L32.82|
00008a  2c05              CMP      r4,#5                 ;1003
00008c  d0e1              BEQ      |L32.82|
00008e  480f              LDR      r0,|L32.204|
000090  4285              CMP      r5,r0                 ;1022
000092  d116              BNE      |L32.194|
000094  2400              MOVS     r4,#0                 ;1024
000096  2e00              CMP      r6,#0                 ;1025
000098  d001              BEQ      |L32.158|
00009a  9802              LDR      r0,[sp,#8]            ;1027
00009c  8030              STRH     r0,[r6,#0]            ;1027
                  |L32.158|
00009e  9808              LDR      r0,[sp,#0x20]         ;1029
0000a0  2800              CMP      r0,#0                 ;1029
0000a2  d002              BEQ      |L32.170|
0000a4  9908              LDR      r1,[sp,#0x20]         ;1031
0000a6  9803              LDR      r0,[sp,#0xc]          ;1031
0000a8  6008              STR      r0,[r1,#0]            ;1031
                  |L32.170|
0000aa  9809              LDR      r0,[sp,#0x24]         ;1033
0000ac  2800              CMP      r0,#0                 ;1033
0000ae  d002              BEQ      |L32.182|
0000b0  9909              LDR      r1,[sp,#0x24]         ;1035
0000b2  9801              LDR      r0,[sp,#4]            ;1035
0000b4  8008              STRH     r0,[r1,#0]            ;1035
                  |L32.182|
0000b6  980a              LDR      r0,[sp,#0x28]         ;1037
0000b8  2800              CMP      r0,#0                 ;1037
0000ba  d003              BEQ      |L32.196|
0000bc  980a              LDR      r0,[sp,#0x28]         ;1039
0000be  6007              STR      r7,[r0,#0]            ;1039
0000c0  e000              B        |L32.196|
                  |L32.194|
0000c2  2403              MOVS     r4,#3                 ;1044
                  |L32.196|
0000c4  4620              MOV      r0,r4                 ;1046
0000c6  e7a4              B        |L32.18|
;;;1048   
                          ENDP

                  |L32.200|
                          DCD      m_module_initialized
                  |L32.204|
                          DCD      0x0000ffff
                  |L32.208|
                          DCD      ||.constdata||

                          AREA ||i.pm_peers_delete||, CODE, READONLY, ALIGN=2

                  pm_peers_delete PROC
;;;955    
;;;956    ret_code_t pm_peers_delete(void)
000000  b570              PUSH     {r4-r6,lr}
;;;957    {
;;;958        VERIFY_MODULE_INITIALIZED();
000002  bf00              NOP      
000004  4810              LDR      r0,|L33.72|
000006  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
000008  2800              CMP      r0,#0
00000a  d101              BNE      |L33.16|
00000c  2008              MOVS     r0,#8
                  |L33.14|
;;;959    
;;;960        m_deleting_all = true;
;;;961    
;;;962        pm_peer_id_t current_peer_id = pdb_next_peer_id_get(PM_PEER_ID_INVALID);
;;;963        while (current_peer_id != PM_PEER_ID_INVALID)
;;;964        {
;;;965            ret_code_t err_code = pm_peer_delete(current_peer_id);
;;;966            if (err_code != NRF_SUCCESS)
;;;967            {
;;;968                return NRF_ERROR_INTERNAL;
;;;969            }
;;;970    
;;;971            current_peer_id = pdb_next_peer_id_get(current_peer_id);
;;;972        }
;;;973    
;;;974        return NRF_SUCCESS;
;;;975    }
00000e  bd70              POP      {r4-r6,pc}
                  |L33.16|
000010  bf00              NOP                            ;958
000012  2001              MOVS     r0,#1                 ;960
000014  490d              LDR      r1,|L33.76|
000016  7008              STRB     r0,[r1,#0]            ;960
000018  480d              LDR      r0,|L33.80|
00001a  f7fffffe          BL       pdb_next_peer_id_get
00001e  4604              MOV      r4,r0                 ;962
000020  e00c              B        |L33.60|
                  |L33.34|
000022  4620              MOV      r0,r4                 ;965
000024  f7fffffe          BL       pm_peer_delete
000028  4605              MOV      r5,r0                 ;965
00002a  2d00              CMP      r5,#0                 ;966
00002c  d001              BEQ      |L33.50|
00002e  2003              MOVS     r0,#3                 ;968
000030  e7ed              B        |L33.14|
                  |L33.50|
000032  4620              MOV      r0,r4                 ;971
000034  f7fffffe          BL       pdb_next_peer_id_get
000038  4604              MOV      r4,r0                 ;971
00003a  bf00              NOP                            ;972
                  |L33.60|
00003c  4804              LDR      r0,|L33.80|
00003e  4284              CMP      r4,r0                 ;963
000040  d1ef              BNE      |L33.34|
000042  2000              MOVS     r0,#0                 ;974
000044  e7e3              B        |L33.14|
;;;976    
                          ENDP

000046  0000              DCW      0x0000
                  |L33.72|
                          DCD      m_module_initialized
                  |L33.76|
                          DCD      m_deleting_all
                  |L33.80|
                          DCD      0x0000ffff

                          AREA ||i.pm_privacy_get||, CODE, READONLY, ALIGN=2

                  pm_privacy_get PROC
;;;643    
;;;644    ret_code_t pm_privacy_get(pm_privacy_params_t * p_privacy_params)
000000  b510              PUSH     {r4,lr}
;;;645    {
000002  4604              MOV      r4,r0
;;;646        VERIFY_MODULE_INITIALIZED();
000004  bf00              NOP      
000006  480c              LDR      r0,|L34.56|
000008  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000a  2800              CMP      r0,#0
00000c  d101              BNE      |L34.18|
00000e  2008              MOVS     r0,#8
                  |L34.16|
;;;647        VERIFY_PARAM_NOT_NULL(p_privacy_params);
;;;648        VERIFY_PARAM_NOT_NULL(p_privacy_params->p_device_irk);
;;;649        return im_privacy_get(p_privacy_params);
;;;650    }
000010  bd10              POP      {r4,pc}
                  |L34.18|
000012  bf00              NOP                            ;646
000014  bf00              NOP                            ;647
000016  2c00              CMP      r4,#0                 ;647
000018  d101              BNE      |L34.30|
00001a  200e              MOVS     r0,#0xe               ;647
00001c  e7f8              B        |L34.16|
                  |L34.30|
00001e  bf00              NOP                            ;647
000020  bf00              NOP                            ;648
000022  6860              LDR      r0,[r4,#4]            ;648
000024  2800              CMP      r0,#0                 ;648
000026  d101              BNE      |L34.44|
000028  200e              MOVS     r0,#0xe               ;648
00002a  e7f1              B        |L34.16|
                  |L34.44|
00002c  bf00              NOP                            ;648
00002e  4620              MOV      r0,r4                 ;649
000030  f7fffffe          BL       im_privacy_get
000034  e7ec              B        |L34.16|
;;;651    
                          ENDP

000036  0000              DCW      0x0000
                  |L34.56|
                          DCD      m_module_initialized

                          AREA ||i.pm_privacy_set||, CODE, READONLY, ALIGN=2

                  pm_privacy_set PROC
;;;635    
;;;636    ret_code_t pm_privacy_set(pm_privacy_params_t const * p_privacy_params)
000000  b510              PUSH     {r4,lr}
;;;637    {
000002  4604              MOV      r4,r0
;;;638        VERIFY_MODULE_INITIALIZED();
000004  bf00              NOP      
000006  4808              LDR      r0,|L35.40|
000008  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000a  2800              CMP      r0,#0
00000c  d101              BNE      |L35.18|
00000e  2008              MOVS     r0,#8
                  |L35.16|
;;;639        VERIFY_PARAM_NOT_NULL(p_privacy_params);
;;;640        return im_privacy_set(p_privacy_params);
;;;641    }
000010  bd10              POP      {r4,pc}
                  |L35.18|
000012  bf00              NOP                            ;638
000014  bf00              NOP                            ;639
000016  2c00              CMP      r4,#0                 ;639
000018  d101              BNE      |L35.30|
00001a  200e              MOVS     r0,#0xe               ;639
00001c  e7f8              B        |L35.16|
                  |L35.30|
00001e  bf00              NOP                            ;639
000020  4620              MOV      r0,r4                 ;640
000022  f7fffffe          BL       im_privacy_set
000026  e7f3              B        |L35.16|
;;;642    
                          ENDP

                  |L35.40|
                          DCD      m_module_initialized

                          AREA ||i.pm_register||, CODE, READONLY, ALIGN=2

                  pm_register PROC
;;;558    
;;;559    ret_code_t pm_register(pm_evt_handler_t event_handler)
000000  4601              MOV      r1,r0
;;;560    {
;;;561        VERIFY_MODULE_INITIALIZED();
000002  bf00              NOP      
000004  480c              LDR      r0,|L36.56|
000006  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
000008  2800              CMP      r0,#0
00000a  d101              BNE      |L36.16|
00000c  2008              MOVS     r0,#8
                  |L36.14|
;;;562    
;;;563        if (m_n_registrants >= MAX_REGISTRANTS)
;;;564        {
;;;565            return NRF_ERROR_NO_MEM;
;;;566        }
;;;567    
;;;568        m_evt_handlers[m_n_registrants] = event_handler;
;;;569        m_n_registrants += 1;
;;;570    
;;;571        return NRF_SUCCESS;
;;;572    }
00000e  4770              BX       lr
                  |L36.16|
000010  bf00              NOP                            ;561
000012  480a              LDR      r0,|L36.60|
000014  7800              LDRB     r0,[r0,#0]            ;563  ; m_n_registrants
000016  2803              CMP      r0,#3                 ;563
000018  db01              BLT      |L36.30|
00001a  2004              MOVS     r0,#4                 ;565
00001c  e7f7              B        |L36.14|
                  |L36.30|
00001e  4807              LDR      r0,|L36.60|
000020  7800              LDRB     r0,[r0,#0]            ;568  ; m_n_registrants
000022  0080              LSLS     r0,r0,#2              ;568
000024  4a06              LDR      r2,|L36.64|
000026  5011              STR      r1,[r2,r0]            ;568
000028  4804              LDR      r0,|L36.60|
00002a  7800              LDRB     r0,[r0,#0]            ;569  ; m_n_registrants
00002c  1c40              ADDS     r0,r0,#1              ;569
00002e  4a03              LDR      r2,|L36.60|
000030  7010              STRB     r0,[r2,#0]            ;569
000032  2000              MOVS     r0,#0                 ;571
000034  e7eb              B        |L36.14|
;;;573    
                          ENDP

000036  0000              DCW      0x0000
                  |L36.56|
                          DCD      m_module_initialized
                  |L36.60|
                          DCD      m_n_registrants
                  |L36.64|
                          DCD      m_evt_handlers

                          AREA ||i.pm_sec_params_reply||, CODE, READONLY, ALIGN=2

                  pm_sec_params_reply PROC
;;;606    
;;;607    ret_code_t pm_sec_params_reply(uint16_t conn_handle, ble_gap_sec_params_t * p_sec_params)
000000  4602              MOV      r2,r0
;;;608    {
;;;609        VERIFY_MODULE_INITIALIZED();
000002  bf00              NOP      
000004  4804              LDR      r0,|L37.24|
000006  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
000008  2800              CMP      r0,#0
00000a  d101              BNE      |L37.16|
00000c  2008              MOVS     r0,#8
                  |L37.14|
;;;610        return NRF_SUCCESS;
;;;611    }
00000e  4770              BX       lr
                  |L37.16|
000010  bf00              NOP                            ;609
000012  2000              MOVS     r0,#0                 ;610
000014  e7fb              B        |L37.14|
;;;612    
                          ENDP

000016  0000              DCW      0x0000
                  |L37.24|
                          DCD      m_module_initialized

                          AREA ||i.pm_sec_params_set||, CODE, READONLY, ALIGN=2

                  pm_sec_params_set PROC
;;;574    
;;;575    ret_code_t pm_sec_params_set(ble_gap_sec_params_t * p_sec_params)
000000  b570              PUSH     {r4-r6,lr}
;;;576    {
000002  4604              MOV      r4,r0
;;;577        VERIFY_MODULE_INITIALIZED();
000004  bf00              NOP      
000006  4806              LDR      r0,|L38.32|
000008  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000a  2800              CMP      r0,#0
00000c  d101              BNE      |L38.18|
00000e  2008              MOVS     r0,#8
                  |L38.16|
;;;578    
;;;579        ret_code_t err_code;
;;;580    
;;;581        err_code = sm_sec_params_set(p_sec_params);
;;;582    
;;;583        // NRF_ERROR_INVALID_PARAM if parameters are invalid,
;;;584        // NRF_SUCCESS             otherwise.
;;;585        return err_code;
;;;586    }
000010  bd70              POP      {r4-r6,pc}
                  |L38.18|
000012  bf00              NOP                            ;577
000014  4620              MOV      r0,r4                 ;581
000016  f7fffffe          BL       sm_sec_params_set
00001a  4605              MOV      r5,r0                 ;581
00001c  4628              MOV      r0,r5                 ;585
00001e  e7f7              B        |L38.16|
;;;587    
                          ENDP

                  |L38.32|
                          DCD      m_module_initialized

                          AREA ||i.pm_sm_evt_handler||, CODE, READONLY, ALIGN=2

                  pm_sm_evt_handler PROC
;;;234     */
;;;235    void pm_sm_evt_handler(sm_evt_t const * p_sm_evt)
000000  b5f0              PUSH     {r4-r7,lr}
;;;236    {
000002  b087              SUB      sp,sp,#0x1c
000004  4604              MOV      r4,r0
;;;237        bool find_peer_id = true;
000006  2501              MOVS     r5,#1
;;;238        bool send_evt     = true;
000008  2001              MOVS     r0,#1
00000a  9006              STR      r0,[sp,#0x18]
;;;239        pm_evt_t pm_evt;
;;;240        memset(&pm_evt, 0, sizeof(pm_evt_t));
00000c  2114              MOVS     r1,#0x14
00000e  a801              ADD      r0,sp,#4
000010  f7fffffe          BL       __aeabi_memclr4
;;;241        pm_evt.conn_handle = p_sm_evt->conn_handle;
000014  8860              LDRH     r0,[r4,#2]
000016  4669              MOV      r1,sp
000018  80c8              STRH     r0,[r1,#6]
;;;242    
;;;243        switch (p_sm_evt->evt_id)
00001a  7820              LDRB     r0,[r4,#0]
00001c  0003              MOVS     r3,r0
00001e  f7fffffe          BL       __ARM_common_switch8
000022  0daf              DCB      0x0d,0xaf
000024  080c2941          DCB      0x08,0x0c,0x29,0x41
000028  5667727e          DCB      0x56,0x67,0x72,0x7e
00002c  8c9296ab          DCB      0x8c,0x92,0x96,0xab
000030  af00              DCB      0xaf,0x00
;;;244        {
;;;245            case SM_EVT_SLAVE_SECURITY_REQ:
;;;246                find_peer_id = false;
000032  2500              MOVS     r5,#0
;;;247                send_evt     = false;
000034  2000              MOVS     r0,#0
000036  9006              STR      r0,[sp,#0x18]
;;;248                break;
000038  e0a5              B        |L39.390|
;;;249    
;;;250            case SM_EVT_SEC_PROCEDURE_START:
;;;251            {
;;;252                pm_evt.evt_id = PM_EVT_CONN_SEC_START;
00003a  2001              MOVS     r0,#1
00003c  4669              MOV      r1,sp
00003e  7108              STRB     r0,[r1,#4]
;;;253                bool pairing = p_sm_evt->params.sec_procedure_start.procedure
000040  7920              LDRB     r0,[r4,#4]
000042  2800              CMP      r0,#0
000044  d001              BEQ      |L39.74|
000046  2001              MOVS     r0,#1
000048  e000              B        |L39.76|
                  |L39.74|
00004a  2000              MOVS     r0,#0
                  |L39.76|
00004c  4606              MOV      r6,r0
;;;254                                    != PM_LINK_SECURED_PROCEDURE_ENCRYPTION;
;;;255                bool bonding = p_sm_evt->params.sec_procedure_start.procedure
00004e  7920              LDRB     r0,[r4,#4]
000050  2801              CMP      r0,#1
000052  d100              BNE      |L39.86|
000054  e000              B        |L39.88|
                  |L39.86|
000056  2000              MOVS     r0,#0
                  |L39.88|
000058  4607              MOV      r7,r0
;;;256                                    == PM_LINK_SECURED_PROCEDURE_BONDING;
;;;257                ble_conn_state_user_flag_set(p_sm_evt->conn_handle, m_pairing_flag_id, pairing);
00005a  8860              LDRH     r0,[r4,#2]
00005c  4632              MOV      r2,r6
00005e  4952              LDR      r1,|L39.424|
000060  7809              LDRB     r1,[r1,#0]  ; m_pairing_flag_id
000062  f7fffffe          BL       ble_conn_state_user_flag_set
;;;258                ble_conn_state_user_flag_set(p_sm_evt->conn_handle, m_bonding_flag_id, bonding);
000066  8860              LDRH     r0,[r4,#2]
000068  463a              MOV      r2,r7
00006a  4950              LDR      r1,|L39.428|
00006c  7809              LDRB     r1,[r1,#0]  ; m_bonding_flag_id
00006e  f7fffffe          BL       ble_conn_state_user_flag_set
;;;259                break;
000072  e088              B        |L39.390|
;;;260            }
;;;261    
;;;262            case SM_EVT_PAIRING_SUCCESS:
;;;263                pm_evt.evt_id = PM_EVT_CONN_SEC_SUCCEEDED;
000074  2002              MOVS     r0,#2
000076  4669              MOV      r1,sp
000078  7108              STRB     r0,[r1,#4]
;;;264                pm_evt.params.conn_sec_succeeded.procedure =
00007a  7920              LDRB     r0,[r4,#4]
00007c  2800              CMP      r0,#0
00007e  d001              BEQ      |L39.132|
;;;265                            p_sm_evt->params.pairing_success.bonded
;;;266                            ? PM_LINK_SECURED_PROCEDURE_BONDING
000080  2001              MOVS     r0,#1
000082  e000              B        |L39.134|
                  |L39.132|
;;;267                            : PM_LINK_SECURED_PROCEDURE_PAIRING;
000084  2002              MOVS     r0,#2
                  |L39.134|
000086  4669              MOV      r1,sp
000088  7308              STRB     r0,[r1,#0xc]
;;;268                ble_conn_state_user_flag_set(p_sm_evt->conn_handle, m_pairing_flag_id, true);
00008a  8860              LDRH     r0,[r4,#2]
00008c  2201              MOVS     r2,#1
00008e  4946              LDR      r1,|L39.424|
000090  7809              LDRB     r1,[r1,#0]  ; m_pairing_flag_id
000092  f7fffffe          BL       ble_conn_state_user_flag_set
;;;269                ble_conn_state_user_flag_set(p_sm_evt->conn_handle,
000096  7922              LDRB     r2,[r4,#4]
000098  8860              LDRH     r0,[r4,#2]
00009a  4944              LDR      r1,|L39.428|
00009c  7809              LDRB     r1,[r1,#0]  ; m_bonding_flag_id
00009e  f7fffffe          BL       ble_conn_state_user_flag_set
;;;270                                             m_bonding_flag_id,
;;;271                                             p_sm_evt->params.pairing_success.bonded
;;;272                );
;;;273                break;
0000a2  e070              B        |L39.390|
;;;274    
;;;275            case SM_EVT_PAIRING_FAIL:
;;;276                pm_evt.evt_id = PM_EVT_CONN_SEC_FAILED;
0000a4  2003              MOVS     r0,#3
0000a6  4669              MOV      r1,sp
0000a8  7108              STRB     r0,[r1,#4]
;;;277                pm_evt.params.conn_sec_failed.procedure =
0000aa  8860              LDRH     r0,[r4,#2]
0000ac  493f              LDR      r1,|L39.428|
0000ae  7809              LDRB     r1,[r1,#0]  ; m_bonding_flag_id
0000b0  f7fffffe          BL       ble_conn_state_user_flag_get
0000b4  2800              CMP      r0,#0
0000b6  d001              BEQ      |L39.188|
;;;278                            ble_conn_state_user_flag_get(p_sm_evt->conn_handle, m_bonding_flag_id)
;;;279                            ? PM_LINK_SECURED_PROCEDURE_BONDING
0000b8  2001              MOVS     r0,#1
0000ba  e000              B        |L39.190|
                  |L39.188|
;;;280                            : PM_LINK_SECURED_PROCEDURE_PAIRING;
0000bc  2002              MOVS     r0,#2
                  |L39.190|
0000be  4669              MOV      r1,sp
0000c0  7308              STRB     r0,[r1,#0xc]
;;;281                pm_evt.params.conn_sec_failed.error_src
0000c2  79a1              LDRB     r1,[r4,#6]
0000c4  a801              ADD      r0,sp,#4
0000c6  7301              STRB     r1,[r0,#0xc]
;;;282                    = p_sm_evt->params.pairing_failed.error_src;
;;;283                pm_evt.params.conn_sec_failed.error
0000c8  88a1              LDRH     r1,[r4,#4]
0000ca  8141              STRH     r1,[r0,#0xa]
;;;284                    = p_sm_evt->params.pairing_failed.error;
;;;285                break;
0000cc  e05b              B        |L39.390|
;;;286    
;;;287            case SM_EVT_LINK_ENCRYPTION_UPDATE:
;;;288                if (!ble_conn_state_user_flag_get(p_sm_evt->conn_handle, m_pairing_flag_id))
0000ce  8860              LDRH     r0,[r4,#2]
0000d0  4935              LDR      r1,|L39.424|
0000d2  7809              LDRB     r1,[r1,#0]  ; m_pairing_flag_id
0000d4  f7fffffe          BL       ble_conn_state_user_flag_get
0000d8  2800              CMP      r0,#0
0000da  d105              BNE      |L39.232|
;;;289                {
;;;290                    pm_evt.evt_id = PM_EVT_CONN_SEC_SUCCEEDED;
0000dc  2102              MOVS     r1,#2
0000de  4668              MOV      r0,sp
0000e0  7101              STRB     r1,[r0,#4]
;;;291                    pm_evt.params.conn_sec_succeeded.procedure = PM_LINK_SECURED_PROCEDURE_ENCRYPTION;
0000e2  2100              MOVS     r1,#0
0000e4  7301              STRB     r1,[r0,#0xc]
0000e6  e002              B        |L39.238|
                  |L39.232|
;;;292                }
;;;293                else
;;;294                {
;;;295                    find_peer_id = false;
0000e8  2500              MOVS     r5,#0
;;;296                    send_evt     = false;
0000ea  2000              MOVS     r0,#0
0000ec  9006              STR      r0,[sp,#0x18]
                  |L39.238|
;;;297                }
;;;298                break;
0000ee  e04a              B        |L39.390|
;;;299    
;;;300            case SM_EVT_LINK_ENCRYPTION_FAILED:
;;;301                pm_evt.evt_id = PM_EVT_CONN_SEC_FAILED;
0000f0  2103              MOVS     r1,#3
0000f2  4668              MOV      r0,sp
0000f4  7101              STRB     r1,[r0,#4]
;;;302                pm_evt.params.conn_sec_failed.procedure
0000f6  2100              MOVS     r1,#0
0000f8  7301              STRB     r1,[r0,#0xc]
;;;303                                = PM_LINK_SECURED_PROCEDURE_ENCRYPTION;
;;;304                pm_evt.params.conn_sec_failed.error_src
0000fa  79a1              LDRB     r1,[r4,#6]
0000fc  a801              ADD      r0,sp,#4
0000fe  7301              STRB     r1,[r0,#0xc]
;;;305                                = p_sm_evt->params.link_encryption_failed.error_src;
;;;306                pm_evt.params.conn_sec_failed.error
000100  88a1              LDRH     r1,[r4,#4]
000102  8141              STRH     r1,[r0,#0xa]
;;;307                                = p_sm_evt->params.link_encryption_failed.error;
;;;308                break;
000104  e03f              B        |L39.390|
;;;309    
;;;310            case SM_EVT_BONDING_INFO_STORED:
;;;311                pm_evt.evt_id  = PM_EVT_PEER_DATA_UPDATE_SUCCEEDED;
000106  2107              MOVS     r1,#7
000108  4668              MOV      r0,sp
00010a  7101              STRB     r1,[r0,#4]
;;;312                pm_evt.peer_id = p_sm_evt->params.bonding_info_stored.peer_id;
00010c  88a1              LDRH     r1,[r4,#4]
00010e  8101              STRH     r1,[r0,#8]
;;;313                pm_evt.params.peer_data_update_succeeded.data_id = PM_PEER_DATA_ID_BONDING;
000110  2107              MOVS     r1,#7
000112  7301              STRB     r1,[r0,#0xc]
;;;314                pm_evt.params.peer_data_update_succeeded.action  = PM_PEER_DATA_OP_UPDATE;
000114  2100              MOVS     r1,#0
000116  a801              ADD      r0,sp,#4
000118  7241              STRB     r1,[r0,#9]
;;;315                find_peer_id = false;
00011a  2500              MOVS     r5,#0
;;;316                break;
00011c  e033              B        |L39.390|
;;;317    
;;;318            case SM_EVT_ERROR_BONDING_INFO:
;;;319                pm_evt.evt_id = PM_EVT_PEER_DATA_UPDATE_FAILED;
00011e  2108              MOVS     r1,#8
000120  4668              MOV      r0,sp
000122  7101              STRB     r1,[r0,#4]
;;;320                pm_evt.peer_id = p_sm_evt->params.error_bonding_info.peer_id;
000124  88a1              LDRH     r1,[r4,#4]
000126  8101              STRH     r1,[r0,#8]
;;;321                pm_evt.params.peer_data_update_failed.data_id = PM_PEER_DATA_ID_BONDING;
000128  2107              MOVS     r1,#7
00012a  7301              STRB     r1,[r0,#0xc]
;;;322                pm_evt.params.peer_data_update_failed.action  = PM_PEER_DATA_OP_UPDATE;
00012c  2100              MOVS     r1,#0
00012e  a801              ADD      r0,sp,#4
000130  7241              STRB     r1,[r0,#9]
;;;323                pm_evt.params.peer_data_update_failed.error
000132  68a1              LDR      r1,[r4,#8]
000134  9105              STR      r1,[sp,#0x14]
;;;324                    = p_sm_evt->params.error_bonding_info.error;
;;;325                find_peer_id = false;
000136  2500              MOVS     r5,#0
;;;326                break;
000138  e025              B        |L39.390|
;;;327    
;;;328            case SM_EVT_ERROR_UNEXPECTED:
;;;329                pm_evt.evt_id = PM_EVT_ERROR_UNEXPECTED;
00013a  2006              MOVS     r0,#6
00013c  4669              MOV      r1,sp
00013e  7108              STRB     r0,[r1,#4]
;;;330                pm_evt.params.error_unexpected.error = p_sm_evt->params.error_unexpected.error;
000140  6860              LDR      r0,[r4,#4]
000142  9003              STR      r0,[sp,#0xc]
;;;331                break;
000144  e01f              B        |L39.390|
;;;332    
;;;333            case SM_EVT_ERROR_NO_MEM:
;;;334                pm_evt.evt_id = PM_EVT_STORAGE_FULL;
000146  2005              MOVS     r0,#5
000148  4669              MOV      r1,sp
00014a  7108              STRB     r0,[r1,#4]
;;;335                break;
00014c  e01b              B        |L39.390|
;;;336    
;;;337            case SM_EVT_ERROR_SMP_TIMEOUT:
;;;338                pm_evt.evt_id = PM_EVT_CONN_SEC_FAILED;
00014e  2003              MOVS     r0,#3
000150  4669              MOV      r1,sp
000152  7108              STRB     r0,[r1,#4]
;;;339                pm_evt.params.conn_sec_failed.procedure
000154  8860              LDRH     r0,[r4,#2]
000156  4915              LDR      r1,|L39.428|
000158  7809              LDRB     r1,[r1,#0]  ; m_bonding_flag_id
00015a  f7fffffe          BL       ble_conn_state_user_flag_get
00015e  2800              CMP      r0,#0
000160  d001              BEQ      |L39.358|
;;;340                            = ble_conn_state_user_flag_get(p_sm_evt->conn_handle, m_bonding_flag_id)
;;;341                            ? PM_LINK_SECURED_PROCEDURE_BONDING
000162  2001              MOVS     r0,#1
000164  e000              B        |L39.360|
                  |L39.358|
;;;342                            : PM_LINK_SECURED_PROCEDURE_PAIRING;
000166  2002              MOVS     r0,#2
                  |L39.360|
000168  4669              MOV      r1,sp
00016a  7308              STRB     r0,[r1,#0xc]
;;;343                pm_evt.params.conn_sec_failed.error_src  = BLE_GAP_SEC_STATUS_SOURCE_LOCAL;
00016c  2100              MOVS     r1,#0
00016e  a801              ADD      r0,sp,#4
000170  7301              STRB     r1,[r0,#0xc]
;;;344                pm_evt.params.conn_sec_failed.error      = PM_CONN_SEC_ERROR_SMP_TIMEOUT;
000172  490f              LDR      r1,|L39.432|
000174  8141              STRH     r1,[r0,#0xa]
;;;345                break;
000176  e006              B        |L39.390|
;;;346    
;;;347            case SM_EVT_CONN_SEC_CONFIG_REQ:
;;;348                pm_evt.evt_id = PM_EVT_CONN_SEC_CONFIG_REQ;
000178  2004              MOVS     r0,#4
00017a  4669              MOV      r1,sp
00017c  7108              STRB     r0,[r1,#4]
;;;349                break;
00017e  e002              B        |L39.390|
;;;350    
;;;351            default:
;;;352                send_evt = false;
000180  2000              MOVS     r0,#0
000182  9006              STR      r0,[sp,#0x18]
;;;353                break;
000184  bf00              NOP      
                  |L39.390|
000186  bf00              NOP                            ;248
;;;354        }
;;;355    
;;;356        if (find_peer_id)
000188  2d00              CMP      r5,#0
00018a  d004              BEQ      |L39.406|
;;;357        {
;;;358            pm_evt.peer_id = im_peer_id_get_by_conn_handle(p_sm_evt->conn_handle);
00018c  8860              LDRH     r0,[r4,#2]
00018e  f7fffffe          BL       im_peer_id_get_by_conn_handle
000192  4669              MOV      r1,sp
000194  8108              STRH     r0,[r1,#8]
                  |L39.406|
;;;359        }
;;;360    
;;;361        if (send_evt)
000196  9806              LDR      r0,[sp,#0x18]
000198  2800              CMP      r0,#0
00019a  d002              BEQ      |L39.418|
;;;362        {
;;;363            evt_send(&pm_evt);
00019c  a801              ADD      r0,sp,#4
00019e  f7fffffe          BL       evt_send
                  |L39.418|
;;;364        }
;;;365    }
0001a2  b007              ADD      sp,sp,#0x1c
0001a4  bdf0              POP      {r4-r7,pc}
;;;366    
                          ENDP

0001a6  0000              DCW      0x0000
                  |L39.424|
                          DCD      m_pairing_flag_id
                  |L39.428|
                          DCD      m_bonding_flag_id
                  |L39.432|
                          DCD      0x00001101

                          AREA ||i.pm_whitelist_get||, CODE, READONLY, ALIGN=2

                  pm_whitelist_get PROC
;;;660    
;;;661    ret_code_t pm_whitelist_get(ble_gap_addr_t * p_addrs,
000000  b5f8              PUSH     {r3-r7,lr}
;;;662                                uint32_t       * p_addr_cnt,
;;;663                                ble_gap_irk_t  * p_irks,
;;;664                                uint32_t       * p_irk_cnt)
;;;665    {
000002  4604              MOV      r4,r0
000004  460e              MOV      r6,r1
000006  4615              MOV      r5,r2
000008  461f              MOV      r7,r3
;;;666        VERIFY_MODULE_INITIALIZED();
00000a  bf00              NOP      
00000c  480d              LDR      r0,|L40.68|
00000e  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
000010  2800              CMP      r0,#0
000012  d101              BNE      |L40.24|
000014  2008              MOVS     r0,#8
                  |L40.22|
;;;667    
;;;668        if (((p_addrs == NULL) && (p_irks     == NULL)) ||
;;;669            ((p_addrs != NULL) && (p_addr_cnt == NULL)) ||
;;;670            ((p_irks  != NULL) && (p_irk_cnt  == NULL)))
;;;671        {
;;;672            // The buffers can't be both NULL, and if a buffer is provided its size must be specified.
;;;673            return NRF_ERROR_NULL;
;;;674        }
;;;675    
;;;676        return im_whitelist_get(p_addrs, p_addr_cnt, p_irks, p_irk_cnt);
;;;677    }
000016  bdf8              POP      {r3-r7,pc}
                  |L40.24|
000018  bf00              NOP                            ;666
00001a  2c00              CMP      r4,#0                 ;668
00001c  d101              BNE      |L40.34|
00001e  2d00              CMP      r5,#0                 ;668
000020  d007              BEQ      |L40.50|
                  |L40.34|
000022  2c00              CMP      r4,#0                 ;669
000024  d001              BEQ      |L40.42|
000026  2e00              CMP      r6,#0                 ;669
000028  d003              BEQ      |L40.50|
                  |L40.42|
00002a  2d00              CMP      r5,#0                 ;670
00002c  d003              BEQ      |L40.54|
00002e  2f00              CMP      r7,#0                 ;670
000030  d101              BNE      |L40.54|
                  |L40.50|
000032  200e              MOVS     r0,#0xe               ;673
000034  e7ef              B        |L40.22|
                  |L40.54|
000036  463b              MOV      r3,r7                 ;676
000038  462a              MOV      r2,r5                 ;676
00003a  4631              MOV      r1,r6                 ;676
00003c  4620              MOV      r0,r4                 ;676
00003e  f7fffffe          BL       im_whitelist_get
000042  e7e8              B        |L40.22|
;;;678    
                          ENDP

                  |L40.68|
                          DCD      m_module_initialized

                          AREA ||i.pm_whitelist_set||, CODE, READONLY, ALIGN=2

                  pm_whitelist_set PROC
;;;652    
;;;653    ret_code_t pm_whitelist_set(pm_peer_id_t const * p_peers,
000000  b570              PUSH     {r4-r6,lr}
;;;654                                uint32_t             peer_cnt)
;;;655    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;656        VERIFY_MODULE_INITIALIZED();
000006  bf00              NOP      
000008  4805              LDR      r0,|L41.32|
00000a  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000c  2800              CMP      r0,#0
00000e  d101              BNE      |L41.20|
000010  2008              MOVS     r0,#8
                  |L41.18|
;;;657        return im_whitelist_set(p_peers, peer_cnt);
;;;658    }
000012  bd70              POP      {r4-r6,pc}
                  |L41.20|
000014  bf00              NOP                            ;656
000016  4629              MOV      r1,r5                 ;657
000018  4620              MOV      r0,r4                 ;657
00001a  f7fffffe          BL       im_whitelist_set
00001e  e7f8              B        |L41.18|
;;;659    
                          ENDP

                  |L41.32|
                          DCD      m_module_initialized

                          AREA ||i.rank_init||, CODE, READONLY, ALIGN=2

                  rank_init PROC
;;;1051    */
;;;1052   static void rank_init(void)
000000  b510              PUSH     {r4,lr}
;;;1053   {
;;;1054       ret_code_t err_code = pm_peer_ranks_get(&m_highest_ranked_peer,
000002  2300              MOVS     r3,#0
000004  461a              MOV      r2,r3
000006  4906              LDR      r1,|L42.32|
000008  4806              LDR      r0,|L42.36|
00000a  f7fffffe          BL       pm_peer_ranks_get
00000e  4604              MOV      r4,r0
;;;1055                                               &m_current_highest_peer_rank,
;;;1056                                               NULL,
;;;1057                                               NULL);
;;;1058       if ((err_code == NRF_SUCCESS) || (err_code == NRF_ERROR_NOT_FOUND))
000010  2c00              CMP      r4,#0
000012  d001              BEQ      |L42.24|
000014  2c05              CMP      r4,#5
000016  d102              BNE      |L42.30|
                  |L42.24|
;;;1059       {
;;;1060           m_peer_rank_initialized = true;
000018  2001              MOVS     r0,#1
00001a  4903              LDR      r1,|L42.40|
00001c  7008              STRB     r0,[r1,#0]
                  |L42.30|
;;;1061       }
;;;1062   }
00001e  bd10              POP      {r4,pc}
;;;1063   
                          ENDP

                  |L42.32|
                          DCD      m_current_highest_peer_rank
                  |L42.36|
                          DCD      m_highest_ranked_peer
                  |L42.40|
                          DCD      m_peer_rank_initialized

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  m_evt_handlers
                          %        12

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

000000  0001              DCW      0x0001
000002  0000              DCB      0x00,0x00
                          DCD      0x00000000
000008  0001              DCW      0x0001
00000a  0600              DCB      0x06,0x00
                          DCD      m_current_highest_peer_rank

                          AREA ||.data||, DATA, ALIGN=2

                  m_module_initialized
000000  00                DCB      0x00
                  m_peer_rank_initialized
000001  00                DCB      0x00
                  m_deleting_all
000002  0000              DCB      0x00,0x00
                  m_peer_rank_token
                          DCD      0x00000000
                  m_current_highest_peer_rank
                          DCD      0x00000000
                  m_highest_ranked_peer
00000c  0000              DCB      0x00,0x00
                  m_n_registrants
00000e  00                DCB      0x00
                  m_pairing_flag_id
00000f  00                DCB      0x00
                  m_bonding_flag_id
000010  00                DCB      0x00

                          AREA ||i.__ARM_common_switch8||, COMGROUP=__ARM_common_switch8, CODE, READONLY, ALIGN=1

                  __ARM_common_switch8 PROC
000000  b430              PUSH     {r4,r5}
000002  4674              MOV      r4,lr
000004  1e64              SUBS     r4,r4,#1
000006  7825              LDRB     r5,[r4,#0]
000008  1c64              ADDS     r4,r4,#1
00000a  42ab              CMP      r3,r5
00000c  d304              BCC      |L260.24|
                  |L260.14|
00000e  5d63              LDRB     r3,[r4,r5]
000010  005b              LSLS     r3,r3,#1
000012  18e3              ADDS     r3,r4,r3
000014  bc30              POP      {r4,r5}
000016  4718              BX       r3
                  |L260.24|
000018  461d              MOV      r5,r3
00001a  e7f8              B        |L260.14|
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\..\\..\\components\\ble\\peer_manager\\peer_manager.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___14_peer_manager_c_cf900614____REV16|
#line 129 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\4.2.0\\CMSIS\\Include\\core_cmInstr.h"
|__asm___14_peer_manager_c_cf900614____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___14_peer_manager_c_cf900614____REVSH|
#line 144
|__asm___14_peer_manager_c_cf900614____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
