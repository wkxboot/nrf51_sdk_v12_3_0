; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\debug\ble_sls.o --asm_dir=.\DEBUG\ --list_dir=.\DEBUG\ --depend=.\debug\ble_sls.d --cpu=Cortex-M0 --apcs=interwork -O0 -I..\..\..\config -I..\..\..\..\..\..\components -I..\..\..\..\..\..\components\ble\ble_advertising -I..\..\..\..\..\..\components\ble\ble_dtm -I..\..\..\..\..\..\components\ble\ble_racp -I..\..\..\..\..\..\components\ble\ble_services\ble_ancs_c -I..\..\..\..\..\..\components\ble\ble_services\ble_ans_c -I..\..\..\..\..\..\components\ble\ble_services\ble_bas -I..\..\..\..\..\..\components\ble\ble_services\ble_bas_c -I..\..\..\..\..\..\components\ble\ble_services\ble_cscs -I..\..\..\..\..\..\components\ble\ble_services\ble_cts_c -I..\..\..\..\..\..\components\ble\ble_services\ble_dfu -I..\..\..\..\..\..\components\ble\ble_services\ble_dis -I..\..\..\..\..\..\components\ble\ble_services\ble_gls -I..\..\..\..\..\..\components\ble\ble_services\ble_hids -I..\..\..\..\..\..\components\ble\ble_services\ble_hrs -I..\..\..\..\..\..\components\ble\ble_services\ble_hrs_c -I..\..\..\..\..\..\components\ble\ble_services\ble_hts -I..\..\..\..\..\..\components\ble\ble_services\ble_ias -I..\..\..\..\..\..\components\ble\ble_services\ble_ias_c -I..\..\..\..\..\..\components\ble\ble_services\ble_lbs -I..\..\..\..\..\..\components\ble\ble_services\ble_lbs_c -I..\..\..\..\..\..\components\ble\ble_services\ble_lls -I..\..\..\..\..\..\components\ble\ble_services\ble_nus -I..\..\..\..\..\..\components\ble\ble_services\ble_nus_c -I..\..\..\..\..\..\components\ble\ble_services\ble_rscs -I..\..\..\..\..\..\components\ble\ble_services\ble_rscs_c -I..\..\..\..\..\..\components\ble\ble_services\ble_tps -I..\..\..\..\..\..\components\ble\common -I..\..\..\..\..\..\components\ble\nrf_ble_qwr -I..\..\..\..\..\..\components\ble\peer_manager -I..\..\..\..\..\..\components\boards -I..\..\..\..\..\..\components\drivers_nrf\adc -I..\..\..\..\..\..\components\drivers_nrf\clock -I..\..\..\..\..\..\components\drivers_nrf\common -I..\..\..\..\..\..\components\drivers_nrf\comp -I..\..\..\..\..\..\components\drivers_nrf\delay -I..\..\..\..\..\..\components\drivers_nrf\gpiote -I..\..\..\..\..\..\components\drivers_nrf\hal -I..\..\..\..\..\..\components\drivers_nrf\i2s -I..\..\..\..\..\..\components\drivers_nrf\lpcomp -I..\..\..\..\..\..\components\drivers_nrf\pdm -I..\..\..\..\..\..\components\drivers_nrf\power -I..\..\..\..\..\..\components\drivers_nrf\ppi -I..\..\..\..\..\..\components\drivers_nrf\pwm -I..\..\..\..\..\..\components\drivers_nrf\qdec -I..\..\..\..\..\..\components\drivers_nrf\rng -I..\..\..\..\..\..\components\drivers_nrf\rtc -I..\..\..\..\..\..\components\drivers_nrf\saadc -I..\..\..\..\..\..\components\drivers_nrf\spi_master -I..\..\..\..\..\..\components\drivers_nrf\spi_slave -I..\..\..\..\..\..\components\drivers_nrf\swi -I..\..\..\..\..\..\components\drivers_nrf\timer -I..\..\..\..\..\..\components\drivers_nrf\twi_master -I..\..\..\..\..\..\components\drivers_nrf\twis_slave -I..\..\..\..\..\..\components\drivers_nrf\uart -I..\..\..\..\..\..\components\drivers_nrf\usbd -I..\..\..\..\..\..\components\drivers_nrf\wdt -I..\..\..\..\..\..\components\libraries\bsp -I..\..\..\..\..\..\components\libraries\button -I..\..\..\..\..\..\components\libraries\crc16 -I..\..\..\..\..\..\components\libraries\crc32 -I..\..\..\..\..\..\components\libraries\csense -I..\..\..\..\..\..\components\libraries\csense_drv -I..\..\..\..\..\..\components\libraries\experimental_section_vars -I..\..\..\..\..\..\components\libraries\fds -I..\..\..\..\..\..\components\libraries\fstorage -I..\..\..\..\..\..\components\libraries\gpiote -I..\..\..\..\..\..\components\libraries\hardfault -I..\..\..\..\..\..\components\libraries\hci -I..\..\..\..\..\..\components\libraries\led_softblink -I..\..\..\..\..\..\components\libraries\log -I..\..\..\..\..\..\components\libraries\log\src -I..\..\..\..\..\..\components\libraries\low_power_pwm -I..\..\..\..\..\..\components\libraries\mem_manager -I..\..\..\..\..\..\components\libraries\pwm -I..\..\..\..\..\..\components\libraries\queue -I..\..\..\..\..\..\components\libraries\scheduler -I..\..\..\..\..\..\components\libraries\sensorsim -I..\..\..\..\..\..\components\libraries\slip -I..\..\..\..\..\..\components\libraries\timer -I..\..\..\..\..\..\components\libraries\twi -I..\..\..\..\..\..\components\libraries\uart -I..\..\..\..\..\..\components\libraries\usbd -I..\..\..\..\..\..\components\libraries\usbd\class\audio -I..\..\..\..\..\..\components\libraries\usbd\class\cdc -I..\..\..\..\..\..\components\libraries\usbd\class\cdc\acm -I..\..\..\..\..\..\components\libraries\usbd\class\hid -I..\..\..\..\..\..\components\libraries\usbd\class\hid\generic -I..\..\..\..\..\..\components\libraries\usbd\class\hid\kbd -I..\..\..\..\..\..\components\libraries\usbd\class\hid\mouse -I..\..\..\..\..\..\components\libraries\usbd\class\msc -I..\..\..\..\..\..\components\libraries\usbd\config -I..\..\..\..\..\..\components\libraries\util -I..\..\..\..\..\..\components\softdevice\common\softdevice_handler -I..\..\..\..\..\..\components\softdevice\s130\headers -I..\..\..\..\..\..\components\softdevice\s130\headers\nrf51 -I..\..\..\..\..\..\components\toolchain -I..\..\..\..\..\..\external\segger_rtt -I..\config -I..\..\..\..\..\..\components\ble\ble_services\ble_sls -ID:\development\nordic_ble\src_code\nrf51_sdk_v12_3_0\nRF5_SDK_12.3.0_d7731ad\examples\ble_peripheral\ble_app_smart_locker\JJDK_ZG_ZK\s130\arm5_no_packs\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.2.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\NordicSemiconductor\nRF_DeviceFamilyPack\8.11.1\Device\Include -D__MICROLIB -D_RTE_ -DNRF51 -DBLE_STACK_SUPPORT_REQD -DNRF51822 -DBOARD_JJDK_ZG_ZK -DNRF_SD_BLE_API_VERSION=2 -DS130 -DNRF51 -DSOFTDEVICE_PRESENT -DSWI_DISABLE0 --omf_browse=.\debug\ble_sls.crf ..\..\..\..\..\..\components\ble\ble_services\ble_sls\ble_sls.c]
                          THUMB

                          AREA ||i.ble_sls_init||, CODE, READONLY, ALIGN=1

                  ble_sls_init PROC
;;;548    
;;;549    uint32_t ble_sls_init(ble_sls_t * p_sls, const ble_sls_init_t * p_sls_init)
000000  b5f8              PUSH     {r3-r7,lr}
;;;550    {
000002  4605              MOV      r5,r0
000004  460e              MOV      r6,r1
;;;551        uint32_t   err_code;
;;;552        ble_uuid_t ble_uuid;
;;;553    
;;;554        // Initialize service structure
;;;555        p_sls->evt_handler                 = p_sls_init->evt_handler;
000006  6830              LDR      r0,[r6,#0]
000008  6028              STR      r0,[r5,#0]
;;;556    
;;;557        p_sls->conn_handle                 = BLE_CONN_HANDLE_INVALID;
00000a  2000              MOVS     r0,#0
00000c  43c0              MVNS     r0,r0
00000e  87e8              STRH     r0,[r5,#0x3e]
;;;558    
;;;559        // Add service
;;;560        BLE_UUID_BLE_ASSIGN(ble_uuid, BLE_UUID_SMART_LOCKER_SERVICE);
000010  bf00              NOP      
000012  2101              MOVS     r1,#1
000014  4668              MOV      r0,sp
000016  7081              STRB     r1,[r0,#2]
000018  2111              MOVS     r1,#0x11
00001a  43c9              MVNS     r1,r1
00001c  8001              STRH     r1,[r0,#0]
00001e  bf00              NOP      
;;;561    
;;;562        err_code = sd_ble_gatts_service_add(BLE_GATTS_SRVC_TYPE_PRIMARY,
000020  1d2a              ADDS     r2,r5,#4
000022  4669              MOV      r1,sp
000024  2001              MOVS     r0,#1
000026  dfa0              SVC      #0xa0
000028  4604              MOV      r4,r0
;;;563                                            &ble_uuid,
;;;564                                            &p_sls->service_handle);
;;;565    
;;;566        if (err_code != NRF_SUCCESS)
00002a  2c00              CMP      r4,#0
00002c  d001              BEQ      |L1.50|
;;;567        {
;;;568            return err_code;
00002e  4620              MOV      r0,r4
                  |L1.48|
;;;569        }
;;;570    
;;;571        // Add heart rate measurement characteristic
;;;572        err_code = uv_lamp_cmd_char_add(p_sls, p_sls_init);
;;;573        if (err_code != NRF_SUCCESS)
;;;574        {
;;;575            return err_code;
;;;576        }
;;;577    		    // Add heart rate measurement characteristic
;;;578        err_code = uv_lamp_status_char_add(p_sls, p_sls_init);
;;;579        if (err_code != NRF_SUCCESS)
;;;580        {
;;;581            return err_code;
;;;582        }
;;;583    		    // Add heart rate measurement characteristic
;;;584        err_code = uv_lamp_door_status_char_add(p_sls, p_sls_init);
;;;585        if (err_code != NRF_SUCCESS)
;;;586        {
;;;587            return err_code;
;;;588        }
;;;589    
;;;590           err_code =fan_negative_ion_cmd_char_add(p_sls, p_sls_init);
;;;591            if (err_code != NRF_SUCCESS)
;;;592            {
;;;593                return err_code;
;;;594            }
;;;595    	     err_code =fan_negative_ion_status_char_add(p_sls, p_sls_init);
;;;596            if (err_code != NRF_SUCCESS)
;;;597            {
;;;598                return err_code;
;;;599            }
;;;600           err_code =elec_lock_cmd_char_add(p_sls, p_sls_init);
;;;601            if (err_code != NRF_SUCCESS)
;;;602            {
;;;603                return err_code;
;;;604            }
;;;605           err_code =elec_lock_status_char_add(p_sls, p_sls_init);
;;;606            if (err_code != NRF_SUCCESS)
;;;607            {
;;;608                return err_code;
;;;609            }
;;;610        return NRF_SUCCESS;
;;;611    }
000030  bdf8              POP      {r3-r7,pc}
                  |L1.50|
000032  4631              MOV      r1,r6                 ;572
000034  4628              MOV      r0,r5                 ;572
000036  f7fffffe          BL       uv_lamp_cmd_char_add
00003a  4604              MOV      r4,r0                 ;572
00003c  2c00              CMP      r4,#0                 ;573
00003e  d001              BEQ      |L1.68|
000040  4620              MOV      r0,r4                 ;575
000042  e7f5              B        |L1.48|
                  |L1.68|
000044  4631              MOV      r1,r6                 ;578
000046  4628              MOV      r0,r5                 ;578
000048  f7fffffe          BL       uv_lamp_status_char_add
00004c  4604              MOV      r4,r0                 ;578
00004e  2c00              CMP      r4,#0                 ;579
000050  d001              BEQ      |L1.86|
000052  4620              MOV      r0,r4                 ;581
000054  e7ec              B        |L1.48|
                  |L1.86|
000056  4631              MOV      r1,r6                 ;584
000058  4628              MOV      r0,r5                 ;584
00005a  f7fffffe          BL       uv_lamp_door_status_char_add
00005e  4604              MOV      r4,r0                 ;584
000060  2c00              CMP      r4,#0                 ;585
000062  d001              BEQ      |L1.104|
000064  4620              MOV      r0,r4                 ;587
000066  e7e3              B        |L1.48|
                  |L1.104|
000068  4631              MOV      r1,r6                 ;590
00006a  4628              MOV      r0,r5                 ;590
00006c  f7fffffe          BL       fan_negative_ion_cmd_char_add
000070  4604              MOV      r4,r0                 ;590
000072  2c00              CMP      r4,#0                 ;591
000074  d001              BEQ      |L1.122|
000076  4620              MOV      r0,r4                 ;593
000078  e7da              B        |L1.48|
                  |L1.122|
00007a  4631              MOV      r1,r6                 ;595
00007c  4628              MOV      r0,r5                 ;595
00007e  f7fffffe          BL       fan_negative_ion_status_char_add
000082  4604              MOV      r4,r0                 ;595
000084  2c00              CMP      r4,#0                 ;596
000086  d001              BEQ      |L1.140|
000088  4620              MOV      r0,r4                 ;598
00008a  e7d1              B        |L1.48|
                  |L1.140|
00008c  4631              MOV      r1,r6                 ;600
00008e  4628              MOV      r0,r5                 ;600
000090  f7fffffe          BL       elec_lock_cmd_char_add
000094  4604              MOV      r4,r0                 ;600
000096  2c00              CMP      r4,#0                 ;601
000098  d001              BEQ      |L1.158|
00009a  4620              MOV      r0,r4                 ;603
00009c  e7c8              B        |L1.48|
                  |L1.158|
00009e  4631              MOV      r1,r6                 ;605
0000a0  4628              MOV      r0,r5                 ;605
0000a2  f7fffffe          BL       elec_lock_status_char_add
0000a6  4604              MOV      r4,r0                 ;605
0000a8  2c00              CMP      r4,#0                 ;606
0000aa  d001              BEQ      |L1.176|
0000ac  4620              MOV      r0,r4                 ;608
0000ae  e7bf              B        |L1.48|
                  |L1.176|
0000b0  2000              MOVS     r0,#0                 ;610
0000b2  e7bd              B        |L1.48|
                          ENDP


                          AREA ||i.ble_sls_on_ble_evt||, CODE, READONLY, ALIGN=2

                  ble_sls_on_ble_evt PROC
;;;133    
;;;134    void ble_sls_on_ble_evt(ble_sls_t * p_sls, ble_evt_t * p_ble_evt)
000000  b570              PUSH     {r4-r6,lr}
;;;135    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;136        switch (p_ble_evt->header.evt_id)
000006  8820              LDRH     r0,[r4,#0]
000008  2810              CMP      r0,#0x10
00000a  d004              BEQ      |L2.22|
00000c  2811              CMP      r0,#0x11
00000e  d00b              BEQ      |L2.40|
000010  2850              CMP      r0,#0x50
000012  d11b              BNE      |L2.76|
000014  e011              B        |L2.58|
                  |L2.22|
;;;137        {
;;;138            case BLE_GAP_EVT_CONNECTED:
;;;139                on_connect(p_sls, p_ble_evt);
000016  4621              MOV      r1,r4
000018  4628              MOV      r0,r5
00001a  f7fffffe          BL       on_connect
;;;140    				    NRF_LOG_INFO("sls connected!\r\n");
00001e  a10d              ADR      r1,|L2.84|
000020  2003              MOVS     r0,#3
000022  f7fffffe          BL       nrf_log_frontend_std_0
;;;141                break;
000026  e012              B        |L2.78|
                  |L2.40|
;;;142    
;;;143            case BLE_GAP_EVT_DISCONNECTED:
;;;144                on_disconnect(p_sls, p_ble_evt);
000028  4621              MOV      r1,r4
00002a  4628              MOV      r0,r5
00002c  f7fffffe          BL       on_disconnect
;;;145    				    NRF_LOG_INFO("sls disconnected!\r\n");
000030  a112              ADR      r1,|L2.124|
000032  2003              MOVS     r0,#3
000034  f7fffffe          BL       nrf_log_frontend_std_0
;;;146                break;
000038  e009              B        |L2.78|
                  |L2.58|
;;;147    
;;;148            case BLE_GATTS_EVT_WRITE:
;;;149                on_write(p_sls, p_ble_evt);
00003a  4621              MOV      r1,r4
00003c  4628              MOV      r0,r5
00003e  f7fffffe          BL       on_write
;;;150    				    NRF_LOG_INFO("sls writed!\r\n");
000042  a119              ADR      r1,|L2.168|
000044  2003              MOVS     r0,#3
000046  f7fffffe          BL       nrf_log_frontend_std_0
;;;151                break;
00004a  e000              B        |L2.78|
                  |L2.76|
;;;152    
;;;153            default:
;;;154                // No implementation needed.
;;;155                break;
00004c  bf00              NOP      
                  |L2.78|
00004e  bf00              NOP                            ;141
;;;156        }
;;;157    }
000050  bd70              POP      {r4-r6,pc}
;;;158    
                          ENDP

000052  0000              DCW      0x0000
                  |L2.84|
000054  1b5b313b          DCB      27,"[1;32mBLE_SLS.c:INFO:sls connected!\r\n",0
000058  33326d42
00005c  4c455f53
000060  4c532e63
000064  3a494e46
000068  4f3a736c
00006c  7320636f
000070  6e6e6563
000074  74656421
000078  0d0a00  
00007b  00                DCB      0
                  |L2.124|
00007c  1b5b313b          DCB      27,"[1;32mBLE_SLS.c:INFO:sls disconnected!\r\n",0
000080  33326d42
000084  4c455f53
000088  4c532e63
00008c  3a494e46
000090  4f3a736c
000094  73206469
000098  73636f6e
00009c  6e656374
0000a0  6564210d
0000a4  0a00    
0000a6  00                DCB      0
0000a7  00                DCB      0
                  |L2.168|
0000a8  1b5b313b          DCB      27,"[1;32mBLE_SLS.c:INFO:sls writed!\r\n",0
0000ac  33326d42
0000b0  4c455f53
0000b4  4c532e63
0000b8  3a494e46
0000bc  4f3a736c
0000c0  73207772
0000c4  69746564
0000c8  210d0a00

                          AREA ||i.elec_lock_cmd_char_add||, CODE, READONLY, ALIGN=2

                  elec_lock_cmd_char_add PROC
;;;445     */
;;;446    static uint32_t elec_lock_cmd_char_add(ble_sls_t                 * p_sls, 
000000  b530              PUSH     {r4,r5,lr}
;;;447    	                                     const ble_sls_init_t      * p_sls_init)
;;;448    {
000002  b08f              SUB      sp,sp,#0x3c
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
;;;449        ble_gatts_char_md_t char_md;
;;;450    	  ble_gatts_attr_md_t cccd_md;
;;;451        ble_gatts_attr_t    attr_char_value;
;;;452        ble_uuid_t          ble_uuid;
;;;453        ble_gatts_attr_md_t attr_md;
;;;454    
;;;455        memset(&char_md, 0, sizeof(char_md));
000008  211c              MOVS     r1,#0x1c
00000a  a808              ADD      r0,sp,#0x20
00000c  f7fffffe          BL       __aeabi_memclr4
;;;456        char_md.char_props.notify= 1;
000010  a808              ADD      r0,sp,#0x20
000012  7800              LDRB     r0,[r0,#0]
000014  2110              MOVS     r1,#0x10
000016  4388              BICS     r0,r0,r1
000018  1841              ADDS     r1,r0,r1
00001a  a808              ADD      r0,sp,#0x20
00001c  7001              STRB     r1,[r0,#0]
;;;457        char_md.char_props.read  = 1;
00001e  7800              LDRB     r0,[r0,#0]
000020  2102              MOVS     r1,#2
000022  4388              BICS     r0,r0,r1
000024  1c81              ADDS     r1,r0,#2
000026  a808              ADD      r0,sp,#0x20
000028  7001              STRB     r1,[r0,#0]
;;;458    	  char_md.char_props.write = 1;
00002a  7800              LDRB     r0,[r0,#0]
00002c  2108              MOVS     r1,#8
00002e  4388              BICS     r0,r0,r1
000030  1841              ADDS     r1,r0,r1
000032  a808              ADD      r0,sp,#0x20
000034  7001              STRB     r1,[r0,#0]
;;;459    	  char_md.char_user_desc_max_size=MAX_SLS_USER_DESC_LEN;
000036  2114              MOVS     r1,#0x14
000038  4668              MOV      r0,sp
00003a  8501              STRH     r1,[r0,#0x28]
;;;460    	  char_md.char_user_desc_size=sizeof("elec_lock_cmd");
00003c  210e              MOVS     r1,#0xe
00003e  8541              STRH     r1,[r0,#0x2a]
;;;461    	  char_md.p_char_user_desc=(uint8_t*)"elec_lock_cmd";
000040  a042              ADR      r0,|L3.332|
000042  9009              STR      r0,[sp,#0x24]
;;;462        char_md.p_char_pf        = NULL;
000044  2000              MOVS     r0,#0
000046  900b              STR      r0,[sp,#0x2c]
;;;463        char_md.p_user_desc_md   = NULL;
000048  900c              STR      r0,[sp,#0x30]
;;;464        char_md.p_cccd_md        = NULL;
00004a  900d              STR      r0,[sp,#0x34]
;;;465        char_md.p_sccd_md        = NULL;
00004c  900e              STR      r0,[sp,#0x38]
;;;466    
;;;467        BLE_UUID_BLE_ASSIGN(ble_uuid, BLE_UUID_ELEC_LOCK_CMD_CHAR);
00004e  bf00              NOP      
000050  2101              MOVS     r1,#1
000052  4668              MOV      r0,sp
000054  7181              STRB     r1,[r0,#6]
000056  21f9              MOVS     r1,#0xf9
000058  43c9              MVNS     r1,r1
00005a  8081              STRH     r1,[r0,#4]
00005c  bf00              NOP      
;;;468       //cccd cfg
;;;469        memset(&cccd_md, 0, sizeof(cccd_md));
00005e  2000              MOVS     r0,#0
000060  9007              STR      r0,[sp,#0x1c]
;;;470        BLE_GAP_CONN_SEC_MODE_SET_OPEN(&cccd_md.read_perm);
000062  bf00              NOP      
000064  4668              MOV      r0,sp
000066  7f00              LDRB     r0,[r0,#0x1c]
000068  0901              LSRS     r1,r0,#4
00006a  0109              LSLS     r1,r1,#4
00006c  1c49              ADDS     r1,r1,#1
00006e  4668              MOV      r0,sp
000070  7701              STRB     r1,[r0,#0x1c]
000072  7f00              LDRB     r0,[r0,#0x1c]
000074  21f0              MOVS     r1,#0xf0
000076  4388              BICS     r0,r0,r1
000078  3010              ADDS     r0,r0,#0x10
00007a  4669              MOV      r1,sp
00007c  7708              STRB     r0,[r1,#0x1c]
00007e  bf00              NOP      
;;;471    	  BLE_GAP_CONN_SEC_MODE_SET_OPEN(&cccd_md.write_perm);
000080  bf00              NOP      
000082  4668              MOV      r0,sp
000084  7f40              LDRB     r0,[r0,#0x1d]
000086  0901              LSRS     r1,r0,#4
000088  0109              LSLS     r1,r1,#4
00008a  1c49              ADDS     r1,r1,#1
00008c  4668              MOV      r0,sp
00008e  7741              STRB     r1,[r0,#0x1d]
000090  7f40              LDRB     r0,[r0,#0x1d]
000092  21f0              MOVS     r1,#0xf0
000094  4388              BICS     r0,r0,r1
000096  3010              ADDS     r0,r0,#0x10
000098  4669              MOV      r1,sp
00009a  7748              STRB     r0,[r1,#0x1d]
00009c  bf00              NOP      
;;;472        cccd_md.vloc       = BLE_GATTS_VLOC_STACK;
00009e  7f88              LDRB     r0,[r1,#0x1e]
0000a0  2106              MOVS     r1,#6
0000a2  4388              BICS     r0,r0,r1
0000a4  1c80              ADDS     r0,r0,#2
0000a6  4669              MOV      r1,sp
0000a8  7788              STRB     r0,[r1,#0x1e]
;;;473    		
;;;474        memset(&attr_md, 0, sizeof(attr_md));
0000aa  2000              MOVS     r0,#0
0000ac  9000              STR      r0,[sp,#0]
;;;475    		BLE_GAP_CONN_SEC_MODE_SET_OPEN(&attr_md.read_perm);
0000ae  bf00              NOP      
0000b0  4668              MOV      r0,sp
0000b2  7800              LDRB     r0,[r0,#0]
0000b4  0901              LSRS     r1,r0,#4
0000b6  0109              LSLS     r1,r1,#4
0000b8  1c49              ADDS     r1,r1,#1
0000ba  4668              MOV      r0,sp
0000bc  7001              STRB     r1,[r0,#0]
0000be  7800              LDRB     r0,[r0,#0]
0000c0  21f0              MOVS     r1,#0xf0
0000c2  4388              BICS     r0,r0,r1
0000c4  3010              ADDS     r0,r0,#0x10
0000c6  4669              MOV      r1,sp
0000c8  7008              STRB     r0,[r1,#0]
0000ca  bf00              NOP      
;;;476    		BLE_GAP_CONN_SEC_MODE_SET_OPEN(&attr_md.write_perm);
0000cc  bf00              NOP      
0000ce  4668              MOV      r0,sp
0000d0  7840              LDRB     r0,[r0,#1]
0000d2  0901              LSRS     r1,r0,#4
0000d4  0109              LSLS     r1,r1,#4
0000d6  1c49              ADDS     r1,r1,#1
0000d8  4668              MOV      r0,sp
0000da  7041              STRB     r1,[r0,#1]
0000dc  7840              LDRB     r0,[r0,#1]
0000de  21f0              MOVS     r1,#0xf0
0000e0  4388              BICS     r0,r0,r1
0000e2  3010              ADDS     r0,r0,#0x10
0000e4  4669              MOV      r1,sp
0000e6  7048              STRB     r0,[r1,#1]
0000e8  bf00              NOP      
;;;477    
;;;478        attr_md.vloc       = BLE_GATTS_VLOC_USER;
0000ea  4668              MOV      r0,sp
0000ec  7880              LDRB     r0,[r0,#2]
0000ee  2106              MOVS     r1,#6
0000f0  4388              BICS     r0,r0,r1
0000f2  1d01              ADDS     r1,r0,#4
0000f4  4668              MOV      r0,sp
0000f6  7081              STRB     r1,[r0,#2]
;;;479        attr_md.rd_auth    = 0;
0000f8  7880              LDRB     r0,[r0,#2]
0000fa  2108              MOVS     r1,#8
0000fc  4388              BICS     r0,r0,r1
0000fe  4601              MOV      r1,r0
000100  4668              MOV      r0,sp
000102  7081              STRB     r1,[r0,#2]
;;;480        attr_md.wr_auth    = 0;
000104  7880              LDRB     r0,[r0,#2]
000106  2110              MOVS     r1,#0x10
000108  4388              BICS     r0,r0,r1
00010a  4601              MOV      r1,r0
00010c  4668              MOV      r0,sp
00010e  7081              STRB     r1,[r0,#2]
;;;481        attr_md.vlen       = 1;
000110  7880              LDRB     r0,[r0,#2]
000112  0841              LSRS     r1,r0,#1
000114  0049              LSLS     r1,r1,#1
000116  1c49              ADDS     r1,r1,#1
000118  4668              MOV      r0,sp
00011a  7081              STRB     r1,[r0,#2]
;;;482    
;;;483        memset(&attr_char_value, 0, sizeof(attr_char_value));
00011c  2114              MOVS     r1,#0x14
00011e  a802              ADD      r0,sp,#8
000120  f7fffffe          BL       __aeabi_memclr4
;;;484    
;;;485        attr_char_value.p_uuid    = &ble_uuid;
000124  a801              ADD      r0,sp,#4
000126  9002              STR      r0,[sp,#8]
;;;486        attr_char_value.p_attr_md = &attr_md;
000128  4668              MOV      r0,sp
00012a  9003              STR      r0,[sp,#0xc]
;;;487        attr_char_value.init_len  = MAX_SLS_CMD_LEN;
00012c  2101              MOVS     r1,#1
00012e  8201              STRH     r1,[r0,#0x10]
;;;488        attr_char_value.init_offs = 0;
000130  2100              MOVS     r1,#0
000132  8241              STRH     r1,[r0,#0x12]
;;;489        attr_char_value.max_len   = MAX_SLS_CMD_LEN;
000134  2101              MOVS     r1,#1
000136  8281              STRH     r1,[r0,#0x14]
;;;490        attr_char_value.p_value   = (uint8_t*)&elec_lock_cmd;
000138  4808              LDR      r0,|L3.348|
00013a  9006              STR      r0,[sp,#0x18]
;;;491    
;;;492        return sd_ble_gatts_characteristic_add(p_sls->service_handle,
00013c  88a0              LDRH     r0,[r4,#4]
00013e  4623              MOV      r3,r4
000140  332e              ADDS     r3,r3,#0x2e
000142  aa02              ADD      r2,sp,#8
000144  a908              ADD      r1,sp,#0x20
000146  dfa2              SVC      #0xa2
;;;493                                               &char_md,
;;;494                                               &attr_char_value,
;;;495                                               &p_sls->elec_lock_cmd_handles);
;;;496    }
000148  b00f              ADD      sp,sp,#0x3c
00014a  bd30              POP      {r4,r5,pc}
;;;497    static uint32_t elec_lock_status_char_add(ble_sls_t                 * p_sls, 
                          ENDP

                  |L3.332|
00014c  656c6563          DCB      "elec_lock_cmd",0
000150  5f6c6f63
000154  6b5f636d
000158  6400    
00015a  00                DCB      0
00015b  00                DCB      0
                  |L3.348|
                          DCD      elec_lock_cmd

                          AREA ||i.elec_lock_status_char_add||, CODE, READONLY, ALIGN=2

                  elec_lock_status_char_add PROC
;;;496    }
;;;497    static uint32_t elec_lock_status_char_add(ble_sls_t                 * p_sls, 
000000  b530              PUSH     {r4,r5,lr}
;;;498    	                                        const ble_sls_init_t      * p_sls_init)
;;;499    {
000002  b08f              SUB      sp,sp,#0x3c
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
;;;500        ble_gatts_char_md_t char_md;
;;;501    	  ble_gatts_attr_md_t cccd_md;
;;;502        ble_gatts_attr_t    attr_char_value;
;;;503        ble_uuid_t          ble_uuid;
;;;504        ble_gatts_attr_md_t attr_md;
;;;505    
;;;506        memset(&char_md, 0, sizeof(char_md));
000008  211c              MOVS     r1,#0x1c
00000a  a808              ADD      r0,sp,#0x20
00000c  f7fffffe          BL       __aeabi_memclr4
;;;507        char_md.char_props.notify= 1;
000010  a808              ADD      r0,sp,#0x20
000012  7800              LDRB     r0,[r0,#0]
000014  2110              MOVS     r1,#0x10
000016  4388              BICS     r0,r0,r1
000018  1841              ADDS     r1,r0,r1
00001a  a808              ADD      r0,sp,#0x20
00001c  7001              STRB     r1,[r0,#0]
;;;508        char_md.char_props.read  = 1;
00001e  7800              LDRB     r0,[r0,#0]
000020  2102              MOVS     r1,#2
000022  4388              BICS     r0,r0,r1
000024  1c81              ADDS     r1,r0,#2
000026  a808              ADD      r0,sp,#0x20
000028  7001              STRB     r1,[r0,#0]
;;;509    	  //char_md.char_props.write = 1;
;;;510    	  char_md.char_user_desc_max_size=MAX_SLS_USER_DESC_LEN;
00002a  2114              MOVS     r1,#0x14
00002c  4668              MOV      r0,sp
00002e  8501              STRH     r1,[r0,#0x28]
;;;511    	  char_md.char_user_desc_size=sizeof("elec_lock_status");
000030  2111              MOVS     r1,#0x11
000032  8541              STRH     r1,[r0,#0x2a]
;;;512    	  char_md.p_char_user_desc=(uint8_t*)"elec_lock_status";
000034  a03b              ADR      r0,|L4.292|
000036  9009              STR      r0,[sp,#0x24]
;;;513        char_md.p_char_pf        = NULL;
000038  2000              MOVS     r0,#0
00003a  900b              STR      r0,[sp,#0x2c]
;;;514        char_md.p_user_desc_md   = NULL;
00003c  900c              STR      r0,[sp,#0x30]
;;;515        char_md.p_cccd_md        = NULL;
00003e  900d              STR      r0,[sp,#0x34]
;;;516        char_md.p_sccd_md        = NULL;
000040  900e              STR      r0,[sp,#0x38]
;;;517    
;;;518        BLE_UUID_BLE_ASSIGN(ble_uuid, BLE_UUID_ELEC_LOCK_STATUS_CHAR);
000042  bf00              NOP      
000044  2101              MOVS     r1,#1
000046  4668              MOV      r0,sp
000048  7181              STRB     r1,[r0,#6]
00004a  21f8              MOVS     r1,#0xf8
00004c  43c9              MVNS     r1,r1
00004e  8081              STRH     r1,[r0,#4]
000050  bf00              NOP      
;;;519       //cccd cfg
;;;520        memset(&cccd_md, 0, sizeof(cccd_md));
000052  2000              MOVS     r0,#0
000054  9007              STR      r0,[sp,#0x1c]
;;;521        BLE_GAP_CONN_SEC_MODE_SET_OPEN(&cccd_md.read_perm);
000056  bf00              NOP      
000058  4668              MOV      r0,sp
00005a  7f00              LDRB     r0,[r0,#0x1c]
00005c  0901              LSRS     r1,r0,#4
00005e  0109              LSLS     r1,r1,#4
000060  1c49              ADDS     r1,r1,#1
000062  4668              MOV      r0,sp
000064  7701              STRB     r1,[r0,#0x1c]
000066  7f00              LDRB     r0,[r0,#0x1c]
000068  21f0              MOVS     r1,#0xf0
00006a  4388              BICS     r0,r0,r1
00006c  3010              ADDS     r0,r0,#0x10
00006e  4669              MOV      r1,sp
000070  7708              STRB     r0,[r1,#0x1c]
000072  bf00              NOP      
;;;522    	  BLE_GAP_CONN_SEC_MODE_SET_OPEN(&cccd_md.write_perm);
000074  bf00              NOP      
000076  4668              MOV      r0,sp
000078  7f40              LDRB     r0,[r0,#0x1d]
00007a  0901              LSRS     r1,r0,#4
00007c  0109              LSLS     r1,r1,#4
00007e  1c49              ADDS     r1,r1,#1
000080  4668              MOV      r0,sp
000082  7741              STRB     r1,[r0,#0x1d]
000084  7f40              LDRB     r0,[r0,#0x1d]
000086  21f0              MOVS     r1,#0xf0
000088  4388              BICS     r0,r0,r1
00008a  3010              ADDS     r0,r0,#0x10
00008c  4669              MOV      r1,sp
00008e  7748              STRB     r0,[r1,#0x1d]
000090  bf00              NOP      
;;;523        cccd_md.vloc       = BLE_GATTS_VLOC_STACK;
000092  7f88              LDRB     r0,[r1,#0x1e]
000094  2106              MOVS     r1,#6
000096  4388              BICS     r0,r0,r1
000098  1c80              ADDS     r0,r0,#2
00009a  4669              MOV      r1,sp
00009c  7788              STRB     r0,[r1,#0x1e]
;;;524    		
;;;525        memset(&attr_md, 0, sizeof(attr_md));
00009e  2000              MOVS     r0,#0
0000a0  9000              STR      r0,[sp,#0]
;;;526    		BLE_GAP_CONN_SEC_MODE_SET_OPEN(&attr_md.read_perm);
0000a2  bf00              NOP      
0000a4  4668              MOV      r0,sp
0000a6  7800              LDRB     r0,[r0,#0]
0000a8  0901              LSRS     r1,r0,#4
0000aa  0109              LSLS     r1,r1,#4
0000ac  1c49              ADDS     r1,r1,#1
0000ae  4668              MOV      r0,sp
0000b0  7001              STRB     r1,[r0,#0]
0000b2  7800              LDRB     r0,[r0,#0]
0000b4  21f0              MOVS     r1,#0xf0
0000b6  4388              BICS     r0,r0,r1
0000b8  3010              ADDS     r0,r0,#0x10
0000ba  4669              MOV      r1,sp
0000bc  7008              STRB     r0,[r1,#0]
0000be  bf00              NOP      
;;;527    		//BLE_GAP_CONN_SEC_MODE_SET_OPEN(&attr_md.write_perm);
;;;528    
;;;529        attr_md.vloc       = BLE_GATTS_VLOC_USER;
0000c0  4668              MOV      r0,sp
0000c2  7880              LDRB     r0,[r0,#2]
0000c4  2106              MOVS     r1,#6
0000c6  4388              BICS     r0,r0,r1
0000c8  1d01              ADDS     r1,r0,#4
0000ca  4668              MOV      r0,sp
0000cc  7081              STRB     r1,[r0,#2]
;;;530        attr_md.rd_auth    = 0;
0000ce  7880              LDRB     r0,[r0,#2]
0000d0  2108              MOVS     r1,#8
0000d2  4388              BICS     r0,r0,r1
0000d4  4601              MOV      r1,r0
0000d6  4668              MOV      r0,sp
0000d8  7081              STRB     r1,[r0,#2]
;;;531        attr_md.wr_auth    = 0;
0000da  7880              LDRB     r0,[r0,#2]
0000dc  2110              MOVS     r1,#0x10
0000de  4388              BICS     r0,r0,r1
0000e0  4601              MOV      r1,r0
0000e2  4668              MOV      r0,sp
0000e4  7081              STRB     r1,[r0,#2]
;;;532        attr_md.vlen       = 1;
0000e6  7880              LDRB     r0,[r0,#2]
0000e8  0841              LSRS     r1,r0,#1
0000ea  0049              LSLS     r1,r1,#1
0000ec  1c49              ADDS     r1,r1,#1
0000ee  4668              MOV      r0,sp
0000f0  7081              STRB     r1,[r0,#2]
;;;533    
;;;534        memset(&attr_char_value, 0, sizeof(attr_char_value));
0000f2  2114              MOVS     r1,#0x14
0000f4  a802              ADD      r0,sp,#8
0000f6  f7fffffe          BL       __aeabi_memclr4
;;;535    
;;;536        attr_char_value.p_uuid    = &ble_uuid;
0000fa  a801              ADD      r0,sp,#4
0000fc  9002              STR      r0,[sp,#8]
;;;537        attr_char_value.p_attr_md = &attr_md;
0000fe  4668              MOV      r0,sp
000100  9003              STR      r0,[sp,#0xc]
;;;538        attr_char_value.init_len  = MAX_SLS_STATUS_LEN;
000102  2101              MOVS     r1,#1
000104  8201              STRH     r1,[r0,#0x10]
;;;539        attr_char_value.init_offs = 0;
000106  2100              MOVS     r1,#0
000108  8241              STRH     r1,[r0,#0x12]
;;;540        attr_char_value.max_len   = MAX_SLS_STATUS_LEN;
00010a  2101              MOVS     r1,#1
00010c  8281              STRH     r1,[r0,#0x14]
;;;541        attr_char_value.p_value   = (uint8_t*)&elec_lock_status;
00010e  480a              LDR      r0,|L4.312|
000110  9006              STR      r0,[sp,#0x18]
;;;542    
;;;543        return sd_ble_gatts_characteristic_add(p_sls->service_handle,
000112  88a0              LDRH     r0,[r4,#4]
000114  4623              MOV      r3,r4
000116  3336              ADDS     r3,r3,#0x36
000118  aa02              ADD      r2,sp,#8
00011a  a908              ADD      r1,sp,#0x20
00011c  dfa2              SVC      #0xa2
;;;544                                               &char_md,
;;;545                                               &attr_char_value,
;;;546                                               &p_sls->elec_lock_status_handles);
;;;547    }
00011e  b00f              ADD      sp,sp,#0x3c
000120  bd30              POP      {r4,r5,pc}
;;;548    
                          ENDP

000122  0000              DCW      0x0000
                  |L4.292|
000124  656c6563          DCB      "elec_lock_status",0
000128  5f6c6f63
00012c  6b5f7374
000130  61747573
000134  00      
000135  00                DCB      0
000136  00                DCB      0
000137  00                DCB      0
                  |L4.312|
                          DCD      elec_lock_status

                          AREA ||i.fan_negative_ion_cmd_char_add||, CODE, READONLY, ALIGN=2

                  fan_negative_ion_cmd_char_add PROC
;;;334     */
;;;335    static uint32_t fan_negative_ion_cmd_char_add(ble_sls_t              * p_sls,
000000  b530              PUSH     {r4,r5,lr}
;;;336                                                	const ble_sls_init_t   * p_sls_init)
;;;337    {
000002  b08f              SUB      sp,sp,#0x3c
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
;;;338        ble_gatts_char_md_t char_md;
;;;339    		ble_gatts_attr_md_t cccd_md;
;;;340        ble_gatts_attr_t    attr_char_value;
;;;341        ble_uuid_t          ble_uuid;
;;;342        ble_gatts_attr_md_t attr_md;
;;;343    
;;;344        memset(&char_md, 0, sizeof(char_md));
000008  211c              MOVS     r1,#0x1c
00000a  a808              ADD      r0,sp,#0x20
00000c  f7fffffe          BL       __aeabi_memclr4
;;;345    	
;;;346        char_md.char_props.notify= 1;
000010  a808              ADD      r0,sp,#0x20
000012  7800              LDRB     r0,[r0,#0]
000014  2110              MOVS     r1,#0x10
000016  4388              BICS     r0,r0,r1
000018  1841              ADDS     r1,r0,r1
00001a  a808              ADD      r0,sp,#0x20
00001c  7001              STRB     r1,[r0,#0]
;;;347        char_md.char_props.read  = 1;
00001e  7800              LDRB     r0,[r0,#0]
000020  2102              MOVS     r1,#2
000022  4388              BICS     r0,r0,r1
000024  1c81              ADDS     r1,r0,#2
000026  a808              ADD      r0,sp,#0x20
000028  7001              STRB     r1,[r0,#0]
;;;348    	  char_md.char_props.write = 1;
00002a  7800              LDRB     r0,[r0,#0]
00002c  2108              MOVS     r1,#8
00002e  4388              BICS     r0,r0,r1
000030  1841              ADDS     r1,r0,r1
000032  a808              ADD      r0,sp,#0x20
000034  7001              STRB     r1,[r0,#0]
;;;349    		char_md.char_user_desc_max_size=MAX_SLS_USER_DESC_LEN;
000036  2114              MOVS     r1,#0x14
000038  4668              MOV      r0,sp
00003a  8501              STRH     r1,[r0,#0x28]
;;;350    	  char_md.char_user_desc_size=sizeof("fan_ngt_ion_cmd");
00003c  2110              MOVS     r1,#0x10
00003e  8541              STRH     r1,[r0,#0x2a]
;;;351    	  char_md.p_char_user_desc=(uint8_t*)"fan_ngt_ion_cmd";
000040  a042              ADR      r0,|L5.332|
000042  9009              STR      r0,[sp,#0x24]
;;;352    
;;;353        char_md.p_char_pf        = NULL;
000044  2000              MOVS     r0,#0
000046  900b              STR      r0,[sp,#0x2c]
;;;354        char_md.p_user_desc_md   = NULL;
000048  900c              STR      r0,[sp,#0x30]
;;;355        char_md.p_cccd_md        = NULL;
00004a  900d              STR      r0,[sp,#0x34]
;;;356        char_md.p_sccd_md        = NULL;
00004c  900e              STR      r0,[sp,#0x38]
;;;357    
;;;358        BLE_UUID_BLE_ASSIGN(ble_uuid, BLE_UUID_FAN_NEGATIVE_ION_CMD_CHAR);
00004e  bf00              NOP      
000050  2101              MOVS     r1,#1
000052  4668              MOV      r0,sp
000054  7181              STRB     r1,[r0,#6]
000056  21fb              MOVS     r1,#0xfb
000058  43c9              MVNS     r1,r1
00005a  8081              STRH     r1,[r0,#4]
00005c  bf00              NOP      
;;;359        //cccd cfg
;;;360        memset(&cccd_md, 0, sizeof(cccd_md));
00005e  2000              MOVS     r0,#0
000060  9007              STR      r0,[sp,#0x1c]
;;;361        BLE_GAP_CONN_SEC_MODE_SET_OPEN(&cccd_md.read_perm);
000062  bf00              NOP      
000064  4668              MOV      r0,sp
000066  7f00              LDRB     r0,[r0,#0x1c]
000068  0901              LSRS     r1,r0,#4
00006a  0109              LSLS     r1,r1,#4
00006c  1c49              ADDS     r1,r1,#1
00006e  4668              MOV      r0,sp
000070  7701              STRB     r1,[r0,#0x1c]
000072  7f00              LDRB     r0,[r0,#0x1c]
000074  21f0              MOVS     r1,#0xf0
000076  4388              BICS     r0,r0,r1
000078  3010              ADDS     r0,r0,#0x10
00007a  4669              MOV      r1,sp
00007c  7708              STRB     r0,[r1,#0x1c]
00007e  bf00              NOP      
;;;362    	  BLE_GAP_CONN_SEC_MODE_SET_OPEN(&cccd_md.write_perm);
000080  bf00              NOP      
000082  4668              MOV      r0,sp
000084  7f40              LDRB     r0,[r0,#0x1d]
000086  0901              LSRS     r1,r0,#4
000088  0109              LSLS     r1,r1,#4
00008a  1c49              ADDS     r1,r1,#1
00008c  4668              MOV      r0,sp
00008e  7741              STRB     r1,[r0,#0x1d]
000090  7f40              LDRB     r0,[r0,#0x1d]
000092  21f0              MOVS     r1,#0xf0
000094  4388              BICS     r0,r0,r1
000096  3010              ADDS     r0,r0,#0x10
000098  4669              MOV      r1,sp
00009a  7748              STRB     r0,[r1,#0x1d]
00009c  bf00              NOP      
;;;363        cccd_md.vloc       = BLE_GATTS_VLOC_STACK;
00009e  7f88              LDRB     r0,[r1,#0x1e]
0000a0  2106              MOVS     r1,#6
0000a2  4388              BICS     r0,r0,r1
0000a4  1c80              ADDS     r0,r0,#2
0000a6  4669              MOV      r1,sp
0000a8  7788              STRB     r0,[r1,#0x1e]
;;;364    
;;;365        memset(&attr_md, 0, sizeof(attr_md));
0000aa  2000              MOVS     r0,#0
0000ac  9000              STR      r0,[sp,#0]
;;;366    		BLE_GAP_CONN_SEC_MODE_SET_OPEN(&attr_md.read_perm);
0000ae  bf00              NOP      
0000b0  4668              MOV      r0,sp
0000b2  7800              LDRB     r0,[r0,#0]
0000b4  0901              LSRS     r1,r0,#4
0000b6  0109              LSLS     r1,r1,#4
0000b8  1c49              ADDS     r1,r1,#1
0000ba  4668              MOV      r0,sp
0000bc  7001              STRB     r1,[r0,#0]
0000be  7800              LDRB     r0,[r0,#0]
0000c0  21f0              MOVS     r1,#0xf0
0000c2  4388              BICS     r0,r0,r1
0000c4  3010              ADDS     r0,r0,#0x10
0000c6  4669              MOV      r1,sp
0000c8  7008              STRB     r0,[r1,#0]
0000ca  bf00              NOP      
;;;367    		BLE_GAP_CONN_SEC_MODE_SET_OPEN(&attr_md.write_perm);
0000cc  bf00              NOP      
0000ce  4668              MOV      r0,sp
0000d0  7840              LDRB     r0,[r0,#1]
0000d2  0901              LSRS     r1,r0,#4
0000d4  0109              LSLS     r1,r1,#4
0000d6  1c49              ADDS     r1,r1,#1
0000d8  4668              MOV      r0,sp
0000da  7041              STRB     r1,[r0,#1]
0000dc  7840              LDRB     r0,[r0,#1]
0000de  21f0              MOVS     r1,#0xf0
0000e0  4388              BICS     r0,r0,r1
0000e2  3010              ADDS     r0,r0,#0x10
0000e4  4669              MOV      r1,sp
0000e6  7048              STRB     r0,[r1,#1]
0000e8  bf00              NOP      
;;;368        attr_md.vloc       = BLE_GATTS_VLOC_USER;
0000ea  4668              MOV      r0,sp
0000ec  7880              LDRB     r0,[r0,#2]
0000ee  2106              MOVS     r1,#6
0000f0  4388              BICS     r0,r0,r1
0000f2  1d01              ADDS     r1,r0,#4
0000f4  4668              MOV      r0,sp
0000f6  7081              STRB     r1,[r0,#2]
;;;369        attr_md.rd_auth    = 0;
0000f8  7880              LDRB     r0,[r0,#2]
0000fa  2108              MOVS     r1,#8
0000fc  4388              BICS     r0,r0,r1
0000fe  4601              MOV      r1,r0
000100  4668              MOV      r0,sp
000102  7081              STRB     r1,[r0,#2]
;;;370        attr_md.wr_auth    = 0;
000104  7880              LDRB     r0,[r0,#2]
000106  2110              MOVS     r1,#0x10
000108  4388              BICS     r0,r0,r1
00010a  4601              MOV      r1,r0
00010c  4668              MOV      r0,sp
00010e  7081              STRB     r1,[r0,#2]
;;;371        attr_md.vlen       = 1;
000110  7880              LDRB     r0,[r0,#2]
000112  0841              LSRS     r1,r0,#1
000114  0049              LSLS     r1,r1,#1
000116  1c49              ADDS     r1,r1,#1
000118  4668              MOV      r0,sp
00011a  7081              STRB     r1,[r0,#2]
;;;372    
;;;373        memset(&attr_char_value, 0, sizeof(attr_char_value));
00011c  2114              MOVS     r1,#0x14
00011e  a802              ADD      r0,sp,#8
000120  f7fffffe          BL       __aeabi_memclr4
;;;374    
;;;375        attr_char_value.p_uuid    = &ble_uuid;
000124  a801              ADD      r0,sp,#4
000126  9002              STR      r0,[sp,#8]
;;;376        attr_char_value.p_attr_md = &attr_md;
000128  4668              MOV      r0,sp
00012a  9003              STR      r0,[sp,#0xc]
;;;377        attr_char_value.init_len  = MAX_SLS_CMD_LEN;
00012c  2101              MOVS     r1,#1
00012e  8201              STRH     r1,[r0,#0x10]
;;;378        attr_char_value.init_offs = 0;
000130  2100              MOVS     r1,#0
000132  8241              STRH     r1,[r0,#0x12]
;;;379        attr_char_value.max_len   = MAX_SLS_CMD_LEN;
000134  2101              MOVS     r1,#1
000136  8281              STRH     r1,[r0,#0x14]
;;;380        attr_char_value.p_value   =(uint8_t*)&fan_negative_ion_cmd;
000138  4808              LDR      r0,|L5.348|
00013a  9006              STR      r0,[sp,#0x18]
;;;381    
;;;382        return sd_ble_gatts_characteristic_add(p_sls->service_handle,
00013c  88a0              LDRH     r0,[r4,#4]
00013e  4623              MOV      r3,r4
000140  331e              ADDS     r3,r3,#0x1e
000142  aa02              ADD      r2,sp,#8
000144  a908              ADD      r1,sp,#0x20
000146  dfa2              SVC      #0xa2
;;;383                                               &char_md,
;;;384                                               &attr_char_value,
;;;385                                               &p_sls->fan_negative_ion_cmd_handles);
;;;386    }
000148  b00f              ADD      sp,sp,#0x3c
00014a  bd30              POP      {r4,r5,pc}
;;;387    static uint32_t fan_negative_ion_status_char_add(ble_sls_t              * p_sls,
                          ENDP

                  |L5.332|
00014c  66616e5f          DCB      "fan_ngt_ion_cmd",0
000150  6e67745f
000154  696f6e5f
000158  636d6400
                  |L5.348|
                          DCD      fan_negative_ion_cmd

                          AREA ||i.fan_negative_ion_status_char_add||, CODE, READONLY, ALIGN=2

                  fan_negative_ion_status_char_add PROC
;;;386    }
;;;387    static uint32_t fan_negative_ion_status_char_add(ble_sls_t              * p_sls,
000000  b530              PUSH     {r4,r5,lr}
;;;388                                                	   const ble_sls_init_t   * p_sls_init)
;;;389    {
000002  b08f              SUB      sp,sp,#0x3c
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
;;;390        ble_gatts_char_md_t char_md;
;;;391    		ble_gatts_attr_md_t cccd_md;
;;;392        ble_gatts_attr_t    attr_char_value;
;;;393        ble_uuid_t          ble_uuid;
;;;394        ble_gatts_attr_md_t attr_md;
;;;395    
;;;396        memset(&char_md, 0, sizeof(char_md));
000008  211c              MOVS     r1,#0x1c
00000a  a808              ADD      r0,sp,#0x20
00000c  f7fffffe          BL       __aeabi_memclr4
;;;397    	
;;;398        char_md.char_props.notify= 1;
000010  a808              ADD      r0,sp,#0x20
000012  7800              LDRB     r0,[r0,#0]
000014  2110              MOVS     r1,#0x10
000016  4388              BICS     r0,r0,r1
000018  1841              ADDS     r1,r0,r1
00001a  a808              ADD      r0,sp,#0x20
00001c  7001              STRB     r1,[r0,#0]
;;;399        char_md.char_props.read  = 1;
00001e  7800              LDRB     r0,[r0,#0]
000020  2102              MOVS     r1,#2
000022  4388              BICS     r0,r0,r1
000024  1c81              ADDS     r1,r0,#2
000026  a808              ADD      r0,sp,#0x20
000028  7001              STRB     r1,[r0,#0]
;;;400    	  //char_md.char_props.write = 1;
;;;401    		char_md.char_user_desc_max_size=MAX_SLS_USER_DESC_LEN;
00002a  2114              MOVS     r1,#0x14
00002c  4668              MOV      r0,sp
00002e  8501              STRH     r1,[r0,#0x28]
;;;402    	  char_md.char_user_desc_size=sizeof("fan_ngt_ion_status");
000030  2113              MOVS     r1,#0x13
000032  8541              STRH     r1,[r0,#0x2a]
;;;403    	  char_md.p_char_user_desc=(uint8_t*)"fan_ngt_ion_status";
000034  a03b              ADR      r0,|L6.292|
000036  9009              STR      r0,[sp,#0x24]
;;;404    
;;;405        char_md.p_char_pf        = NULL;
000038  2000              MOVS     r0,#0
00003a  900b              STR      r0,[sp,#0x2c]
;;;406        char_md.p_user_desc_md   = NULL;
00003c  900c              STR      r0,[sp,#0x30]
;;;407        char_md.p_cccd_md        = NULL;
00003e  900d              STR      r0,[sp,#0x34]
;;;408        char_md.p_sccd_md        = NULL;
000040  900e              STR      r0,[sp,#0x38]
;;;409    
;;;410        BLE_UUID_BLE_ASSIGN(ble_uuid, BLE_UUID_FAN_NEGATIVE_ION_STATUS_CHAR);
000042  bf00              NOP      
000044  2101              MOVS     r1,#1
000046  4668              MOV      r0,sp
000048  7181              STRB     r1,[r0,#6]
00004a  21fa              MOVS     r1,#0xfa
00004c  43c9              MVNS     r1,r1
00004e  8081              STRH     r1,[r0,#4]
000050  bf00              NOP      
;;;411        //cccd cfg
;;;412        memset(&cccd_md, 0, sizeof(cccd_md));
000052  2000              MOVS     r0,#0
000054  9007              STR      r0,[sp,#0x1c]
;;;413        BLE_GAP_CONN_SEC_MODE_SET_OPEN(&cccd_md.read_perm);
000056  bf00              NOP      
000058  4668              MOV      r0,sp
00005a  7f00              LDRB     r0,[r0,#0x1c]
00005c  0901              LSRS     r1,r0,#4
00005e  0109              LSLS     r1,r1,#4
000060  1c49              ADDS     r1,r1,#1
000062  4668              MOV      r0,sp
000064  7701              STRB     r1,[r0,#0x1c]
000066  7f00              LDRB     r0,[r0,#0x1c]
000068  21f0              MOVS     r1,#0xf0
00006a  4388              BICS     r0,r0,r1
00006c  3010              ADDS     r0,r0,#0x10
00006e  4669              MOV      r1,sp
000070  7708              STRB     r0,[r1,#0x1c]
000072  bf00              NOP      
;;;414    	  BLE_GAP_CONN_SEC_MODE_SET_OPEN(&cccd_md.write_perm);
000074  bf00              NOP      
000076  4668              MOV      r0,sp
000078  7f40              LDRB     r0,[r0,#0x1d]
00007a  0901              LSRS     r1,r0,#4
00007c  0109              LSLS     r1,r1,#4
00007e  1c49              ADDS     r1,r1,#1
000080  4668              MOV      r0,sp
000082  7741              STRB     r1,[r0,#0x1d]
000084  7f40              LDRB     r0,[r0,#0x1d]
000086  21f0              MOVS     r1,#0xf0
000088  4388              BICS     r0,r0,r1
00008a  3010              ADDS     r0,r0,#0x10
00008c  4669              MOV      r1,sp
00008e  7748              STRB     r0,[r1,#0x1d]
000090  bf00              NOP      
;;;415        cccd_md.vloc       = BLE_GATTS_VLOC_STACK;
000092  7f88              LDRB     r0,[r1,#0x1e]
000094  2106              MOVS     r1,#6
000096  4388              BICS     r0,r0,r1
000098  1c80              ADDS     r0,r0,#2
00009a  4669              MOV      r1,sp
00009c  7788              STRB     r0,[r1,#0x1e]
;;;416    
;;;417        memset(&attr_md, 0, sizeof(attr_md));
00009e  2000              MOVS     r0,#0
0000a0  9000              STR      r0,[sp,#0]
;;;418    		BLE_GAP_CONN_SEC_MODE_SET_OPEN(&attr_md.read_perm);
0000a2  bf00              NOP      
0000a4  4668              MOV      r0,sp
0000a6  7800              LDRB     r0,[r0,#0]
0000a8  0901              LSRS     r1,r0,#4
0000aa  0109              LSLS     r1,r1,#4
0000ac  1c49              ADDS     r1,r1,#1
0000ae  4668              MOV      r0,sp
0000b0  7001              STRB     r1,[r0,#0]
0000b2  7800              LDRB     r0,[r0,#0]
0000b4  21f0              MOVS     r1,#0xf0
0000b6  4388              BICS     r0,r0,r1
0000b8  3010              ADDS     r0,r0,#0x10
0000ba  4669              MOV      r1,sp
0000bc  7008              STRB     r0,[r1,#0]
0000be  bf00              NOP      
;;;419    		//BLE_GAP_CONN_SEC_MODE_SET_OPEN(&attr_md.write_perm);
;;;420        attr_md.vloc       = BLE_GATTS_VLOC_USER;
0000c0  4668              MOV      r0,sp
0000c2  7880              LDRB     r0,[r0,#2]
0000c4  2106              MOVS     r1,#6
0000c6  4388              BICS     r0,r0,r1
0000c8  1d01              ADDS     r1,r0,#4
0000ca  4668              MOV      r0,sp
0000cc  7081              STRB     r1,[r0,#2]
;;;421        attr_md.rd_auth    = 0;
0000ce  7880              LDRB     r0,[r0,#2]
0000d0  2108              MOVS     r1,#8
0000d2  4388              BICS     r0,r0,r1
0000d4  4601              MOV      r1,r0
0000d6  4668              MOV      r0,sp
0000d8  7081              STRB     r1,[r0,#2]
;;;422        attr_md.wr_auth    = 0;
0000da  7880              LDRB     r0,[r0,#2]
0000dc  2110              MOVS     r1,#0x10
0000de  4388              BICS     r0,r0,r1
0000e0  4601              MOV      r1,r0
0000e2  4668              MOV      r0,sp
0000e4  7081              STRB     r1,[r0,#2]
;;;423        attr_md.vlen       = 1;
0000e6  7880              LDRB     r0,[r0,#2]
0000e8  0841              LSRS     r1,r0,#1
0000ea  0049              LSLS     r1,r1,#1
0000ec  1c49              ADDS     r1,r1,#1
0000ee  4668              MOV      r0,sp
0000f0  7081              STRB     r1,[r0,#2]
;;;424    
;;;425        memset(&attr_char_value, 0, sizeof(attr_char_value));
0000f2  2114              MOVS     r1,#0x14
0000f4  a802              ADD      r0,sp,#8
0000f6  f7fffffe          BL       __aeabi_memclr4
;;;426    
;;;427        attr_char_value.p_uuid    = &ble_uuid;
0000fa  a801              ADD      r0,sp,#4
0000fc  9002              STR      r0,[sp,#8]
;;;428        attr_char_value.p_attr_md = &attr_md;
0000fe  4668              MOV      r0,sp
000100  9003              STR      r0,[sp,#0xc]
;;;429        attr_char_value.init_len  = MAX_SLS_STATUS_LEN;
000102  2101              MOVS     r1,#1
000104  8201              STRH     r1,[r0,#0x10]
;;;430        attr_char_value.init_offs = 0;
000106  2100              MOVS     r1,#0
000108  8241              STRH     r1,[r0,#0x12]
;;;431        attr_char_value.max_len   = MAX_SLS_STATUS_LEN;
00010a  2101              MOVS     r1,#1
00010c  8281              STRH     r1,[r0,#0x14]
;;;432        attr_char_value.p_value   =(uint8_t*)&fan_negative_ion_status;
00010e  480a              LDR      r0,|L6.312|
000110  9006              STR      r0,[sp,#0x18]
;;;433    
;;;434        return sd_ble_gatts_characteristic_add(p_sls->service_handle,
000112  88a0              LDRH     r0,[r4,#4]
000114  4623              MOV      r3,r4
000116  3326              ADDS     r3,r3,#0x26
000118  aa02              ADD      r2,sp,#8
00011a  a908              ADD      r1,sp,#0x20
00011c  dfa2              SVC      #0xa2
;;;435                                               &char_md,
;;;436                                               &attr_char_value,
;;;437                                               &p_sls->fan_negative_ion_status_handles);
;;;438    }
00011e  b00f              ADD      sp,sp,#0x3c
000120  bd30              POP      {r4,r5,pc}
;;;439    /**@brief Function for adding the elec_lock characteristic.
                          ENDP

000122  0000              DCW      0x0000
                  |L6.292|
000124  66616e5f          DCB      "fan_ngt_ion_status",0
000128  6e67745f
00012c  696f6e5f
000130  73746174
000134  757300  
000137  00                DCB      0
                  |L6.312|
                          DCD      fan_negative_ion_status

                          AREA ||i.on_connect||, CODE, READONLY, ALIGN=1

                  on_connect PROC
;;;62      */
;;;63     static void on_connect(ble_sls_t * p_sls, ble_evt_t * p_ble_evt)
000000  888a              LDRH     r2,[r1,#4]
;;;64     {
;;;65         p_sls->conn_handle = p_ble_evt->evt.gap_evt.conn_handle;
000002  87c2              STRH     r2,[r0,#0x3e]
;;;66     }
000004  4770              BX       lr
;;;67     
                          ENDP


                          AREA ||i.on_disconnect||, CODE, READONLY, ALIGN=1

                  on_disconnect PROC
;;;73      */
;;;74     static void on_disconnect(ble_sls_t * p_sls, ble_evt_t * p_ble_evt)
000000  2200              MOVS     r2,#0
;;;75     {
;;;76         UNUSED_PARAMETER(p_ble_evt);
;;;77         p_sls->conn_handle = BLE_CONN_HANDLE_INVALID;
000002  43d2              MVNS     r2,r2
000004  87c2              STRH     r2,[r0,#0x3e]
;;;78     }
000006  4770              BX       lr
;;;79     
                          ENDP


                          AREA ||i.on_write||, CODE, READONLY, ALIGN=1

                  on_write PROC
;;;86      */
;;;87     static void on_write(ble_sls_t * p_sls, ble_evt_t * p_ble_evt)
000000  b570              PUSH     {r4-r6,lr}
;;;88     {
000002  4604              MOV      r4,r0
000004  460e              MOV      r6,r1
;;;89          ble_gatts_evt_write_t * p_evt_write = &p_ble_evt->evt.gatts_evt.params.write;
000006  1db5              ADDS     r5,r6,#6
;;;90     
;;;91     		   if (p_evt_write->handle == p_sls->fan_negative_ion_cmd_handles.value_handle)
000008  8828              LDRH     r0,[r5,#0]
00000a  8be1              LDRH     r1,[r4,#0x1e]
00000c  4288              CMP      r0,r1
00000e  d104              BNE      |L9.26|
;;;92         {
;;;93             bsp_cb_on_fan_negative_ion_cmd_write(p_sls, p_evt_write);
000010  4629              MOV      r1,r5
000012  4620              MOV      r0,r4
000014  f7fffffe          BL       bsp_cb_on_fan_negative_ion_cmd_write
000018  e010              B        |L9.60|
                  |L9.26|
;;;94         }
;;;95     		   else if (p_evt_write->handle == p_sls->uv_lamp_cmd_handles.value_handle)
00001a  8828              LDRH     r0,[r5,#0]
00001c  88e1              LDRH     r1,[r4,#6]
00001e  4288              CMP      r0,r1
000020  d104              BNE      |L9.44|
;;;96         {
;;;97            bsp_cb_on_uv_lamp_cmd_write(p_sls, p_evt_write);
000022  4629              MOV      r1,r5
000024  4620              MOV      r0,r4
000026  f7fffffe          BL       bsp_cb_on_uv_lamp_cmd_write
00002a  e007              B        |L9.60|
                  |L9.44|
;;;98         }
;;;99     		   else if (p_evt_write->handle == p_sls->elec_lock_cmd_handles.value_handle)
00002c  8828              LDRH     r0,[r5,#0]
00002e  8de1              LDRH     r1,[r4,#0x2e]
000030  4288              CMP      r0,r1
000032  d103              BNE      |L9.60|
;;;100        {
;;;101           bsp_cb_on_elec_lock_cmd_write(p_sls, p_evt_write);
000034  4629              MOV      r1,r5
000036  4620              MOV      r0,r4
000038  f7fffffe          BL       bsp_cb_on_elec_lock_cmd_write
                  |L9.60|
;;;102        }
;;;103    }
00003c  bd70              POP      {r4-r6,pc}
;;;104    
                          ENDP


                          AREA ||i.uv_lamp_cmd_char_add||, CODE, READONLY, ALIGN=2

                  uv_lamp_cmd_char_add PROC
;;;167     */
;;;168    static uint32_t uv_lamp_cmd_char_add(ble_sls_t            * p_sls,
000000  b530              PUSH     {r4,r5,lr}
;;;169                                         const ble_sls_init_t * p_sls_init)
;;;170    {
000002  b08f              SUB      sp,sp,#0x3c
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
;;;171        ble_gatts_char_md_t char_md;
;;;172        ble_gatts_attr_md_t cccd_md;
;;;173        ble_gatts_attr_t    attr_char_value;
;;;174        ble_uuid_t          ble_uuid;
;;;175        ble_gatts_attr_md_t attr_md;
;;;176    
;;;177        memset(&cccd_md, 0, sizeof(cccd_md));
000008  2000              MOVS     r0,#0
00000a  9007              STR      r0,[sp,#0x1c]
;;;178    
;;;179        BLE_GAP_CONN_SEC_MODE_SET_OPEN(&cccd_md.read_perm);
00000c  bf00              NOP      
00000e  4668              MOV      r0,sp
000010  7f00              LDRB     r0,[r0,#0x1c]
000012  0901              LSRS     r1,r0,#4
000014  0109              LSLS     r1,r1,#4
000016  1c49              ADDS     r1,r1,#1
000018  4668              MOV      r0,sp
00001a  7701              STRB     r1,[r0,#0x1c]
00001c  7f00              LDRB     r0,[r0,#0x1c]
00001e  21f0              MOVS     r1,#0xf0
000020  4388              BICS     r0,r0,r1
000022  3010              ADDS     r0,r0,#0x10
000024  4669              MOV      r1,sp
000026  7708              STRB     r0,[r1,#0x1c]
000028  bf00              NOP      
;;;180    	  BLE_GAP_CONN_SEC_MODE_SET_OPEN(&cccd_md.write_perm);
00002a  bf00              NOP      
00002c  4668              MOV      r0,sp
00002e  7f40              LDRB     r0,[r0,#0x1d]
000030  0901              LSRS     r1,r0,#4
000032  0109              LSLS     r1,r1,#4
000034  1c49              ADDS     r1,r1,#1
000036  4668              MOV      r0,sp
000038  7741              STRB     r1,[r0,#0x1d]
00003a  7f40              LDRB     r0,[r0,#0x1d]
00003c  21f0              MOVS     r1,#0xf0
00003e  4388              BICS     r0,r0,r1
000040  3010              ADDS     r0,r0,#0x10
000042  4669              MOV      r1,sp
000044  7748              STRB     r0,[r1,#0x1d]
000046  bf00              NOP      
;;;181    	
;;;182        cccd_md.vloc       = BLE_GATTS_VLOC_STACK;
000048  4668              MOV      r0,sp
00004a  7f80              LDRB     r0,[r0,#0x1e]
00004c  2106              MOVS     r1,#6
00004e  4388              BICS     r0,r0,r1
000050  1c81              ADDS     r1,r0,#2
000052  4668              MOV      r0,sp
000054  7781              STRB     r1,[r0,#0x1e]
;;;183    
;;;184        memset(&char_md, 0, sizeof(char_md));
000056  211c              MOVS     r1,#0x1c
000058  a808              ADD      r0,sp,#0x20
00005a  f7fffffe          BL       __aeabi_memclr4
;;;185    
;;;186        char_md.char_props.notify = 1;
00005e  a808              ADD      r0,sp,#0x20
000060  7800              LDRB     r0,[r0,#0]
000062  2110              MOVS     r1,#0x10
000064  4388              BICS     r0,r0,r1
000066  1841              ADDS     r1,r0,r1
000068  a808              ADD      r0,sp,#0x20
00006a  7001              STRB     r1,[r0,#0]
;;;187    	  char_md.char_props.read  = 1;
00006c  7800              LDRB     r0,[r0,#0]
00006e  2102              MOVS     r1,#2
000070  4388              BICS     r0,r0,r1
000072  1c81              ADDS     r1,r0,#2
000074  a808              ADD      r0,sp,#0x20
000076  7001              STRB     r1,[r0,#0]
;;;188    	  char_md.char_props.write = 1;
000078  7800              LDRB     r0,[r0,#0]
00007a  2108              MOVS     r1,#8
00007c  4388              BICS     r0,r0,r1
00007e  1841              ADDS     r1,r0,r1
000080  a808              ADD      r0,sp,#0x20
000082  7001              STRB     r1,[r0,#0]
;;;189    	  char_md.char_user_desc_max_size=16;
000084  2110              MOVS     r1,#0x10
000086  4668              MOV      r0,sp
000088  8501              STRH     r1,[r0,#0x28]
;;;190    	  char_md.char_user_desc_size=sizeof("uv_lamp_cmd");
00008a  210c              MOVS     r1,#0xc
00008c  8541              STRH     r1,[r0,#0x2a]
;;;191    	  char_md.p_char_user_desc=(uint8_t*)"uv_lamp_cmd";
00008e  a030              ADR      r0,|L10.336|
000090  9009              STR      r0,[sp,#0x24]
;;;192        char_md.p_char_pf         = NULL;
000092  2000              MOVS     r0,#0
000094  900b              STR      r0,[sp,#0x2c]
;;;193        char_md.p_user_desc_md    = NULL;
000096  900c              STR      r0,[sp,#0x30]
;;;194        char_md.p_cccd_md         = &cccd_md;
000098  a807              ADD      r0,sp,#0x1c
00009a  900d              STR      r0,[sp,#0x34]
;;;195        char_md.p_sccd_md         = NULL;
00009c  2000              MOVS     r0,#0
00009e  900e              STR      r0,[sp,#0x38]
;;;196    
;;;197        BLE_UUID_BLE_ASSIGN(ble_uuid, BLE_UUID_UV_LAMP_CMD_CHAR);
0000a0  bf00              NOP      
0000a2  2101              MOVS     r1,#1
0000a4  4668              MOV      r0,sp
0000a6  7181              STRB     r1,[r0,#6]
0000a8  21fe              MOVS     r1,#0xfe
0000aa  43c9              MVNS     r1,r1
0000ac  8081              STRH     r1,[r0,#4]
0000ae  bf00              NOP      
;;;198    
;;;199        memset(&attr_md, 0, sizeof(attr_md));
0000b0  2000              MOVS     r0,#0
0000b2  9000              STR      r0,[sp,#0]
;;;200    
;;;201    		BLE_GAP_CONN_SEC_MODE_SET_OPEN(&attr_md.read_perm);
0000b4  bf00              NOP      
0000b6  4668              MOV      r0,sp
0000b8  7800              LDRB     r0,[r0,#0]
0000ba  0901              LSRS     r1,r0,#4
0000bc  0109              LSLS     r1,r1,#4
0000be  1c49              ADDS     r1,r1,#1
0000c0  4668              MOV      r0,sp
0000c2  7001              STRB     r1,[r0,#0]
0000c4  7800              LDRB     r0,[r0,#0]
0000c6  21f0              MOVS     r1,#0xf0
0000c8  4388              BICS     r0,r0,r1
0000ca  3010              ADDS     r0,r0,#0x10
0000cc  4669              MOV      r1,sp
0000ce  7008              STRB     r0,[r1,#0]
0000d0  bf00              NOP      
;;;202    		BLE_GAP_CONN_SEC_MODE_SET_OPEN(&attr_md.write_perm);
0000d2  bf00              NOP      
0000d4  4668              MOV      r0,sp
0000d6  7840              LDRB     r0,[r0,#1]
0000d8  0901              LSRS     r1,r0,#4
0000da  0109              LSLS     r1,r1,#4
0000dc  1c49              ADDS     r1,r1,#1
0000de  4668              MOV      r0,sp
0000e0  7041              STRB     r1,[r0,#1]
0000e2  7840              LDRB     r0,[r0,#1]
0000e4  21f0              MOVS     r1,#0xf0
0000e6  4388              BICS     r0,r0,r1
0000e8  3010              ADDS     r0,r0,#0x10
0000ea  4669              MOV      r1,sp
0000ec  7048              STRB     r0,[r1,#1]
0000ee  bf00              NOP      
;;;203        attr_md.vloc       = BLE_GATTS_VLOC_USER;
0000f0  4668              MOV      r0,sp
0000f2  7880              LDRB     r0,[r0,#2]
0000f4  2106              MOVS     r1,#6
0000f6  4388              BICS     r0,r0,r1
0000f8  1d01              ADDS     r1,r0,#4
0000fa  4668              MOV      r0,sp
0000fc  7081              STRB     r1,[r0,#2]
;;;204        attr_md.rd_auth    = 0;
0000fe  7880              LDRB     r0,[r0,#2]
000100  2108              MOVS     r1,#8
000102  4388              BICS     r0,r0,r1
000104  4601              MOV      r1,r0
000106  4668              MOV      r0,sp
000108  7081              STRB     r1,[r0,#2]
;;;205        attr_md.wr_auth    = 0;
00010a  7880              LDRB     r0,[r0,#2]
00010c  2110              MOVS     r1,#0x10
00010e  4388              BICS     r0,r0,r1
000110  4601              MOV      r1,r0
000112  4668              MOV      r0,sp
000114  7081              STRB     r1,[r0,#2]
;;;206        attr_md.vlen       = 1;
000116  7880              LDRB     r0,[r0,#2]
000118  0841              LSRS     r1,r0,#1
00011a  0049              LSLS     r1,r1,#1
00011c  1c49              ADDS     r1,r1,#1
00011e  4668              MOV      r0,sp
000120  7081              STRB     r1,[r0,#2]
;;;207    
;;;208        memset(&attr_char_value, 0, sizeof(attr_char_value));
000122  2114              MOVS     r1,#0x14
000124  a802              ADD      r0,sp,#8
000126  f7fffffe          BL       __aeabi_memclr4
;;;209    
;;;210        attr_char_value.p_uuid    = &ble_uuid;
00012a  a801              ADD      r0,sp,#4
00012c  9002              STR      r0,[sp,#8]
;;;211        attr_char_value.p_attr_md = &attr_md;
00012e  4668              MOV      r0,sp
000130  9003              STR      r0,[sp,#0xc]
;;;212        attr_char_value.init_len  = MAX_SLS_CMD_LEN;
000132  2101              MOVS     r1,#1
000134  8201              STRH     r1,[r0,#0x10]
;;;213        attr_char_value.init_offs = 0;
000136  2100              MOVS     r1,#0
000138  8241              STRH     r1,[r0,#0x12]
;;;214        attr_char_value.max_len   = MAX_SLS_CMD_LEN;
00013a  2101              MOVS     r1,#1
00013c  8281              STRH     r1,[r0,#0x14]
;;;215        attr_char_value.p_value   =(uint8_t*)&uv_lamp_cmd;
00013e  4807              LDR      r0,|L10.348|
000140  9006              STR      r0,[sp,#0x18]
;;;216    
;;;217        return sd_ble_gatts_characteristic_add(p_sls->service_handle,
000142  88a0              LDRH     r0,[r4,#4]
000144  1da3              ADDS     r3,r4,#6
000146  aa02              ADD      r2,sp,#8
000148  a908              ADD      r1,sp,#0x20
00014a  dfa2              SVC      #0xa2
;;;218                                               &char_md,
;;;219                                               &attr_char_value,
;;;220                                               &p_sls->uv_lamp_cmd_handles);
;;;221    }
00014c  b00f              ADD      sp,sp,#0x3c
00014e  bd30              POP      {r4,r5,pc}
;;;222    
                          ENDP

                  |L10.336|
000150  75765f6c          DCB      "uv_lamp_cmd",0
000154  616d705f
000158  636d6400
                  |L10.348|
                          DCD      uv_lamp_cmd

                          AREA ||i.uv_lamp_door_status_char_add||, CODE, READONLY, ALIGN=2

                  uv_lamp_door_status_char_add PROC
;;;276    
;;;277    static uint32_t uv_lamp_door_status_char_add(ble_sls_t            * p_sls,
000000  b530              PUSH     {r4,r5,lr}
;;;278                                               	 const ble_sls_init_t * p_sls_init)
;;;279    {
000002  b08f              SUB      sp,sp,#0x3c
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
;;;280        ble_gatts_char_md_t char_md;
;;;281    	  ble_gatts_attr_md_t cccd_md;
;;;282        ble_gatts_attr_t    attr_char_value;
;;;283        ble_uuid_t          ble_uuid;
;;;284        ble_gatts_attr_md_t attr_md;
;;;285    
;;;286        memset(&char_md, 0, sizeof(char_md));
000008  211c              MOVS     r1,#0x1c
00000a  a808              ADD      r0,sp,#0x20
00000c  f7fffffe          BL       __aeabi_memclr4
;;;287        char_md.char_props.notify = 1;
000010  a808              ADD      r0,sp,#0x20
000012  7800              LDRB     r0,[r0,#0]
000014  2110              MOVS     r1,#0x10
000016  4388              BICS     r0,r0,r1
000018  1841              ADDS     r1,r0,r1
00001a  a808              ADD      r0,sp,#0x20
00001c  7001              STRB     r1,[r0,#0]
;;;288        char_md.char_props.read  = 1;
00001e  7800              LDRB     r0,[r0,#0]
000020  2102              MOVS     r1,#2
000022  4388              BICS     r0,r0,r1
000024  1c81              ADDS     r1,r0,#2
000026  a808              ADD      r0,sp,#0x20
000028  7001              STRB     r1,[r0,#0]
;;;289    	  //char_md.char_props.write = 1;
;;;290    	
;;;291    		char_md.char_user_desc_max_size=MAX_SLS_USER_DESC_LEN;
00002a  2114              MOVS     r1,#0x14
00002c  4668              MOV      r0,sp
00002e  8501              STRH     r1,[r0,#0x28]
;;;292    	  char_md.char_user_desc_size=sizeof("uv_lamp_door_status");
000030  8541              STRH     r1,[r0,#0x2a]
;;;293    	  char_md.p_char_user_desc=(uint8_t*)"uv_lamp_door_status";
000032  a03b              ADR      r0,|L11.288|
000034  9009              STR      r0,[sp,#0x24]
;;;294        char_md.p_char_pf        = NULL;
000036  2000              MOVS     r0,#0
000038  900b              STR      r0,[sp,#0x2c]
;;;295        char_md.p_user_desc_md   = NULL;
00003a  900c              STR      r0,[sp,#0x30]
;;;296        char_md.p_cccd_md        = NULL;
00003c  900d              STR      r0,[sp,#0x34]
;;;297        char_md.p_sccd_md        = NULL;
00003e  900e              STR      r0,[sp,#0x38]
;;;298    
;;;299        BLE_UUID_BLE_ASSIGN(ble_uuid, BLE_UUID_UV_LAMP_DOOR_STATUS_CHAR);
000040  bf00              NOP      
000042  2101              MOVS     r1,#1
000044  4668              MOV      r0,sp
000046  7181              STRB     r1,[r0,#6]
000048  21fc              MOVS     r1,#0xfc
00004a  43c9              MVNS     r1,r1
00004c  8081              STRH     r1,[r0,#4]
00004e  bf00              NOP      
;;;300        //cccd cfg
;;;301        memset(&cccd_md, 0, sizeof(cccd_md));
000050  2000              MOVS     r0,#0
000052  9007              STR      r0,[sp,#0x1c]
;;;302        BLE_GAP_CONN_SEC_MODE_SET_OPEN(&cccd_md.read_perm);
000054  bf00              NOP      
000056  4668              MOV      r0,sp
000058  7f00              LDRB     r0,[r0,#0x1c]
00005a  0901              LSRS     r1,r0,#4
00005c  0109              LSLS     r1,r1,#4
00005e  1c49              ADDS     r1,r1,#1
000060  4668              MOV      r0,sp
000062  7701              STRB     r1,[r0,#0x1c]
000064  7f00              LDRB     r0,[r0,#0x1c]
000066  21f0              MOVS     r1,#0xf0
000068  4388              BICS     r0,r0,r1
00006a  3010              ADDS     r0,r0,#0x10
00006c  4669              MOV      r1,sp
00006e  7708              STRB     r0,[r1,#0x1c]
000070  bf00              NOP      
;;;303    	  BLE_GAP_CONN_SEC_MODE_SET_OPEN(&cccd_md.write_perm);
000072  bf00              NOP      
000074  4668              MOV      r0,sp
000076  7f40              LDRB     r0,[r0,#0x1d]
000078  0901              LSRS     r1,r0,#4
00007a  0109              LSLS     r1,r1,#4
00007c  1c49              ADDS     r1,r1,#1
00007e  4668              MOV      r0,sp
000080  7741              STRB     r1,[r0,#0x1d]
000082  7f40              LDRB     r0,[r0,#0x1d]
000084  21f0              MOVS     r1,#0xf0
000086  4388              BICS     r0,r0,r1
000088  3010              ADDS     r0,r0,#0x10
00008a  4669              MOV      r1,sp
00008c  7748              STRB     r0,[r1,#0x1d]
00008e  bf00              NOP      
;;;304        cccd_md.vloc       = BLE_GATTS_VLOC_STACK;
000090  7f88              LDRB     r0,[r1,#0x1e]
000092  2106              MOVS     r1,#6
000094  4388              BICS     r0,r0,r1
000096  1c80              ADDS     r0,r0,#2
000098  4669              MOV      r1,sp
00009a  7788              STRB     r0,[r1,#0x1e]
;;;305    
;;;306        memset(&attr_md, 0, sizeof(attr_md));
00009c  2000              MOVS     r0,#0
00009e  9000              STR      r0,[sp,#0]
;;;307    		BLE_GAP_CONN_SEC_MODE_SET_OPEN(&attr_md.read_perm);
0000a0  bf00              NOP      
0000a2  4668              MOV      r0,sp
0000a4  7800              LDRB     r0,[r0,#0]
0000a6  0901              LSRS     r1,r0,#4
0000a8  0109              LSLS     r1,r1,#4
0000aa  1c49              ADDS     r1,r1,#1
0000ac  4668              MOV      r0,sp
0000ae  7001              STRB     r1,[r0,#0]
0000b0  7800              LDRB     r0,[r0,#0]
0000b2  21f0              MOVS     r1,#0xf0
0000b4  4388              BICS     r0,r0,r1
0000b6  3010              ADDS     r0,r0,#0x10
0000b8  4669              MOV      r1,sp
0000ba  7008              STRB     r0,[r1,#0]
0000bc  bf00              NOP      
;;;308    	  //BLE_GAP_CONN_SEC_MODE_SET_OPEN(&attr_md.write_perm);
;;;309        attr_md.vloc       = BLE_GATTS_VLOC_USER;
0000be  4668              MOV      r0,sp
0000c0  7880              LDRB     r0,[r0,#2]
0000c2  2106              MOVS     r1,#6
0000c4  4388              BICS     r0,r0,r1
0000c6  1d01              ADDS     r1,r0,#4
0000c8  4668              MOV      r0,sp
0000ca  7081              STRB     r1,[r0,#2]
;;;310        attr_md.rd_auth    = 0;
0000cc  7880              LDRB     r0,[r0,#2]
0000ce  2108              MOVS     r1,#8
0000d0  4388              BICS     r0,r0,r1
0000d2  4601              MOV      r1,r0
0000d4  4668              MOV      r0,sp
0000d6  7081              STRB     r1,[r0,#2]
;;;311        attr_md.wr_auth    = 0;
0000d8  7880              LDRB     r0,[r0,#2]
0000da  2110              MOVS     r1,#0x10
0000dc  4388              BICS     r0,r0,r1
0000de  4601              MOV      r1,r0
0000e0  4668              MOV      r0,sp
0000e2  7081              STRB     r1,[r0,#2]
;;;312        attr_md.vlen       = 1;
0000e4  7880              LDRB     r0,[r0,#2]
0000e6  0841              LSRS     r1,r0,#1
0000e8  0049              LSLS     r1,r1,#1
0000ea  1c49              ADDS     r1,r1,#1
0000ec  4668              MOV      r0,sp
0000ee  7081              STRB     r1,[r0,#2]
;;;313    
;;;314        memset(&attr_char_value, 0, sizeof(attr_char_value));
0000f0  2114              MOVS     r1,#0x14
0000f2  a802              ADD      r0,sp,#8
0000f4  f7fffffe          BL       __aeabi_memclr4
;;;315    
;;;316        attr_char_value.p_uuid    = &ble_uuid;
0000f8  a801              ADD      r0,sp,#4
0000fa  9002              STR      r0,[sp,#8]
;;;317        attr_char_value.p_attr_md = &attr_md;
0000fc  4668              MOV      r0,sp
0000fe  9003              STR      r0,[sp,#0xc]
;;;318        attr_char_value.init_len  = MAX_SLS_STATUS_LEN;
000100  2101              MOVS     r1,#1
000102  8201              STRH     r1,[r0,#0x10]
;;;319        attr_char_value.init_offs = 0;
000104  2100              MOVS     r1,#0
000106  8241              STRH     r1,[r0,#0x12]
;;;320        attr_char_value.max_len   = MAX_SLS_STATUS_LEN;
000108  2101              MOVS     r1,#1
00010a  8281              STRH     r1,[r0,#0x14]
;;;321        attr_char_value.p_value   =(uint8_t*)&uv_lamp_door_status;
00010c  4809              LDR      r0,|L11.308|
00010e  9006              STR      r0,[sp,#0x18]
;;;322    
;;;323        return sd_ble_gatts_characteristic_add(p_sls->service_handle,
000110  88a0              LDRH     r0,[r4,#4]
000112  4623              MOV      r3,r4
000114  3316              ADDS     r3,r3,#0x16
000116  aa02              ADD      r2,sp,#8
000118  a908              ADD      r1,sp,#0x20
00011a  dfa2              SVC      #0xa2
;;;324                                               &char_md,
;;;325                                               &attr_char_value,
;;;326                                               &p_sls->uv_lamp_door_status_handles);
;;;327    }
00011c  b00f              ADD      sp,sp,#0x3c
00011e  bd30              POP      {r4,r5,pc}
;;;328    /**@brief Function for adding the Body Sensor Location characteristic.
                          ENDP

                  |L11.288|
000120  75765f6c          DCB      "uv_lamp_door_status",0
000124  616d705f
000128  646f6f72
00012c  5f737461
000130  74757300
                  |L11.308|
                          DCD      uv_lamp_door_status

                          AREA ||i.uv_lamp_status_char_add||, CODE, READONLY, ALIGN=2

                  uv_lamp_status_char_add PROC
;;;222    
;;;223    static uint32_t uv_lamp_status_char_add(ble_sls_t            * p_sls,
000000  b530              PUSH     {r4,r5,lr}
;;;224                                            const ble_sls_init_t * p_sls_init)
;;;225    {
000002  b08f              SUB      sp,sp,#0x3c
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
;;;226        ble_gatts_char_md_t char_md;
;;;227        ble_gatts_attr_md_t cccd_md;
;;;228        ble_gatts_attr_t    attr_char_value;
;;;229        ble_uuid_t          ble_uuid;
;;;230        ble_gatts_attr_md_t attr_md;
;;;231    
;;;232        memset(&cccd_md, 0, sizeof(cccd_md));
000008  2000              MOVS     r0,#0
00000a  9007              STR      r0,[sp,#0x1c]
;;;233    
;;;234        BLE_GAP_CONN_SEC_MODE_SET_OPEN(&cccd_md.read_perm);
00000c  bf00              NOP      
00000e  4668              MOV      r0,sp
000010  7f00              LDRB     r0,[r0,#0x1c]
000012  0901              LSRS     r1,r0,#4
000014  0109              LSLS     r1,r1,#4
000016  1c49              ADDS     r1,r1,#1
000018  4668              MOV      r0,sp
00001a  7701              STRB     r1,[r0,#0x1c]
00001c  7f00              LDRB     r0,[r0,#0x1c]
00001e  21f0              MOVS     r1,#0xf0
000020  4388              BICS     r0,r0,r1
000022  3010              ADDS     r0,r0,#0x10
000024  4669              MOV      r1,sp
000026  7708              STRB     r0,[r1,#0x1c]
000028  bf00              NOP      
;;;235    	  BLE_GAP_CONN_SEC_MODE_SET_OPEN(&cccd_md.write_perm);
00002a  bf00              NOP      
00002c  4668              MOV      r0,sp
00002e  7f40              LDRB     r0,[r0,#0x1d]
000030  0901              LSRS     r1,r0,#4
000032  0109              LSLS     r1,r1,#4
000034  1c49              ADDS     r1,r1,#1
000036  4668              MOV      r0,sp
000038  7741              STRB     r1,[r0,#0x1d]
00003a  7f40              LDRB     r0,[r0,#0x1d]
00003c  21f0              MOVS     r1,#0xf0
00003e  4388              BICS     r0,r0,r1
000040  3010              ADDS     r0,r0,#0x10
000042  4669              MOV      r1,sp
000044  7748              STRB     r0,[r1,#0x1d]
000046  bf00              NOP      
;;;236        cccd_md.vloc       = BLE_GATTS_VLOC_STACK;
000048  4668              MOV      r0,sp
00004a  7f80              LDRB     r0,[r0,#0x1e]
00004c  2106              MOVS     r1,#6
00004e  4388              BICS     r0,r0,r1
000050  1c81              ADDS     r1,r0,#2
000052  4668              MOV      r0,sp
000054  7781              STRB     r1,[r0,#0x1e]
;;;237    
;;;238        memset(&char_md, 0, sizeof(char_md));
000056  211c              MOVS     r1,#0x1c
000058  a808              ADD      r0,sp,#0x20
00005a  f7fffffe          BL       __aeabi_memclr4
;;;239    
;;;240        char_md.char_props.notify = 1;
00005e  a808              ADD      r0,sp,#0x20
000060  7800              LDRB     r0,[r0,#0]
000062  2110              MOVS     r1,#0x10
000064  4388              BICS     r0,r0,r1
000066  1841              ADDS     r1,r0,r1
000068  a808              ADD      r0,sp,#0x20
00006a  7001              STRB     r1,[r0,#0]
;;;241    	  char_md.char_props.read  = 1;
00006c  7800              LDRB     r0,[r0,#0]
00006e  2102              MOVS     r1,#2
000070  4388              BICS     r0,r0,r1
000072  1c81              ADDS     r1,r0,#2
000074  a808              ADD      r0,sp,#0x20
000076  7001              STRB     r1,[r0,#0]
;;;242    	  //char_md.char_props.write  = 1;
;;;243    	  char_md.char_user_desc_max_size=MAX_SLS_USER_DESC_LEN;
000078  2114              MOVS     r1,#0x14
00007a  4668              MOV      r0,sp
00007c  8501              STRH     r1,[r0,#0x28]
;;;244    	  char_md.char_user_desc_size=sizeof("uv_lamp_status");
00007e  210f              MOVS     r1,#0xf
000080  8541              STRH     r1,[r0,#0x2a]
;;;245    	  char_md.p_char_user_desc=(uint8_t*)"uv_lamp_status";
000082  a029              ADR      r0,|L12.296|
000084  9009              STR      r0,[sp,#0x24]
;;;246        char_md.p_char_pf         = NULL;
000086  2000              MOVS     r0,#0
000088  900b              STR      r0,[sp,#0x2c]
;;;247        char_md.p_user_desc_md    = NULL;
00008a  900c              STR      r0,[sp,#0x30]
;;;248        char_md.p_cccd_md         = &cccd_md;
00008c  a807              ADD      r0,sp,#0x1c
00008e  900d              STR      r0,[sp,#0x34]
;;;249        char_md.p_sccd_md         = NULL;
000090  2000              MOVS     r0,#0
000092  900e              STR      r0,[sp,#0x38]
;;;250    
;;;251        BLE_UUID_BLE_ASSIGN(ble_uuid, BLE_UUID_UV_LAMP_STATUS_CHAR);
000094  bf00              NOP      
000096  2101              MOVS     r1,#1
000098  4668              MOV      r0,sp
00009a  7181              STRB     r1,[r0,#6]
00009c  21fd              MOVS     r1,#0xfd
00009e  43c9              MVNS     r1,r1
0000a0  8081              STRH     r1,[r0,#4]
0000a2  bf00              NOP      
;;;252    
;;;253        memset(&attr_md, 0, sizeof(attr_md));
0000a4  2000              MOVS     r0,#0
0000a6  9000              STR      r0,[sp,#0]
;;;254    
;;;255    		BLE_GAP_CONN_SEC_MODE_SET_OPEN(&attr_md.read_perm);
0000a8  bf00              NOP      
0000aa  4668              MOV      r0,sp
0000ac  7800              LDRB     r0,[r0,#0]
0000ae  0901              LSRS     r1,r0,#4
0000b0  0109              LSLS     r1,r1,#4
0000b2  1c49              ADDS     r1,r1,#1
0000b4  4668              MOV      r0,sp
0000b6  7001              STRB     r1,[r0,#0]
0000b8  7800              LDRB     r0,[r0,#0]
0000ba  21f0              MOVS     r1,#0xf0
0000bc  4388              BICS     r0,r0,r1
0000be  3010              ADDS     r0,r0,#0x10
0000c0  4669              MOV      r1,sp
0000c2  7008              STRB     r0,[r1,#0]
0000c4  bf00              NOP      
;;;256    		//BLE_GAP_CONN_SEC_MODE_SET_OPEN(&attr_md.write_perm);
;;;257        attr_md.vloc       = BLE_GATTS_VLOC_USER;
0000c6  4668              MOV      r0,sp
0000c8  7880              LDRB     r0,[r0,#2]
0000ca  2106              MOVS     r1,#6
0000cc  4388              BICS     r0,r0,r1
0000ce  1d01              ADDS     r1,r0,#4
0000d0  4668              MOV      r0,sp
0000d2  7081              STRB     r1,[r0,#2]
;;;258        attr_md.rd_auth    = 0;
0000d4  7880              LDRB     r0,[r0,#2]
0000d6  2108              MOVS     r1,#8
0000d8  4388              BICS     r0,r0,r1
0000da  4601              MOV      r1,r0
0000dc  4668              MOV      r0,sp
0000de  7081              STRB     r1,[r0,#2]
;;;259        attr_md.wr_auth    = 0;
0000e0  7880              LDRB     r0,[r0,#2]
0000e2  2110              MOVS     r1,#0x10
0000e4  4388              BICS     r0,r0,r1
0000e6  4601              MOV      r1,r0
0000e8  4668              MOV      r0,sp
0000ea  7081              STRB     r1,[r0,#2]
;;;260        attr_md.vlen       = 1;
0000ec  7880              LDRB     r0,[r0,#2]
0000ee  0841              LSRS     r1,r0,#1
0000f0  0049              LSLS     r1,r1,#1
0000f2  1c49              ADDS     r1,r1,#1
0000f4  4668              MOV      r0,sp
0000f6  7081              STRB     r1,[r0,#2]
;;;261    
;;;262        memset(&attr_char_value, 0, sizeof(attr_char_value));
0000f8  2114              MOVS     r1,#0x14
0000fa  a802              ADD      r0,sp,#8
0000fc  f7fffffe          BL       __aeabi_memclr4
;;;263    
;;;264        attr_char_value.p_uuid    = &ble_uuid;
000100  a801              ADD      r0,sp,#4
000102  9002              STR      r0,[sp,#8]
;;;265        attr_char_value.p_attr_md = &attr_md;
000104  4668              MOV      r0,sp
000106  9003              STR      r0,[sp,#0xc]
;;;266        attr_char_value.init_len  = MAX_SLS_STATUS_LEN;//hrm_encode(p_sls, INITIAL_VALUE_HRM, encoded_initial_hrm);
000108  2101              MOVS     r1,#1
00010a  8201              STRH     r1,[r0,#0x10]
;;;267        attr_char_value.init_offs = 0;
00010c  2100              MOVS     r1,#0
00010e  8241              STRH     r1,[r0,#0x12]
;;;268        attr_char_value.max_len   = MAX_SLS_STATUS_LEN;
000110  2101              MOVS     r1,#1
000112  8281              STRH     r1,[r0,#0x14]
;;;269        attr_char_value.p_value   =(uint8_t*)&uv_lamp_status;
000114  4808              LDR      r0,|L12.312|
000116  9006              STR      r0,[sp,#0x18]
;;;270    
;;;271        return sd_ble_gatts_characteristic_add(p_sls->service_handle,
000118  88a0              LDRH     r0,[r4,#4]
00011a  4623              MOV      r3,r4
00011c  330e              ADDS     r3,r3,#0xe
00011e  aa02              ADD      r2,sp,#8
000120  a908              ADD      r1,sp,#0x20
000122  dfa2              SVC      #0xa2
;;;272                                               &char_md,
;;;273                                               &attr_char_value,
;;;274                                               &p_sls->uv_lamp_status_handles);
;;;275    }
000124  b00f              ADD      sp,sp,#0x3c
000126  bd30              POP      {r4,r5,pc}
;;;276    
                          ENDP

                  |L12.296|
000128  75765f6c          DCB      "uv_lamp_status",0
00012c  616d705f
000130  73746174
000134  757300  
000137  00                DCB      0
                  |L12.312|
                          DCD      uv_lamp_status

                          AREA ||.data||, DATA, ALIGN=0

                  uv_lamp_cmd
000000  00                DCB      0x00
                  fan_negative_ion_cmd
000001  00                DCB      0x00
                  elec_lock_cmd
000002  00                DCB      0x00
                  uv_lamp_status
000003  00                DCB      0x00
                  uv_lamp_door_status
000004  00                DCB      0x00
                  fan_negative_ion_status
000005  00                DCB      0x00
                  elec_lock_status
000006  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\..\\..\\components\\ble\\ble_services\\ble_sls\\ble_sls.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_ble_sls_c_b9dc5839____REV16|
#line 129 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\4.2.0\\CMSIS\\Include\\core_cmInstr.h"
|__asm___9_ble_sls_c_b9dc5839____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_ble_sls_c_b9dc5839____REVSH|
#line 144
|__asm___9_ble_sls_c_b9dc5839____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
