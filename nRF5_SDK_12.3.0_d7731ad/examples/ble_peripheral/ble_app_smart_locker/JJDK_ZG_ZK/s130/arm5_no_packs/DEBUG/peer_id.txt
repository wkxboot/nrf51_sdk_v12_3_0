; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\debug\peer_id.o --asm_dir=.\DEBUG\ --list_dir=.\DEBUG\ --depend=.\debug\peer_id.d --cpu=Cortex-M0 --apcs=interwork -O0 -I..\..\..\config -I..\..\..\..\..\..\components -I..\..\..\..\..\..\components\ble\ble_advertising -I..\..\..\..\..\..\components\ble\ble_dtm -I..\..\..\..\..\..\components\ble\ble_racp -I..\..\..\..\..\..\components\ble\ble_services\ble_ancs_c -I..\..\..\..\..\..\components\ble\ble_services\ble_ans_c -I..\..\..\..\..\..\components\ble\ble_services\ble_bas -I..\..\..\..\..\..\components\ble\ble_services\ble_bas_c -I..\..\..\..\..\..\components\ble\ble_services\ble_cscs -I..\..\..\..\..\..\components\ble\ble_services\ble_cts_c -I..\..\..\..\..\..\components\ble\ble_services\ble_dfu -I..\..\..\..\..\..\components\ble\ble_services\ble_dis -I..\..\..\..\..\..\components\ble\ble_services\ble_gls -I..\..\..\..\..\..\components\ble\ble_services\ble_hids -I..\..\..\..\..\..\components\ble\ble_services\ble_hrs -I..\..\..\..\..\..\components\ble\ble_services\ble_hrs_c -I..\..\..\..\..\..\components\ble\ble_services\ble_hts -I..\..\..\..\..\..\components\ble\ble_services\ble_ias -I..\..\..\..\..\..\components\ble\ble_services\ble_ias_c -I..\..\..\..\..\..\components\ble\ble_services\ble_lbs -I..\..\..\..\..\..\components\ble\ble_services\ble_lbs_c -I..\..\..\..\..\..\components\ble\ble_services\ble_lls -I..\..\..\..\..\..\components\ble\ble_services\ble_nus -I..\..\..\..\..\..\components\ble\ble_services\ble_nus_c -I..\..\..\..\..\..\components\ble\ble_services\ble_rscs -I..\..\..\..\..\..\components\ble\ble_services\ble_rscs_c -I..\..\..\..\..\..\components\ble\ble_services\ble_tps -I..\..\..\..\..\..\components\ble\common -I..\..\..\..\..\..\components\ble\nrf_ble_qwr -I..\..\..\..\..\..\components\ble\peer_manager -I..\..\..\..\..\..\components\boards -I..\..\..\..\..\..\components\drivers_nrf\adc -I..\..\..\..\..\..\components\drivers_nrf\clock -I..\..\..\..\..\..\components\drivers_nrf\common -I..\..\..\..\..\..\components\drivers_nrf\comp -I..\..\..\..\..\..\components\drivers_nrf\delay -I..\..\..\..\..\..\components\drivers_nrf\gpiote -I..\..\..\..\..\..\components\drivers_nrf\hal -I..\..\..\..\..\..\components\drivers_nrf\i2s -I..\..\..\..\..\..\components\drivers_nrf\lpcomp -I..\..\..\..\..\..\components\drivers_nrf\pdm -I..\..\..\..\..\..\components\drivers_nrf\power -I..\..\..\..\..\..\components\drivers_nrf\ppi -I..\..\..\..\..\..\components\drivers_nrf\pwm -I..\..\..\..\..\..\components\drivers_nrf\qdec -I..\..\..\..\..\..\components\drivers_nrf\rng -I..\..\..\..\..\..\components\drivers_nrf\rtc -I..\..\..\..\..\..\components\drivers_nrf\saadc -I..\..\..\..\..\..\components\drivers_nrf\spi_master -I..\..\..\..\..\..\components\drivers_nrf\spi_slave -I..\..\..\..\..\..\components\drivers_nrf\swi -I..\..\..\..\..\..\components\drivers_nrf\timer -I..\..\..\..\..\..\components\drivers_nrf\twi_master -I..\..\..\..\..\..\components\drivers_nrf\twis_slave -I..\..\..\..\..\..\components\drivers_nrf\uart -I..\..\..\..\..\..\components\drivers_nrf\usbd -I..\..\..\..\..\..\components\drivers_nrf\wdt -I..\..\..\..\..\..\components\libraries\bsp -I..\..\..\..\..\..\components\libraries\button -I..\..\..\..\..\..\components\libraries\crc16 -I..\..\..\..\..\..\components\libraries\crc32 -I..\..\..\..\..\..\components\libraries\csense -I..\..\..\..\..\..\components\libraries\csense_drv -I..\..\..\..\..\..\components\libraries\experimental_section_vars -I..\..\..\..\..\..\components\libraries\fds -I..\..\..\..\..\..\components\libraries\fstorage -I..\..\..\..\..\..\components\libraries\gpiote -I..\..\..\..\..\..\components\libraries\hardfault -I..\..\..\..\..\..\components\libraries\hci -I..\..\..\..\..\..\components\libraries\led_softblink -I..\..\..\..\..\..\components\libraries\log -I..\..\..\..\..\..\components\libraries\log\src -I..\..\..\..\..\..\components\libraries\low_power_pwm -I..\..\..\..\..\..\components\libraries\mem_manager -I..\..\..\..\..\..\components\libraries\pwm -I..\..\..\..\..\..\components\libraries\queue -I..\..\..\..\..\..\components\libraries\scheduler -I..\..\..\..\..\..\components\libraries\sensorsim -I..\..\..\..\..\..\components\libraries\slip -I..\..\..\..\..\..\components\libraries\timer -I..\..\..\..\..\..\components\libraries\twi -I..\..\..\..\..\..\components\libraries\uart -I..\..\..\..\..\..\components\libraries\usbd -I..\..\..\..\..\..\components\libraries\usbd\class\audio -I..\..\..\..\..\..\components\libraries\usbd\class\cdc -I..\..\..\..\..\..\components\libraries\usbd\class\cdc\acm -I..\..\..\..\..\..\components\libraries\usbd\class\hid -I..\..\..\..\..\..\components\libraries\usbd\class\hid\generic -I..\..\..\..\..\..\components\libraries\usbd\class\hid\kbd -I..\..\..\..\..\..\components\libraries\usbd\class\hid\mouse -I..\..\..\..\..\..\components\libraries\usbd\class\msc -I..\..\..\..\..\..\components\libraries\usbd\config -I..\..\..\..\..\..\components\libraries\util -I..\..\..\..\..\..\components\softdevice\common\softdevice_handler -I..\..\..\..\..\..\components\softdevice\s130\headers -I..\..\..\..\..\..\components\softdevice\s130\headers\nrf51 -I..\..\..\..\..\..\components\toolchain -I..\..\..\..\..\..\external\segger_rtt -I..\config -I..\..\..\..\..\..\components\ble\ble_services\ble_sls -ID:\development\nordic_ble\src_code\nrf51_sdk_v12_3_0\nRF5_SDK_12.3.0_d7731ad\examples\ble_peripheral\ble_app_smart_locker\JJDK_ZG_ZK\s130\arm5_no_packs\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.2.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\NordicSemiconductor\nRF_DeviceFamilyPack\8.11.1\Device\Include -D__MICROLIB -D_RTE_ -DNRF51 -DBLE_STACK_SUPPORT_REQD -DNRF51822 -DBOARD_JJDK_ZG_ZK -DNRF_SD_BLE_API_VERSION=2 -DS130 -DNRF51 -DSOFTDEVICE_PRESENT -DSWI_DISABLE0 --omf_browse=.\debug\peer_id.crf ..\..\..\..\..\..\components\ble\peer_manager\peer_id.c]
                          THUMB

                          AREA ||i.claim||, CODE, READONLY, ALIGN=2

                  claim PROC
;;;75     
;;;76     static pm_peer_id_t claim(pm_peer_id_t peer_id, uint8_t * mutex_group)
000000  b5f8              PUSH     {r3-r7,lr}
;;;77     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;78         pm_peer_id_t allocated_peer_id = PM_PEER_ID_INVALID;
000006  4e10              LDR      r6,|L1.72|
;;;79         if (peer_id == PM_PEER_ID_INVALID)
000008  4630              MOV      r0,r6
00000a  4284              CMP      r4,r0
00000c  d10b              BNE      |L1.38|
;;;80         {
;;;81             allocated_peer_id = pm_mutex_lock_first_available(mutex_group, PM_PEER_ID_N_AVAILABLE_IDS);
00000e  21ff              MOVS     r1,#0xff
000010  3101              ADDS     r1,#1
000012  4628              MOV      r0,r5
000014  f7fffffe          BL       pm_mutex_lock_first_available
000018  4606              MOV      r6,r0
;;;82             if (allocated_peer_id == PM_PEER_ID_N_AVAILABLE_IDS)
00001a  20ff              MOVS     r0,#0xff
00001c  3001              ADDS     r0,#1
00001e  4286              CMP      r6,r0
000020  d10f              BNE      |L1.66|
;;;83             {
;;;84                 allocated_peer_id = PM_PEER_ID_INVALID;
000022  4626              MOV      r6,r4
000024  e00d              B        |L1.66|
                  |L1.38|
;;;85             }
;;;86         }
;;;87         else if (peer_id < PM_PEER_ID_N_AVAILABLE_IDS)
000026  2cff              CMP      r4,#0xff
000028  dc0b              BGT      |L1.66|
;;;88         {
;;;89             bool lock_success = pm_mutex_lock(mutex_group, peer_id);
00002a  4621              MOV      r1,r4
00002c  4628              MOV      r0,r5
00002e  f7fffffe          BL       pm_mutex_lock
000032  4607              MOV      r7,r0
;;;90             allocated_peer_id = lock_success ? peer_id : PM_PEER_ID_INVALID;
000034  2f00              CMP      r7,#0
000036  d001              BEQ      |L1.60|
000038  4620              MOV      r0,r4
00003a  e000              B        |L1.62|
                  |L1.60|
00003c  4802              LDR      r0,|L1.72|
                  |L1.62|
00003e  4606              MOV      r6,r0
;;;91         }
000040  bf00              NOP      
                  |L1.66|
;;;92         return allocated_peer_id;
000042  4630              MOV      r0,r6
;;;93     }
000044  bdf8              POP      {r3-r7,pc}
;;;94     
                          ENDP

000046  0000              DCW      0x0000
                  |L1.72|
                          DCD      0x0000ffff

                          AREA ||i.internal_state_reset||, CODE, READONLY, ALIGN=1

                  internal_state_reset PROC
;;;61     
;;;62     static void internal_state_reset(pi_t * p_pi)
000000  b510              PUSH     {r4,lr}
;;;63     {
000002  4604              MOV      r4,r0
;;;64         memset(p_pi, 0, sizeof(pi_t));
000004  2140              MOVS     r1,#0x40
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       __aeabi_memclr
;;;65     }
00000c  bd10              POP      {r4,pc}
;;;66     
                          ENDP


                          AREA ||i.next_id_get||, CODE, READONLY, ALIGN=2

                  next_id_get PROC
;;;152    
;;;153    pm_peer_id_t next_id_get(pm_peer_id_t prev_peer_id, uint8_t * mutex_group)
000000  b570              PUSH     {r4-r6,lr}
;;;154    {
000002  4605              MOV      r5,r0
000004  460e              MOV      r6,r1
;;;155        pm_peer_id_t i = (prev_peer_id == PM_PEER_ID_INVALID) ? 0 : (prev_peer_id + 1);
000006  480b              LDR      r0,|L3.52|
000008  4285              CMP      r5,r0
00000a  d101              BNE      |L3.16|
00000c  2000              MOVS     r0,#0
00000e  e000              B        |L3.18|
                  |L3.16|
000010  1c68              ADDS     r0,r5,#1
                  |L3.18|
000012  b284              UXTH     r4,r0
;;;156        for (; i < PM_PEER_ID_N_AVAILABLE_IDS; i++)
000014  e009              B        |L3.42|
                  |L3.22|
;;;157        {
;;;158            if (pm_mutex_lock_status_get(mutex_group, i))
000016  4621              MOV      r1,r4
000018  4630              MOV      r0,r6
00001a  f7fffffe          BL       pm_mutex_lock_status_get
00001e  2800              CMP      r0,#0
000020  d001              BEQ      |L3.38|
;;;159            {
;;;160                return i;
000022  4620              MOV      r0,r4
                  |L3.36|
;;;161            }
;;;162        }
;;;163    
;;;164        return PM_PEER_ID_INVALID;
;;;165    }
000024  bd70              POP      {r4-r6,pc}
                  |L3.38|
000026  1c60              ADDS     r0,r4,#1              ;156
000028  b284              UXTH     r4,r0                 ;156
                  |L3.42|
00002a  2cff              CMP      r4,#0xff              ;156
00002c  ddf3              BLE      |L3.22|
00002e  4801              LDR      r0,|L3.52|
000030  e7f8              B        |L3.36|
;;;166    
                          ENDP

000032  0000              DCW      0x0000
                  |L3.52|
                          DCD      0x0000ffff

                          AREA ||i.peer_id_allocate||, CODE, READONLY, ALIGN=2

                  peer_id_allocate PROC
;;;104    
;;;105    pm_peer_id_t peer_id_allocate(pm_peer_id_t peer_id)
000000  b510              PUSH     {r4,lr}
;;;106    {
000002  4604              MOV      r4,r0
;;;107        return claim(peer_id, m_pi.used_peer_ids);
000004  4902              LDR      r1,|L4.16|
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       claim
;;;108    }
00000c  bd10              POP      {r4,pc}
;;;109    
                          ENDP

00000e  0000              DCW      0x0000
                  |L4.16|
                          DCD      m_pi

                          AREA ||i.peer_id_delete||, CODE, READONLY, ALIGN=2

                  peer_id_delete PROC
;;;110    
;;;111    bool peer_id_delete(pm_peer_id_t peer_id)
000000  b570              PUSH     {r4-r6,lr}
;;;112    {
000002  4604              MOV      r4,r0
;;;113        pm_peer_id_t deleted_peer_id;
;;;114    
;;;115        if (peer_id == PM_PEER_ID_INVALID)
000004  4807              LDR      r0,|L5.36|
000006  4284              CMP      r4,r0
000008  d101              BNE      |L5.14|
;;;116        {
;;;117            return false;
00000a  2000              MOVS     r0,#0
                  |L5.12|
;;;118        }
;;;119    
;;;120        deleted_peer_id = claim(peer_id, m_pi.deleted_peer_ids);
;;;121    
;;;122        return (deleted_peer_id == peer_id);
;;;123    }
00000c  bd70              POP      {r4-r6,pc}
                  |L5.14|
00000e  4906              LDR      r1,|L5.40|
000010  4620              MOV      r0,r4                 ;120
000012  f7fffffe          BL       claim
000016  4605              MOV      r5,r0                 ;120
000018  42a5              CMP      r5,r4                 ;122
00001a  d101              BNE      |L5.32|
00001c  2001              MOVS     r0,#1                 ;122
00001e  e7f5              B        |L5.12|
                  |L5.32|
000020  2000              MOVS     r0,#0                 ;122
000022  e7f3              B        |L5.12|
;;;124    
                          ENDP

                  |L5.36|
                          DCD      0x0000ffff
                  |L5.40|
                          DCD      m_pi+0x20

                          AREA ||i.peer_id_free||, CODE, READONLY, ALIGN=2

                  peer_id_free PROC
;;;125    
;;;126    void peer_id_free(pm_peer_id_t peer_id)
000000  b510              PUSH     {r4,lr}
;;;127    {
000002  4604              MOV      r4,r0
;;;128        release(peer_id, m_pi.used_peer_ids);
000004  4904              LDR      r1,|L6.24|
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       release
;;;129        release(peer_id, m_pi.deleted_peer_ids);
00000c  4902              LDR      r1,|L6.24|
00000e  3120              ADDS     r1,r1,#0x20
000010  4620              MOV      r0,r4
000012  f7fffffe          BL       release
;;;130    }
000016  bd10              POP      {r4,pc}
;;;131    
                          ENDP

                  |L6.24|
                          DCD      m_pi

                          AREA ||i.peer_id_get_next_deleted||, CODE, READONLY, ALIGN=2

                  peer_id_get_next_deleted PROC
;;;185    
;;;186    pm_peer_id_t peer_id_get_next_deleted(pm_peer_id_t prev_peer_id)
000000  b510              PUSH     {r4,lr}
;;;187    {
000002  4604              MOV      r4,r0
;;;188        return next_id_get(prev_peer_id, m_pi.deleted_peer_ids);
000004  4902              LDR      r1,|L7.16|
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       next_id_get
;;;189    }
00000c  bd10              POP      {r4,pc}
;;;190    
                          ENDP

00000e  0000              DCW      0x0000
                  |L7.16|
                          DCD      m_pi+0x20

                          AREA ||i.peer_id_get_next_used||, CODE, READONLY, ALIGN=2

                  peer_id_get_next_used PROC
;;;167    
;;;168    pm_peer_id_t peer_id_get_next_used(pm_peer_id_t peer_id)
000000  b510              PUSH     {r4,lr}
;;;169    {
000002  4604              MOV      r4,r0
;;;170        peer_id = next_id_get(peer_id, m_pi.used_peer_ids);
000004  490b              LDR      r1,|L8.52|
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       next_id_get
00000c  4604              MOV      r4,r0
;;;171    
;;;172        while (peer_id != PM_PEER_ID_INVALID)
00000e  e00b              B        |L8.40|
                  |L8.16|
;;;173        {
;;;174            if (!peer_id_is_deleted(peer_id))
000010  4620              MOV      r0,r4
000012  f7fffffe          BL       peer_id_is_deleted
000016  2800              CMP      r0,#0
000018  d101              BNE      |L8.30|
;;;175            {
;;;176                return peer_id;
00001a  4620              MOV      r0,r4
                  |L8.28|
;;;177            }
;;;178    
;;;179            peer_id = next_id_get(peer_id, m_pi.used_peer_ids);
;;;180        }
;;;181    
;;;182        return peer_id;
;;;183    }
00001c  bd10              POP      {r4,pc}
                  |L8.30|
00001e  4905              LDR      r1,|L8.52|
000020  4620              MOV      r0,r4                 ;179
000022  f7fffffe          BL       next_id_get
000026  4604              MOV      r4,r0                 ;179
                  |L8.40|
000028  4803              LDR      r0,|L8.56|
00002a  4284              CMP      r4,r0                 ;172
00002c  d1f0              BNE      |L8.16|
00002e  4620              MOV      r0,r4                 ;182
000030  e7f4              B        |L8.28|
;;;184    
                          ENDP

000032  0000              DCW      0x0000
                  |L8.52|
                          DCD      m_pi
                  |L8.56|
                          DCD      0x0000ffff

                          AREA ||i.peer_id_init||, CODE, READONLY, ALIGN=2

                  peer_id_init PROC
;;;67     
;;;68     void peer_id_init(void)
000000  b510              PUSH     {r4,lr}
;;;69     {
;;;70         internal_state_reset(&m_pi);
000002  4807              LDR      r0,|L9.32|
000004  f7fffffe          BL       internal_state_reset
;;;71         pm_mutex_init(m_pi.used_peer_ids, PM_PEER_ID_N_AVAILABLE_IDS);
000008  21ff              MOVS     r1,#0xff
00000a  3101              ADDS     r1,#1
00000c  4804              LDR      r0,|L9.32|
00000e  f7fffffe          BL       pm_mutex_init
;;;72         pm_mutex_init(m_pi.deleted_peer_ids, PM_PEER_ID_N_AVAILABLE_IDS);
000012  21ff              MOVS     r1,#0xff
000014  3101              ADDS     r1,#1
000016  4802              LDR      r0,|L9.32|
000018  3020              ADDS     r0,r0,#0x20
00001a  f7fffffe          BL       pm_mutex_init
;;;73     }
00001e  bd10              POP      {r4,pc}
;;;74     
                          ENDP

                  |L9.32|
                          DCD      m_pi

                          AREA ||i.peer_id_is_allocated||, CODE, READONLY, ALIGN=2

                  peer_id_is_allocated PROC
;;;132    
;;;133    bool peer_id_is_allocated(pm_peer_id_t peer_id)
000000  b510              PUSH     {r4,lr}
;;;134    {
000002  4604              MOV      r4,r0
;;;135        if (peer_id < PM_PEER_ID_N_AVAILABLE_IDS)
000004  2cff              CMP      r4,#0xff
000006  dc04              BGT      |L10.18|
;;;136        {
;;;137            return pm_mutex_lock_status_get(m_pi.used_peer_ids, peer_id);
000008  4621              MOV      r1,r4
00000a  4803              LDR      r0,|L10.24|
00000c  f7fffffe          BL       pm_mutex_lock_status_get
                  |L10.16|
;;;138        }
;;;139        return false;
;;;140    }
000010  bd10              POP      {r4,pc}
                  |L10.18|
000012  2000              MOVS     r0,#0                 ;139
000014  e7fc              B        |L10.16|
;;;141    
                          ENDP

000016  0000              DCW      0x0000
                  |L10.24|
                          DCD      m_pi

                          AREA ||i.peer_id_is_deleted||, CODE, READONLY, ALIGN=2

                  peer_id_is_deleted PROC
;;;142    
;;;143    bool peer_id_is_deleted(pm_peer_id_t peer_id)
000000  b510              PUSH     {r4,lr}
;;;144    {
000002  4604              MOV      r4,r0
;;;145        if (peer_id < PM_PEER_ID_N_AVAILABLE_IDS)
000004  2cff              CMP      r4,#0xff
000006  dc04              BGT      |L11.18|
;;;146        {
;;;147            return pm_mutex_lock_status_get(m_pi.deleted_peer_ids, peer_id);
000008  4621              MOV      r1,r4
00000a  4803              LDR      r0,|L11.24|
00000c  f7fffffe          BL       pm_mutex_lock_status_get
                  |L11.16|
;;;148        }
;;;149        return false;
;;;150    }
000010  bd10              POP      {r4,pc}
                  |L11.18|
000012  2000              MOVS     r0,#0                 ;149
000014  e7fc              B        |L11.16|
;;;151    
                          ENDP

000016  0000              DCW      0x0000
                  |L11.24|
                          DCD      m_pi+0x20

                          AREA ||i.peer_id_n_ids||, CODE, READONLY, ALIGN=2

                  peer_id_n_ids PROC
;;;191    
;;;192    uint32_t peer_id_n_ids(void)
000000  b570              PUSH     {r4-r6,lr}
;;;193    {
;;;194        uint32_t n_ids = 0;
000002  2500              MOVS     r5,#0
;;;195    
;;;196        for (pm_peer_id_t i = 0; i < PM_PEER_ID_N_AVAILABLE_IDS; i++)
000004  2400              MOVS     r4,#0
000006  e006              B        |L12.22|
                  |L12.8|
;;;197        {
;;;198            n_ids += pm_mutex_lock_status_get(m_pi.used_peer_ids, i);
000008  4621              MOV      r1,r4
00000a  4805              LDR      r0,|L12.32|
00000c  f7fffffe          BL       pm_mutex_lock_status_get
000010  1945              ADDS     r5,r0,r5
000012  1c60              ADDS     r0,r4,#1              ;196
000014  b284              UXTH     r4,r0                 ;196
                  |L12.22|
000016  2cff              CMP      r4,#0xff              ;196
000018  ddf6              BLE      |L12.8|
;;;199        }
;;;200    
;;;201        return n_ids;
00001a  4628              MOV      r0,r5
;;;202    }
00001c  bd70              POP      {r4-r6,pc}
;;;203    #endif // NRF_MODULE_ENABLED(PEER_MANAGER)
                          ENDP

00001e  0000              DCW      0x0000
                  |L12.32|
                          DCD      m_pi

                          AREA ||i.release||, CODE, READONLY, ALIGN=1

                  release PROC
;;;95     
;;;96     static void release(pm_peer_id_t peer_id, uint8_t * mutex_group)
000000  b570              PUSH     {r4-r6,lr}
;;;97     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;98         if (peer_id < PM_PEER_ID_N_AVAILABLE_IDS)
000006  2cff              CMP      r4,#0xff
000008  dc03              BGT      |L13.18|
;;;99         {
;;;100            pm_mutex_unlock(mutex_group, peer_id);
00000a  4621              MOV      r1,r4
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       pm_mutex_unlock
                  |L13.18|
;;;101        }
;;;102    }
000012  bd70              POP      {r4-r6,pc}
;;;103    
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  m_pi
                          %        64

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\..\\..\\components\\ble\\peer_manager\\peer_id.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_peer_id_c_cbb99fe4____REV16|
#line 129 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\4.2.0\\CMSIS\\Include\\core_cmInstr.h"
|__asm___9_peer_id_c_cbb99fe4____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_peer_id_c_cbb99fe4____REVSH|
#line 144
|__asm___9_peer_id_c_cbb99fe4____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
